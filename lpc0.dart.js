// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.ConstantMap = {"": "Object;length>,_jsObject,_keys>",
  length$0: function() {
    return this.length.call$0();
  },
  containsKey$1: function(key) {
    if ($.$$eq(key, "__proto__") === true)
      return false;
    return this._jsObject.hasOwnProperty(key);
  },
  $index: function(key) {
    if (this.containsKey$1(key) !== true)
      return;
    return this._jsObject[key];
  },
  forEach$1: function(f) {
    $.forEach(this._keys, new $.ConstantMap_forEach_anon(this, f));
  },
  get$keys: function() {
    return $._ConstantMapKeyIterable$(this);
  },
  get$values: function() {
    return $.map(this._keys, new $.ConstantMap_values_anon(this));
  },
  get$isEmpty: function() {
    return $.$$eq(this.length, 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  _throwUnmodifiable$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
  },
  $indexSet: function(key, val) {
    return this._throwUnmodifiable$0();
  },
  remove$1: function(key) {
    return this._throwUnmodifiable$0();
  },
  $isMap: true,
  $asMap: function (V) { return [$.String, V]; }
};

$$._ConstantMapKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $.iterator(this._map._keys);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.length($.$$index(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start>,end,_groups",
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    this._liblib1$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib1$_current == null);
  }
};

$$.StringMatch = {"": "Object;start>,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$.Collection = {"": "Iterable;",
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  }
};

$$.Duration = {"": "Object;inMilliseconds>",
  $add: function(other) {
    return $.Duration$(0, 0, $.$$add(this.inMilliseconds, other.get$inMilliseconds()), 0, 0);
  },
  $sub: function(other) {
    return $.Duration$(0, 0, $.$$sub(this.inMilliseconds, other.get$inMilliseconds()), 0, 0);
  },
  $mul: function(factor) {
    var t2 = this.inMilliseconds;
    if (typeof t2 !== "number")
      return this.$$mul$bailout(2, factor, t2);
    if (typeof factor !== "number")
      return this.$$mul$bailout(1, factor);
    return $.Duration$(0, 0, t2 * factor, 0, 0);
  },
  $$mul$bailout: function(state0, factor, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this.inMilliseconds;
      case 2:
        state0 = 0;
        return $.Duration$(0, 0, $.$$mul(t2, factor), 0, 0);
    }
  },
  $tdiv: function(quotient) {
    if (quotient === 0)
      throw $.$$throw($.IntegerDivisionByZeroException$());
    return $.Duration$(0, 0, $.$$tdiv(this.inMilliseconds, quotient), 0, 0);
  },
  $lt: function(other) {
    return $.$$lt(this.inMilliseconds, other.get$inMilliseconds());
  },
  $gt: function(other) {
    return $.$$gt(this.inMilliseconds, other.get$inMilliseconds());
  },
  $le: function(other) {
    return $.$$le(this.inMilliseconds, other.get$inMilliseconds());
  },
  $ge: function(other) {
    return $.$$ge(this.inMilliseconds, other.get$inMilliseconds());
  },
  get$inHours: function() {
    return $.$$tdiv(this.inMilliseconds, 3600000);
  },
  get$inMinutes: function() {
    return $.$$tdiv(this.inMilliseconds, 60000);
  },
  get$inSeconds: function() {
    return $.$$tdiv(this.inMilliseconds, 1000);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDuration))
      return false;
    return $.$$eq(this.inMilliseconds, other.inMilliseconds);
  },
  get$hashCode: function() {
    return $.hashCode(this.inMilliseconds);
  },
  toString$0: function() {
    var t1, t2, t3, t4, twoDigitMinutes, twoDigitSeconds, threeDigitMs;
    t1 = new $.Duration_toString_threeDigits();
    t2 = new $.Duration_toString_twoDigits();
    t3 = this.inMilliseconds;
    t4 = $.getInterceptor$JSNumber(t3);
    if (t4.$lt(t3, 0) === true)
      return "-" + $.S($.Duration$(0, 0, t4.$negate(t3), 0, 0));
    twoDigitMinutes = t2.call$1($.remainder(this.get$inMinutes(), 60));
    twoDigitSeconds = t2.call$1($.remainder(this.get$inSeconds(), 60));
    threeDigitMs = t1.call$1(t4.remainder$1(t3, 1000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(threeDigitMs);
  },
  $isDuration: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(1, t1, t2);
    for (; $.$$lt(t1.i_1, t2.length) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
      if ($.$$gt(t1.i_1, 0) === true)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(2, t1, t2);
    actualParameters = $.toString(t1.sb_0);
    t1.sb_0 = $.StringBuffer$("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add(t3, t2[i]);
    }
    formalParameters = $.toString(t1.sb_0);
    t2 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer$("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSArrayJSString(t2); $.$$lt(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
            if ($.$$gt(t1.i_1, 0) === true)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          actualParameters = $.toString(t1.sb_0);
          t1.sb_0 = $.StringBuffer$("");
          for (t3 = $.getInterceptor$JSArrayJSString(t2), i = 0; $.CONSTANT9.$lt(i, t3.get$length(t2)); ++i) {
            if (i > 0)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, t3.$index(t2, i));
          }
          formalParameters = $.toString(t1.sb_0);
          t2 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function() {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "FormatException;message"};

$$.IntegerDivisionByZeroException = {"": "Object;",
  toString$0: function() {
    return "IntegerDivisionByZeroException";
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  map$1: function(f) {
    return $.MappedIterable$(this, f);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  any$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$length: function() {
    var it, count;
    it = $.iterator(this);
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.iterator(this).moveNext$0() !== true;
  },
  elementAt$1: function(index) {
    var t1, remaining, t2;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = $.iterator(this), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (remaining === 0)
        return t2;
      --remaining;
    }
    throw $.$$throw($.RangeError$value(index));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, t2, t3;
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = $.iterator(this), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = $.getInterceptor(remaining);
      if (t3.$eq(remaining, 0) === true)
        return t2;
      remaining = t3.$sub(remaining, 1);
    }
    throw $.$$throw($.RangeError$value(index));
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.StringBuffer = {"": "Object;_contents",
  get$length: function() {
    return $.length(this._contents);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  add$1: function(obj) {
    return this.write$1(obj);
  },
  write$1: function(obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  toString$0: function() {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    if (typeof $content === "string")
      this._contents = $content;
    else
      this.write$1($content);
  }
};

$$.ObjectInterceptor = {"": "Object;",
  $mod: function(receiver, a0) {
    return receiver.$mod(a0);
  },
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  $shr: function(receiver, a0) {
    return receiver.$shr(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  any$1: function(receiver, a0) {
    return receiver.any$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  codeUnitAt$1: function(receiver, a0) {
    return receiver.codeUnitAt$1(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  elementAt$1: function(receiver, a0) {
    return receiver.elementAt$1(a0);
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  length$0: function(receiver) {
    return receiver.length$0();
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  map$1: function(receiver, a0) {
    return receiver.map$1(a0);
  },
  remainder$1: function(receiver, a0) {
    return receiver.remainder$1(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  removeRange$2: function(receiver, a0, a1) {
    return receiver.removeRange$2(a0, a1);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  round$0: function(receiver) {
    return receiver.round$0();
  },
  setRange$4: function(receiver, a0, a1, a2, a3) {
    return receiver.setRange$4(a0, a1, a2, a3);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  splitChars$0: function(receiver) {
    return receiver.splitChars$0();
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase$0();
  },
  toRadixString$1: function(receiver, a0) {
    return receiver.toRadixString$1(a0);
  },
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  toUpperCase$0: function(receiver) {
    return receiver.toUpperCase$0();
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(receiver, f) {
    return $.MappedListIterable$(receiver, f);
  },
  elementAt$1: function(receiver, index) {
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  removeRange$2: function(receiver, start, $length) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if ($length === 0)
      return;
    $.checkNull(start);
    $.checkNull($length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if ($length < 0)
      throw $.$$throw($.ArgumentError$($length));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + $length;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - $length;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    this.set$length(receiver, t2);
  },
  setRange$4: function(receiver, start, $length, from, startFrom) {
    var t1;
    $.checkMutable(receiver, "set range");
    if ($.$$eq($length, 0) === true)
      return;
    $.checkNull(start);
    $.checkNull($length);
    $.checkNull(from);
    $.checkNull(startFrom);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof $length === "number" && Math.floor($length) === $length))
      throw $.$$throw($.ArgumentError$($length));
    if (!(typeof startFrom === "number" && Math.floor(startFrom) === startFrom))
      throw $.$$throw($.ArgumentError$(startFrom));
    if ($length < 0)
      throw $.$$throw($.ArgumentError$($length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + $length;
    if (t1 > receiver.length)
      throw $.$$throw($.RangeError$value(t1));
    $.Arrays_copy(from, startFrom, receiver, start, $length);
  },
  any$1: function(receiver, f) {
    return $.IterableMixinWorkaround_any(receiver, f);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.ToString_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  length$0: function($receiver) {
    return this.get$length($receiver).call$0();
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return null;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  remainder$1: function(receiver, b) {
    $.checkNull(b);
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver) === true)
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver) === true)
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = this.truncate$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  round$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toRadixString$1: function(receiver, radix) {
    $.checkNum(radix);
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$(radix));
    return receiver.toString(radix);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result;
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $isJSNumber: true,
  $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;", $is$int: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;", $is$double: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    return this.codeUnitAt$1(receiver, index);
  },
  codeUnitAt$1: function(receiver, index) {
    if (!(typeof index === "number"))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  splitChars$0: function(receiver) {
    return receiver.split("");
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$JSNumber(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  toUpperCase$0: function(receiver) {
    return receiver.toUpperCase();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  length$0: function($receiver) {
    return this.get$length($receiver).call$0();
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.ListQueue = {"": "Collection;_table>,_head,_tail,_modificationCount>",
  get$iterator: function() {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(action) {
    var modificationCount, i, i0, t1;
    modificationCount = this._modificationCount;
    i = this._head;
    if (i !== (i | 0))
      return this.forEach$1$bailout1(1, action, modificationCount, i);
    for (; !(i === this._tail); i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout1: function(state0, action, modificationCount, i) {
    var i0, t1;
    for (; !(i === this._tail); i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      this._checkModification$1(modificationCount);
    }
  },
  get$isEmpty: function() {
    return this._head === this._tail;
  },
  get$length: function() {
    var t1, t3;
    t1 = this._tail;
    t3 = this._head;
    if (t1 !== (t1 | 0))
      return this.get$length$bailout1(1, t1);
    if (t3 !== (t3 | 0))
      return this.get$length$bailout1(2, t1, t3);
    return (t1 - t3 & this._table.length - 1) >>> 0;
  },
  get$length$bailout1: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._tail;
      case 1:
        state0 = 0;
        t3 = this._head;
      case 2:
        state0 = 0;
        return $.$$and($.$$sub(t1, t3), this._table.length - 1);
    }
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  elementAt$1: function(index) {
    var t1, t2, t3, t4;
    if (typeof index !== "number")
      return this.elementAt$1$bailout1(1, index);
    if (!(index < 0)) {
      t1 = this.get$length();
      if (typeof t1 !== "number")
        return this.elementAt$1$bailout1(2, index, t1, $.CONSTANT7);
      t1 = index > t1;
    } else
      t1 = true;
    if (t1)
      throw $.$$throw($.RangeError$range(index, 0, this.get$length()));
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    t4 = (t2 + index & t3 - 1) >>> 0;
    if (t4 < 0 || t4 >= t3)
      throw $.ioore(t4);
    return t1[t4];
  },
  elementAt$1$bailout1: function(state0, index, t2, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSNumber(index);
      case 2:
        var t4, t3;
        if (state0 === 2 || state0 === 0 && t1.$lt(index, 0) !== true)
          switch (state0) {
            case 0:
              t2 = this.get$length();
            case 2:
              state0 = 0;
              t4 = t1.$gt(index, t2) === true;
              t1 = t4;
          }
        else
          t1 = true;
        if (t1)
          throw $.$$throw($.RangeError$range(index, 0, this.get$length()));
        t1 = this._table;
        t2 = this._head;
        if (typeof index !== "number")
          throw $.iae(index);
        t3 = t1.length;
        t4 = (t2 + index & t3 - 1) >>> 0;
        if (t4 < 0 || t4 >= t3)
          throw $.ioore(t4);
        return t1[t4];
    }
  },
  toList$0: function() {
    var list = $.List_List(this.get$length());
    this._writeToList$1(list);
    return list;
  },
  add$1: function(element) {
    this._add$1(element);
  },
  remove$1: function(object) {
    var i, i0, t1;
    i = this._head;
    if (i !== (i | 0))
      return this.remove$1$bailout1(1, object, i);
    for (; !(i === this._tail); i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq(t1[i], object) === true) {
        this._remove$1(i);
        return;
      }
    }
    this._modificationCount = this._modificationCount + 1;
  },
  remove$1$bailout1: function(state0, object, i) {
    var i0, t1;
    for (; !(i === this._tail); i0 = (i + 1 & this._table.length - 1) >>> 0, i = i0) {
      t1 = this._table;
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq(t1[i], object) === true) {
        this._remove$1(i);
        return;
      }
    }
    this._modificationCount = this._modificationCount + 1;
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  addLast$1: function(element) {
    this._add$1(element);
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function() {
    var t1, t2;
    if (this._head === this._tail)
      throw $.$$throw($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    this._tail = $.$$and($.$$sub(this._tail, 1), this._table.length - 1);
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _checkModification$1: function(expectedModificationCount) {
    var t2 = this._modificationCount;
    if (typeof expectedModificationCount !== "number")
      return this._checkModification$1$bailout(1, expectedModificationCount);
    if (!(expectedModificationCount === t2))
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _checkModification$1$bailout: function(state0, expectedModificationCount) {
    if ($.$$eq(expectedModificationCount, this._modificationCount) !== true)
      throw $.$$throw($.ConcurrentModificationError$(this));
  },
  _add$1: function(element) {
    var t1, t2;
    t1 = this._table;
    t2 = this._tail;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = $.$$and(t2 + 1, this._table.length - 1);
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _remove$1: function(offset) {
    var mask, t1, t2, i, t3, prevOffset, nextOffset;
    if (offset !== (offset | 0))
      return this._remove$1$bailout(1, offset);
    mask = this._table.length - 1;
    if ((offset - this._head & mask) >>> 0 < $.$$and($.$$sub(this._tail, offset), mask)) {
      for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._head, !(i === t3); i = prevOffset) {
        prevOffset = (i - 1 & mask) >>> 0;
        if (prevOffset < 0 || prevOffset >= t2)
          throw $.ioore(prevOffset);
        t3 = t1[prevOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t3;
      }
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return (offset + 1 & mask) >>> 0;
    } else {
      this._tail = $.$$and($.$$sub(this._tail, 1), mask);
      for (t1 = this._table, t2 = t1.length, i = offset; t3 = this._tail, !(i === t3); i = nextOffset) {
        nextOffset = (i + 1 & mask) >>> 0;
        if (nextOffset < 0 || nextOffset >= t2)
          throw $.ioore(nextOffset);
        t3 = t1[nextOffset];
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        t1[i] = t3;
      }
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2)
        throw $.ioore(t3);
      t1[t3] = null;
      return offset;
    }
  },
  _remove$1$bailout: function(state0, offset) {
    var mask, t1, i, t2, prevOffset, t3, t4, t5, nextOffset;
    mask = this._table.length - 1;
    t1 = $.getInterceptor$JSNumber(offset);
    if ($.$$and(t1.$sub(offset, this._head), mask) < $.$$and($.$$sub(this._tail, offset), mask)) {
      for (i = offset; t2 = $.getInterceptor(i), t2.$eq(i, this._head) !== true; i = prevOffset) {
        prevOffset = $.$$and(t2.$sub(i, 1), mask);
        t3 = this._table;
        if (prevOffset !== (prevOffset | 0))
          throw $.iae(prevOffset);
        t4 = t3.length;
        if (prevOffset < 0 || prevOffset >= t4)
          throw $.ioore(prevOffset);
        t5 = t3[prevOffset];
        if (i !== (i | 0))
          throw $.iae(i);
        if (i < 0 || i >= t4)
          throw $.ioore(i);
        t3[i] = t5;
      }
      t2 = this._table;
      t3 = this._head;
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2.length)
        throw $.ioore(t3);
      t2[t3] = null;
      this._head = (t3 + 1 & mask) >>> 0;
      return $.$$and(t1.$add(offset, 1), mask);
    } else {
      this._tail = $.$$and($.$$sub(this._tail, 1), mask);
      for (i = offset; t1 = $.getInterceptor(i), t1.$eq(i, this._tail) !== true; i = nextOffset) {
        nextOffset = $.$$and(t1.$add(i, 1), mask);
        t2 = this._table;
        if (nextOffset !== (nextOffset | 0))
          throw $.iae(nextOffset);
        t3 = t2.length;
        if (nextOffset < 0 || nextOffset >= t3)
          throw $.ioore(nextOffset);
        t4 = t2[nextOffset];
        if (i !== (i | 0))
          throw $.iae(i);
        if (i < 0 || i >= t3)
          throw $.ioore(i);
        t2[i] = t4;
      }
      t1 = this._table;
      t2 = this._tail;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t1[t2] = null;
      return offset;
    }
  },
  _grow$0: function() {
    var newTable, t1, t2, t3, split;
    newTable = $.List_List$fixedLength(this._table.length * 2, null);
    t1 = this._table;
    t2 = t1.length;
    t3 = this._head;
    split = t2 - t3;
    $.CONSTANT2.setRange$4(newTable, 0, split, t1, t3);
    $.CONSTANT2.setRange$4(newTable, split, this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  _writeToList$1: function(target) {
    var t1, t2, $length, firstPartSize;
    t1 = $.CONSTANT7.$le(this._head, this._tail);
    t2 = this._head;
    if (t1) {
      $length = $.$$sub(this._tail, t2);
      $.CONSTANT2.setRange$4(target, 0, $length, this._table, this._head);
      return $length;
    } else {
      t1 = this._table;
      firstPartSize = t1.length - t2;
      $.CONSTANT2.setRange$4(target, 0, firstPartSize, t1, t2);
      $.CONSTANT2.setRange$4(target, firstPartSize, this._tail, this._table, 0);
      return $.$$add(this._tail, firstPartSize);
    }
  },
  ListQueue$1: function(initialCapacity) {
    if (initialCapacity == null || $.$$lt(initialCapacity, 8) === true)
      initialCapacity = 8;
    else if ($.ListQueue__isPowerOf2(initialCapacity) !== true)
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    this._table = $.List_List$fixedLength(initialCapacity, null);
  },
  $asCollection: function() {
    return null;
  },
  $isCollection: function() {
    return true;
  }
};

$$._ListQueueIterator = {"": "Object;_queue,_end,_modificationCount>,_liblib2$_position,_liblib2$_current",
  get$current: function() {
    return this._liblib2$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3, t4;
    t1 = this._queue;
    t1._checkModification$1(this._modificationCount);
    if ($.$$eq(this._liblib2$_position, this._end) === true) {
      this._liblib2$_current = null;
      return false;
    }
    t2 = t1._table;
    t3 = this._liblib2$_position;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    this._liblib2$_current = t2[t3];
    t4 = this._liblib2$_position;
    if (t4 !== (t4 | 0))
      return this.moveNext$0$bailout(1, t4, t1);
    this._liblib2$_position = (t4 + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  moveNext$0$bailout: function(state0, t4, t1) {
    this._liblib2$_position = $.$$and($.$$add(t4, 1), t1._table.length - 1);
    return true;
  }
};

$$._DeadEntry = {"": "Object;"};

$$._NullKey = {"": "Object;",
  get$hashCode: function() {
    return $.CONSTANT6.get$hashCode(null);
  }
};

$$._HashTable = {"": "Object;_table>,_modificationCount>",
  _key$1: function(offset) {
    var t1, key;
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._key$1$bailout(1, offset, t1);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    key = t1[offset];
    if (!(key === $.CONSTANT5))
      return key;
    return;
  },
  _key$1$bailout: function(state0, offset, t1) {
    var key = $.$$index(t1, offset);
    if (!(key === $.CONSTANT5))
      return key;
    return;
  },
  _setKey$2: function(offset, key) {
    if (key == null)
      key = $.CONSTANT5;
    $.$$indexSet(this._table, offset, key);
  },
  get$_elementCount: function() {
    return $.$$sub(this._entryCount, this._deletedCount);
  },
  get$_entrySize: function() {
    return 1;
  },
  _checkModification$1: function(expectedModificationCount) {
    if (!(this._modificationCount === expectedModificationCount))
      throw $.$$throw($.ConcurrentModificationError$(this._container));
  },
  _recordModification$0: function() {
    this._modificationCount = this._modificationCount + 1 & 1073741823;
  },
  _createTable$1: function(capacity) {
    return $.List_List$fixedLength($.$$mul(capacity, this.get$_entrySize()), null);
  },
  _firstProbe$2: function(hashCode, capacity) {
    return $.$$and(hashCode, $.$$sub(capacity, 1));
  },
  _nextProbe$3: function(previousIndex, probeCount, capacity) {
    if (typeof capacity !== "number")
      return this._nextProbe$3$bailout(1, previousIndex, probeCount, capacity);
    return (previousIndex + probeCount & capacity - 1) >>> 0;
  },
  _nextProbe$3$bailout: function(state0, previousIndex, probeCount, capacity) {
    var t2 = $.$$sub(capacity, 1);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return (previousIndex + probeCount & t2) >>> 0;
  },
  _isFree$1: function(marker) {
    return marker == null || marker === $.CONSTANT4;
  },
  _probeForAdd$2: function(hashCode, object) {
    var entrySize, index, firstTombstone, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = this._firstProbe$2(hashCode, this._capacity);
    for (firstTombstone = -1, probeCount = 0; true;) {
      if (typeof entrySize !== "number")
        throw $.iae(entrySize);
      offset = index * entrySize;
      entry = $.$$index(this._table, offset);
      if (entry === $.CONSTANT4) {
        if (firstTombstone < 0)
          firstTombstone = offset;
      } else if (entry == null) {
        if (firstTombstone < 0)
          return offset;
        return firstTombstone;
      } else if (($.CONSTANT5 === entry ? this._equals$2(null, object) : this._equals$2(entry, object)) === true)
        return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _probeForLookup$2: function(hashCode, object) {
    var entrySize, index, probeCount, offset, entry;
    entrySize = this.get$_entrySize();
    index = this._firstProbe$2(hashCode, this._capacity);
    for (probeCount = 0; true;) {
      if (typeof entrySize !== "number")
        throw $.iae(entrySize);
      offset = index * entrySize;
      entry = $.$$index(this._table, offset);
      if (entry == null)
        return -1;
      else if (!($.CONSTANT4 === entry))
        if (($.CONSTANT5 === entry ? this._equals$2(null, object) : this._equals$2(entry, object)) === true)
          return offset;
      ++probeCount;
      index = this._nextProbe$3(index, probeCount, this._capacity);
    }
  },
  _equals$2: function(element, other) {
    return $.$$eq(element, other);
  },
  _hashCodeOf$1: function(object) {
    return $.hashCode(object);
  },
  _checkCapacity$0: function() {
    var freeCount, t1;
    freeCount = $.$$sub(this._capacity, this._entryCount);
    t1 = $.getInterceptor$JSNumber(freeCount);
    if ($.$$lt(t1.$mul(freeCount, 4), this._capacity) === true || t1.$lt(freeCount, this._deletedCount) === true)
      this._grow$1($.$$sub(this._entryCount, this._deletedCount));
  },
  _grow$1: function(contentCount) {
    var capacity, minCapacity, oldTable;
    capacity = this._capacity;
    if (typeof capacity !== "number")
      return this._grow$1$bailout(1, contentCount, capacity);
    minCapacity = $.$$mul(contentCount, 2);
    if (typeof minCapacity !== "number")
      return this._grow$1$bailout(2, 0, capacity, minCapacity);
    for (; capacity < minCapacity;)
      capacity *= 2;
    oldTable = this._table;
    this._table = this._createTable$1(capacity);
    this._capacity = capacity;
    this._entryCount = 0;
    this._deletedCount = 0;
    this._addAllEntries$1(oldTable);
    this._recordModification$0();
  },
  _grow$1$bailout: function(state0, contentCount, capacity, minCapacity) {
    switch (state0) {
      case 0:
        capacity = this._capacity;
      case 1:
        state0 = 0;
        minCapacity = $.$$mul(contentCount, 2);
      case 2:
        var t1, oldTable;
        state0 = 0;
        for (; t1 = $.getInterceptor$JSNumber(capacity), t1.$lt(capacity, minCapacity) === true;)
          capacity = t1.$mul(capacity, 2);
        oldTable = this._table;
        this._table = this._createTable$1(capacity);
        this._capacity = capacity;
        this._entryCount = 0;
        this._deletedCount = 0;
        this._addAllEntries$1(oldTable);
        this._recordModification$0();
    }
  },
  _addAllEntries$1: function(oldTable) {
    var i, t1, object;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._addAllEntries$1$bailout(1, oldTable);
    i = 0;
    while (t1 = oldTable.length, i < t1) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      object = oldTable[i];
      if (!this._isFree$1(object))
        this._copyEntry$3(oldTable, i, this._put$1(object));
      t1 = this.get$_entrySize();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      i += t1;
    }
  },
  _addAllEntries$1$bailout: function(state0, oldTable) {
    var t1, i, object, t2;
    t1 = $.getInterceptor$JSArrayJSString(oldTable);
    i = 0;
    while ($.CONSTANT7.$lt(i, t1.get$length(oldTable))) {
      object = t1.$index(oldTable, i);
      if (!this._isFree$1(object))
        this._copyEntry$3(oldTable, i, this._put$1(object));
      t2 = this.get$_entrySize();
      if (typeof t2 !== "number")
        throw $.iae(t2);
      i += t2;
    }
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
  },
  _get$1: function(key) {
    return this._probeForLookup$2(this._hashCodeOf$1(key), key);
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2(this._hashCodeOf$1(key), key);
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._put$1$bailout(1, key, offset, t1);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry == null) {
      t1 = this._entryCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout(2, key, offset, t1);
      this._entryCount = t1 + 1;
    } else if (oldEntry === $.CONSTANT4) {
      t1 = this._deletedCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout(3, key, offset, t1);
      this._deletedCount = t1 - 1;
    } else
      return offset;
    this._setKey$2(offset, key);
    this._recordModification$0();
    return offset;
  },
  _put$1$bailout: function(state0, key, offset, t1) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2(this._hashCodeOf$1(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$$index(t1, offset);
      default:
        var oldEntry;
        if (state0 === 2 || state0 === 0 && oldEntry == null)
          switch (state0) {
            case 0:
              t1 = this._entryCount;
            case 2:
              state0 = 0;
              this._entryCount = $.$$add(t1, 1);
          }
        else
          switch (state0) {
            case 0:
            case 3:
              if (state0 === 3 || state0 === 0 && oldEntry === $.CONSTANT4)
                switch (state0) {
                  case 0:
                    t1 = this._deletedCount;
                  case 3:
                    state0 = 0;
                    this._deletedCount = $.$$sub(t1, 1);
                }
              else
                return offset;
          }
        this._setKey$2(offset, key);
        this._recordModification$0();
        return offset;
    }
  },
  _remove$1: function(key) {
    var offset = this._probeForLookup$2(this._hashCodeOf$1(key), key);
    if ($.$$ge(offset, 0) === true)
      this._deleteEntry$1(offset);
    return offset;
  },
  _deleteEntry$1: function(offset) {
    this._setKey$2(offset, $.CONSTANT4);
    this._deletedCount = $.$$add(this._deletedCount, 1);
    this._recordModification$0();
  },
  _HashTable$1: function(initialCapacity) {
    this._table = this._createTable$1(initialCapacity);
  }
};

$$._HashTableIterable = {"": "Iterable;",
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq(this._hashTable.get$_elementCount(), 0);
  },
  forEach$1: function(action) {
    var t1, entrySize, table, modificationCount, offset, t2, entry;
    t1 = this._hashTable;
    entrySize = t1.get$_entrySize();
    table = t1._table;
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.forEach$1$bailout1(1, action, entrySize, t1, table);
    modificationCount = t1._modificationCount;
    offset = 0;
    while (t2 = table.length, offset < t2) {
      if (offset !== (offset | 0))
        throw $.iae(offset);
      if (offset < 0 || offset >= t2)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
      if (typeof entrySize !== "number")
        throw $.iae(entrySize);
      offset += entrySize;
    }
  },
  forEach$1$bailout1: function(state0, action, entrySize, t1, table) {
    var modificationCount, t2, offset, entry;
    modificationCount = t1._modificationCount;
    t2 = $.getInterceptor$JSArrayJSString(table);
    offset = 0;
    while ($.CONSTANT7.$lt(offset, t2.get$length(table))) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry))
        action.call$1(this._valueAt$2(offset, entry));
      t1._checkModification$1(modificationCount);
      if (typeof entrySize !== "number")
        throw $.iae(entrySize);
      offset += entrySize;
    }
  }
};

$$._HashTableIterator = {"": "Object;_modificationCount>",
  moveNext$0: function() {
    var t1, table, entrySize, t2, t3, t5, entry;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    table = t1.get$_table();
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.moveNext$0$bailout(1, t1, table);
    entrySize = t1.get$_entrySize();
    if (typeof entrySize !== "number")
      return this.moveNext$0$bailout(2, t1, table, entrySize);
    t2 = $.getInterceptor$JSArrayJSString(table);
    while (true) {
      t3 = this._offset;
      t5 = table.length;
      if (typeof t3 !== "number")
        return this.moveNext$0$bailout(3, t1, table, entrySize, t3, t2);
      if (!(t3 < t5))
        break;
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t5)
        throw $.ioore(t3);
      entry = table[t3];
      this._offset = t3 + entrySize;
      if (!t1._isFree$1(entry)) {
        this._liblib2$_current = this._valueAt$2(t3, entry);
        return true;
      }
    }
    this._liblib2$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, table, entrySize, t3, t2, t5, currentOffset) {
    switch (state0) {
      case 0:
        t1 = this._hashTable;
        t1._checkModification$1(this._modificationCount);
        table = t1.get$_table();
      case 1:
        state0 = 0;
        entrySize = t1.get$_entrySize();
      case 2:
        state0 = 0;
        t2 = $.getInterceptor$JSArrayJSString(table);
      default:
        var entry;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t3 = this._offset;
              case 3:
                state0 = 0;
                t5 = t2.get$length(table);
              case 4:
                state0 = 0;
                if (!($.$$lt(t3, t5) === true))
                  break L0;
                currentOffset = this._offset;
              case 5:
                state0 = 0;
                entry = t2.$index(table, currentOffset);
                this._offset = $.$$add(currentOffset, entrySize);
                if (!t1._isFree$1(entry)) {
                  this._liblib2$_current = this._valueAt$2(currentOffset, entry);
                  return true;
                }
            }
        this._liblib2$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib2$_current;
  }
};

$$._HashTableKeyIterable = {"": "_HashTableIterable;_hashTable",
  get$iterator: function() {
    return $._HashTableKeyIterator$(this._hashTable);
  },
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT5)
      return;
    return key;
  }
};

$$._HashTableKeyIterator = {"": "_HashTableIterator;_hashTable,_modificationCount,_offset,_liblib2$_current",
  _valueAt$2: function(offset, key) {
    if (key === $.CONSTANT5)
      return;
    return key;
  }
};

$$._HashTableValueIterable = {"": "_HashTableIterable;_entryIndex,_hashTable",
  get$iterator: function() {
    return $._HashTableValueIterator$(this._hashTable, this._entryIndex);
  },
  _valueAt$2: function(offset, key) {
    var t1, t3;
    t1 = this._hashTable._table;
    t3 = this._entryIndex;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._valueAt$2$bailout1(1, offset, t1);
    t3 = offset + t3;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  _valueAt$2$bailout1: function(state0, offset, t1) {
    return $.$$index(t1, offset + this._entryIndex);
  }
};

$$._HashTableValueIterator = {"": "_HashTableIterator;_entryIndex,_hashTable,_modificationCount,_offset,_liblib2$_current",
  _valueAt$2: function(offset, key) {
    var t2, t4;
    t2 = this._hashTable.get$_table();
    t4 = this._entryIndex;
    if (typeof offset !== "number")
      return this._valueAt$2$bailout1(1, offset);
    if (typeof t4 !== "number")
      return this._valueAt$2$bailout1(3, offset, t2, t4);
    t4 = offset + t4;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._valueAt$2$bailout1(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _valueAt$2$bailout1: function(state0, offset, t2, t4) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._hashTable.get$_table();
      case 2:
        state0 = 0;
        t4 = this._entryIndex;
      case 3:
        state0 = 0;
        return $.$$index(t2, $.$$add(offset, t4));
    }
  }
};

$$._HashMapTable = {"": "_HashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 2;
  },
  _value$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t4 = offset + 1;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._value$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _value$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index(t2, $.$$add(offset, 1));
    }
  },
  _setValue$2: function(offset, value) {
    $.$$indexSet(this._table, $.$$add(offset, 1), value);
  },
  _copyEntry$3: function(fromTable, fromOffset, toOffset) {
    var t2, t4, t5;
    t2 = this._table;
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t4 = toOffset + 1;
    if (typeof fromTable !== "string" && (typeof fromTable !== "object" || fromTable === null || fromTable.constructor !== Array && !fromTable.$isJavaScriptIndexingBehavior()))
      return this._copyEntry$3$bailout1(1, fromTable, fromOffset, toOffset);
    t5 = fromOffset + 1;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= fromTable.length)
      throw $.ioore(t5);
    t5 = fromTable[t5];
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, fromTable, fromOffset, toOffset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    t2[t4] = t5;
  },
  _copyEntry$3$bailout1: function(state0, fromTable, fromOffset, toOffset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        $.$$indexSet(t2, $.$$add(toOffset, 1), $.$$index(fromTable, fromOffset + 1));
    }
  }
};

$$.HashMap = {"": "Object;_hashTable",
  containsKey$1: function(key) {
    var t1 = this._hashTable._get$1(key);
    if (typeof t1 !== "number")
      return this.containsKey$1$bailout(1, t1);
    return t1 >= 0;
  },
  containsKey$1$bailout: function(state0, t1) {
    return $.$$ge(t1, 0);
  },
  $index: function(key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if (typeof offset !== "number")
      return this.$$index$bailout(1, t1, offset);
    if (offset >= 0)
      return t1._value$1(offset);
    return;
  },
  $$index$bailout: function(state0, t1, offset) {
    if ($.$$ge(offset, 0) === true)
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if ($.$$lt(offset, 0) === true)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  forEach$1: function(action) {
    var t1, modificationCount, table, entrySize, offset, t2, entry;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    table = t1._table;
    if (typeof table !== "string" && (typeof table !== "object" || table === null || table.constructor !== Array && !table.$isJavaScriptIndexingBehavior()))
      return this.forEach$1$bailout(1, action, table, t1, modificationCount);
    entrySize = t1.get$_entrySize();
    offset = 0;
    while (t2 = table.length, offset < t2) {
      if (offset !== (offset | 0))
        throw $.iae(offset);
      if (offset < 0 || offset >= t2)
        throw $.ioore(offset);
      entry = table[offset];
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
      if (typeof entrySize !== "number")
        throw $.iae(entrySize);
      offset += entrySize;
    }
  },
  forEach$1$bailout: function(state0, action, table, t1, modificationCount) {
    var entrySize, t2, offset, entry;
    entrySize = t1.get$_entrySize();
    t2 = $.getInterceptor$JSArrayJSString(table);
    offset = 0;
    while ($.CONSTANT7.$lt(offset, t2.get$length(table))) {
      entry = t2.$index(table, offset);
      if (!t1._isFree$1(entry)) {
        action.call$2(entry, t1._value$1(offset));
        t1._checkModification$1(modificationCount);
      }
      if (typeof entrySize !== "number")
        throw $.iae(entrySize);
      offset += entrySize;
    }
  },
  get$keys: function() {
    return $._HashTableKeyIterable$(this._hashTable);
  },
  get$values: function() {
    return $._HashTableValueIterable$(this._hashTable, 1);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq(this._hashTable.get$_elementCount(), 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  HashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: true
};

$$._LinkedHashTableHeadMarker = {"": "Object;"};

$$._LinkedHashTable = {"": "_HashTable;",
  get$_entrySize: function() {
    return 3;
  },
  _createTable$1: function(capacity) {
    var result, t1;
    result = $.List_List$fixedLength($.$$mul(capacity, this.get$_entrySize()), null);
    t1 = result.length;
    if (0 >= t1)
      throw $.ioore(0);
    result[0] = $.CONSTANT8;
    if (1 >= t1)
      throw $.ioore(1);
    result[1] = 0;
    if (2 >= t1)
      throw $.ioore(2);
    result[2] = 0;
    return result;
  },
  _next$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._next$1$bailout(1, offset);
    t4 = offset + 1;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._next$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _next$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index(t2, $.$$add(offset, 1));
    }
  },
  _setNext$2: function(offset, to) {
    $.$$indexSet(this._table, $.$$add(offset, 1), to);
  },
  _prev$1: function(offset) {
    return $.$$index(this._table, $.$$add(offset, 2));
  },
  _setPrev$2: function(offset, to) {
    $.$$indexSet(this._table, $.$$add(offset, 2), to);
  },
  _linkLast$1: function(offset) {
    var last = this._prev$1(0);
    this._setNext$2(offset, 0);
    this._setPrev$2(offset, last);
    this._setNext$2(last, offset);
    this._setPrev$2(0, offset);
  },
  _unlink$1: function(offset) {
    var next, prev;
    next = this._next$1(offset);
    prev = this._prev$1(offset);
    this._setNext$2(offset, null);
    this._setPrev$2(offset, null);
    this._setNext$2(prev, next);
    this._setPrev$2(next, prev);
  },
  _addAllEntries$1: function(oldTable) {
    var t1, offset, object, t2, nextOffset;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._addAllEntries$1$bailout1(1, oldTable);
    t1 = $.getInterceptor$JSArrayJSString(oldTable);
    if (1 >= oldTable.length)
      throw $.ioore(1);
    offset = oldTable[1];
    if (typeof offset !== "number")
      return this._addAllEntries$1$bailout1(2, oldTable, offset, t1);
    for (; $.$$eq(offset, 0) !== true; offset = nextOffset) {
      if (offset !== (offset | 0))
        throw $.iae(offset);
      t1 = oldTable.length;
      if (offset < 0 || offset >= t1)
        throw $.ioore(offset);
      object = oldTable[offset];
      t2 = offset + 1;
      if (t2 >= t1)
        throw $.ioore(t2);
      nextOffset = oldTable[t2];
      this._copyEntry$3(oldTable, offset, this._put$1(object));
    }
  },
  _addAllEntries$1$bailout1: function(state0, oldTable, offset, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSArrayJSString(oldTable);
        offset = t1.$index(oldTable, 1);
      case 2:
        var t2, object, nextOffset;
        state0 = 0;
        for (; t2 = $.getInterceptor(offset), t2.$eq(offset, 0) !== true; offset = nextOffset) {
          object = t1.$index(oldTable, offset);
          nextOffset = t1.$index(oldTable, t2.$add(offset, 1));
          this._copyEntry$3(oldTable, offset, this._put$1(object));
        }
    }
  },
  _put$1: function(key) {
    var offset, t1, oldEntry;
    offset = this._probeForAdd$2(this._hashCodeOf$1(key), key);
    t1 = this._table;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._put$1$bailout1(1, key, offset, t1);
    if (offset !== (offset | 0))
      throw $.iae(offset);
    if (offset < 0 || offset >= t1.length)
      throw $.ioore(offset);
    oldEntry = t1[offset];
    if (oldEntry === $.CONSTANT4) {
      t1 = this._deletedCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout1(2, key, offset, t1);
      this._deletedCount = t1 - 1;
    } else if (oldEntry == null) {
      t1 = this._entryCount;
      if (typeof t1 !== "number")
        return this._put$1$bailout1(3, key, offset, t1);
      this._entryCount = t1 + 1;
    } else
      return offset;
    this._recordModification$0();
    this._setKey$2(offset, key);
    this._linkLast$1(offset);
    return offset;
  },
  _put$1$bailout1: function(state0, key, offset, t1) {
    switch (state0) {
      case 0:
        offset = this._probeForAdd$2(this._hashCodeOf$1(key), key);
        t1 = this._table;
      case 1:
        state0 = 0;
        oldEntry = $.$$index(t1, offset);
      default:
        var oldEntry;
        if (state0 === 2 || state0 === 0 && oldEntry === $.CONSTANT4)
          switch (state0) {
            case 0:
              t1 = this._deletedCount;
            case 2:
              state0 = 0;
              this._deletedCount = $.$$sub(t1, 1);
          }
        else
          switch (state0) {
            case 0:
            case 3:
              if (state0 === 3 || state0 === 0 && oldEntry == null)
                switch (state0) {
                  case 0:
                    t1 = this._entryCount;
                  case 3:
                    state0 = 0;
                    this._entryCount = $.$$add(t1, 1);
                }
              else
                return offset;
          }
        this._recordModification$0();
        this._setKey$2(offset, key);
        this._linkLast$1(offset);
        return offset;
    }
  },
  _deleteEntry$1: function(offset) {
    this._unlink$1(offset);
    this._setKey$2(offset, $.CONSTANT4);
    this._deletedCount = $.$$add(this._deletedCount, 1);
    this._recordModification$0();
  }
};

$$._LinkedHashTableKeyIterable = {"": "Iterable;_table>",
  get$iterator: function() {
    return $._LinkedHashTableKeyIterator$(this._table);
  },
  get$length: function() {
    return this._table.get$_elementCount();
  },
  length$0: function() {
    return this.get$length().call$0();
  }
};

$$._LinkedHashTableKeyIterator = {"": "_LinkedHashTableIterator;_hashTable,_modificationCount,_offset,_liblib2$_current",
  _getCurrent$1: function(offset) {
    return this._hashTable._key$1(offset);
  }
};

$$._LinkedHashTableValueIterable = {"": "Iterable;_hashTable,_valueIndex",
  get$iterator: function() {
    return $._LinkedHashTableValueIterator$(this._hashTable, this._valueIndex);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  length$0: function() {
    return this.get$length().call$0();
  }
};

$$._LinkedHashTableValueIterator = {"": "_LinkedHashTableIterator;_valueIndex,_hashTable,_modificationCount,_offset,_liblib2$_current",
  _getCurrent$1: function(offset) {
    return $.$$index(this._hashTable.get$_table(), $.$$add(offset, this._valueIndex));
  }
};

$$._LinkedHashTableIterator = {"": "Object;_modificationCount>",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._hashTable;
    t1._checkModification$1(this._modificationCount);
    t2 = this._offset;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(1, t1, t2);
    if (t2 === 0) {
      this._liblib2$_current = null;
      return false;
    }
    this._liblib2$_current = this._getCurrent$1(t2);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  moveNext$0$bailout: function(state0, t1, t2) {
    if ($.$$eq(t2, 0) === true) {
      this._liblib2$_current = null;
      return false;
    }
    this._liblib2$_current = this._getCurrent$1(this._offset);
    this._offset = t1._next$1(this._offset);
    return true;
  },
  get$current: function() {
    return this._liblib2$_current;
  }
};

$$._LinkedHashMapTable = {"": "_LinkedHashTable;_table,_capacity,_entryCount,_deletedCount,_modificationCount,_container",
  get$_entrySize: function() {
    return 4;
  },
  _value$1: function(offset) {
    var t2, t4;
    t2 = this._table;
    if (typeof offset !== "number")
      return this._value$1$bailout(1, offset);
    t4 = offset + 3;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this._value$1$bailout(2, offset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    return t2[t4];
  },
  _value$1$bailout: function(state0, offset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        return $.$$index(t2, $.$$add(offset, 3));
    }
  },
  _setValue$2: function(offset, value) {
    $.$$indexSet(this._table, $.$$add(offset, 3), value);
  },
  _copyEntry$3: function(oldTable, fromOffset, toOffset) {
    var t2, t4, t5;
    t2 = this._table;
    if (typeof toOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t4 = toOffset + 3;
    if (typeof fromOffset !== "number")
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    t5 = fromOffset + 3;
    if (typeof oldTable !== "string" && (typeof oldTable !== "object" || oldTable === null || oldTable.constructor !== Array && !oldTable.$isJavaScriptIndexingBehavior()))
      return this._copyEntry$3$bailout1(1, oldTable, fromOffset, toOffset);
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= oldTable.length)
      throw $.ioore(t5);
    t5 = oldTable[t5];
    if (typeof t2 !== "object" || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.$isJavaScriptIndexingBehavior())
      return this._copyEntry$3$bailout1(2, oldTable, fromOffset, toOffset, t2);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    t2[t4] = t5;
  },
  _copyEntry$3$bailout1: function(state0, oldTable, fromOffset, toOffset, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this._table;
      case 2:
        state0 = 0;
        $.$$indexSet(t2, $.$$add(toOffset, 3), $.$$index(oldTable, $.$$add(fromOffset, 3)));
    }
  }
};

$$.LinkedHashMap = {"": "Object;_hashTable",
  containsKey$1: function(key) {
    var t1 = this._hashTable._get$1(key);
    if (typeof t1 !== "number")
      return this.containsKey$1$bailout(1, t1);
    return t1 >= 0;
  },
  containsKey$1$bailout: function(state0, t1) {
    return $.$$ge(t1, 0);
  },
  $index: function(key) {
    var t1, offset;
    t1 = this._hashTable;
    offset = t1._get$1(key);
    if ($.$$ge(offset, 0) === true)
      return t1._value$1(offset);
    return;
  },
  $indexSet: function(key, value) {
    var t1 = this._hashTable;
    t1._setValue$2(t1._put$1(key), value);
    t1._checkCapacity$0();
  },
  remove$1: function(key) {
    var t1, offset, oldValue;
    t1 = this._hashTable;
    offset = t1._remove$1(key);
    if ($.$$lt(offset, 0) === true)
      return;
    oldValue = t1._value$1(offset);
    t1._setValue$2(offset, null);
    t1._checkCapacity$0();
    return oldValue;
  },
  forEach$1: function(action) {
    var t1, modificationCount, offset;
    t1 = this._hashTable;
    modificationCount = t1._modificationCount;
    offset = t1._next$1(0);
    if (typeof offset !== "number")
      return this.forEach$1$bailout(1, t1, modificationCount, action, offset);
    for (; $.$$eq(offset, 0) !== true; offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  forEach$1$bailout: function(state0, t1, modificationCount, action, offset) {
    for (; $.$$eq(offset, 0) !== true; offset = t1._next$1(offset)) {
      action.call$2(t1._key$1(offset), t1._value$1(offset));
      t1._checkModification$1(modificationCount);
    }
  },
  get$keys: function() {
    return $._LinkedHashTableKeyIterable$(this._hashTable);
  },
  get$values: function() {
    return $._LinkedHashTableValueIterable$(this._hashTable, 3);
  },
  get$length: function() {
    return this._hashTable.get$_elementCount();
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq(this._hashTable.get$_elementCount(), 0);
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  LinkedHashMap$0: function() {
    this._hashTable._container = this;
  },
  $isMap: true
};

$$.ListIterable = {"": "Iterable;",
  get$iterator: function() {
    return $.ListIterator$(this);
  },
  forEach$1: function(action) {
    var $length, i;
    $length = this.get$length();
    if (typeof $length !== "number")
      return this.forEach$1$bailout1(1, action, $length);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.elementAt$1(i));
      if (!($length === this.get$length()))
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
  },
  forEach$1$bailout1: function(state0, action, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.CONSTANT9.$lt(i, $length); ++i) {
      action.call$1(this.elementAt$1(i));
      if (t1.$eq($length, this.get$length()) !== true)
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0) !== true;
  },
  any$1: function(test) {
    var $length, i;
    $length = this.get$length();
    if (typeof $length !== "number")
      return this.any$1$bailout1(1, test, $length);
    for (i = 0; i < $length; ++i) {
      if (test.call$1(this.elementAt$1(i)) === true)
        return true;
      if (!($length === this.get$length()))
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
    return false;
  },
  any$1$bailout1: function(state0, test, $length) {
    var t1, i;
    for (t1 = $.getInterceptor($length), i = 0; $.CONSTANT9.$lt(i, $length); ++i) {
      if (test.call$1(this.elementAt$1(i)) === true)
        return true;
      if (t1.$eq($length, this.get$length()) !== true)
        throw $.$$throw($.ConcurrentModificationError$(this));
    }
    return false;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  toList$0: function() {
    var result, i, t1;
    result = $.List_List(this.get$length());
    for (i = 0; $.CONSTANT9.$lt(i, this.get$length()); ++i) {
      t1 = this.elementAt$1(i);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  }
};

$$.ListIterator = {"": "Object;_iterable,_liblib0$_length,_index,_liblib0$_current",
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1, t2;
    t1 = this._liblib0$_length;
    t2 = this._iterable;
    if ($.$$eq(t1, $.length(t2)) !== true)
      throw $.$$throw($.ConcurrentModificationError$(t2));
    if ($.$$eq(this._index, t1) === true) {
      this._liblib0$_current = null;
      return false;
    }
    this._liblib0$_current = $.elementAt(t2, this._index);
    t1 = this._index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    this._index = t1 + 1;
    return true;
  },
  moveNext$0$bailout: function(state0, t1) {
    this._index = $.$$add(t1, 1);
    return true;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.MappedIterator$($.iterator(this._iterable), this._f);
  },
  get$length: function() {
    return $.length(this._iterable);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.isEmpty(this._iterable);
  },
  elementAt$1: function(index) {
    return this._f$1($.elementAt(this._iterable, index));
  }
};

$$.MappedIterator = {"": "Iterator;_liblib0$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib0$_current = this._f$1(t1.get$current());
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.MappedListIterable = {"": "ListIterable;_source,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$length: function() {
    return $.length(this._source);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  elementAt$1: function(index) {
    return this._f$1($.elementAt(this._source, index));
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId,nextManagerId,currentContext>,rootContext,topEventLoop>,fromCommandLine,isWorker>,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = !($.get$globalWorker() == null) && !($.get$IsolateNatives_thisScript() == null);
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.isEmpty(this.isolates) === true && $.$$eq(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id>,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($._ExceptionImplementation$("Registry: ports must be registered only once."));
    $.$$indexSet(this.ports, portId, port);
    $.$$indexSet($globalState.isolates, this.id, this);
  },
  unregister$1: function(portId) {
    $.remove(this.ports, portId);
    if ($.isEmpty(this.ports) === true)
      $.remove($globalState.isolates, this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if (!($globalState.rootContext == null) && $globalState.isolates.containsKey$1($globalState.rootContext.get$id()) === true && $globalState.fromCommandLine === true && $.isEmpty($globalState.rootContext.get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.future;
  },
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq(this._workerId, other._workerId) === true && $.$$eq(this._isolateId, other._isolateId) === true && $.$$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    var t1, t2;
    t1 = $.$$xor($.$$shl(this._workerId, 16), $.$$shl(this._isolateId, 8));
    t2 = this._receivePortId;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return (t1 ^ t2) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.currentContext.get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if (!($.$$index(this._visited, list) == null))
      return;
    $.$$indexSet(this._visited, list, true);
    $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if (!($.$$index(this._visited, map) == null))
      return;
    $.$$indexSet(this._visited, map, true);
    $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$JSArrayJSString(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq(managerId, $globalState.currentManagerId) === true) {
      isolate = $.$$index($globalState.isolates, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var $length, i;
    $length = $.length(this.tagged);
    if (typeof $length !== "number")
      return this.cleanup$0$bailout(1, $length);
    i = 0;
    for (; i < $length; ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, $length) {
    var i = 0;
    for (; $.CONSTANT9.$lt(i, $length); ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!x.$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copy, len, i, t1;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout1(1, list);
    copy = $.$$index(this._visited, list);
    if (!(copy == null))
      return copy;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        copy = $.$$index(this._visited, list);
        if (!(copy == null))
          return copy;
        t1 = $.getInterceptor$JSArrayJSString(list);
        len = t1.get$length(list);
      case 2:
        var copy, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        $.$$indexSet(this._visited, list, copy);
        for (i = 0; $.CONSTANT9.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index(this._visited, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $.HashMap$();
    $.$$indexSet(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copyId, id;
    copyId = $.$$index(this._visited, list);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var copyId, id;
    copyId = $.$$index(this._visited, map);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList(map.get$keys())), this._serializeList$1($.toList(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSArrayJSString(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT9.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap$();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id = $.$$index(x, 1);
    return $.$$index(this._deserialized, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$JSArrayJSString(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id, t2, len) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSArrayJSString(x);
        id = t1.$index(x, 1);
        dartList = t1.$index(x, 2);
      case 1:
        state0 = 0;
        $.$$indexSet(this._deserialized, id, dartList);
        t2 = $.getInterceptor$JSArrayJSString(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, i;
        state0 = 0;
        for (i = 0; $.CONSTANT9.$lt(i, len); ++i)
          t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $.HashMap$();
    t1 = $.getInterceptor$JSArrayJSString(x);
    id = t1.$index(x, 1);
    $.$$indexSet(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $.HashMap$();
        t1 = $.getInterceptor$JSArrayJSString(x);
        id = t1.$index(x, 1);
        $.$$indexSet(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(keys);
        len = t3.get$length(keys);
      case 3:
        var id, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSArrayJSString(values), i = 0; $.CONSTANT9.$lt(i, len); ++i)
          result.$indexSet(this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if (!($.get$globalThis().setTimeout == null)) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.set$activeTimerCount($.$$sub(t1.get$activeTimerCount(), 1));
      if (this._once === true)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$repeating$2: function(milliseconds, callback) {
    var t1;
    if ($.hasTimer()) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add(t1.get$activeTimerCount(), 1));
      this._handle = $.get$globalThis().setInterval($.convertDartClosureToJS(new $.anon69(this, callback), 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Repeating timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq(milliseconds, 0) === true)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), callback, "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, exception, t1;
    buffer.add$1("'");
    message = null;
    try {
      message = $.toString(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    buffer.add$1(message);
    buffer.add$1("'\n");
    t1 = this.stackTrace;
    if (!(t1 == null)) {
      buffer.add$1("Stack trace:\n");
      buffer.add$1($.toString(t1));
      buffer.add$1("\n");
    }
  },
  toString$0: function() {
    var buffer, cause;
    buffer = $.StringBuffer$("");
    buffer.add$1("AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      buffer.add$1("Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return buffer.toString$0();
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_Timer($.CONSTANT3, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._liblib$_setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._liblib$_setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq(this._state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq(this._state, 1);
  },
  get$_hasError: function() {
    return !($.$$and(this._state, 2) === 0);
  },
  get$_hasUnhandledError: function() {
    return !($.$$and(this._state, 4) === 0);
  },
  _clearUnhandledError$0: function() {
    this._state = $.$$and(this._state, 4294967291);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer($.CONSTANT3, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._clearUnhandledError$0();
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer($.CONSTANT3, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _liblib$_setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_liblib$_setValue: function() {
    return new $.BoundClosure$1(this, "_liblib$_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (!(listeners0 == null)) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = $.$$or(this._state, 4);
    $.Timer_Timer($.CONSTANT3, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._liblib$_setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_liblib$_setValue(), this.get$_setError());
        return;
      }
    else
      this._liblib$_setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListenerWrapper$(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._liblib$_setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  map$1: function(convert) {
    return $._MapStream$(this, convert);
  },
  any$1: function(test) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_any_anon(t1, test, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_any_anon0(future), t3, true);
    return future;
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  },
  elementAt$1: function(index) {
    var t1, t2, future, t3;
    t1 = {};
    t1.index_0 = index;
    t2 = t1.index_0;
    if (!(typeof t2 === "number" && Math.floor(t2) === t2) || $.$$lt(t2, 0) === true)
      throw $.$$throw($.ArgumentError$(t1.index_0));
    future = $._FutureImpl$();
    t1.subscription_1 = null;
    t2 = new $.Stream_elementAt_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_1 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_elementAt_anon0(future), t3, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$._ForwardingStream = {"": "Stream;",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _handleData$2: function(data, sink) {
    sink._sendData$1(data);
  },
  _handleError$2: function(error, sink) {
    sink._sendError$1(error);
  },
  _handleDone$1: function(sink) {
    sink._sendDone$0();
  }
};

$$._BaseStreamSubscription = {"": "Object;",
  _liblib$_onData$1: function(arg0) {
    return this._liblib$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  onError$1: function(handleError) {
    this._onError = handleError == null ? $._nullErrorHandler : handleError;
  },
  get$onError: function() {
    return new $.BoundClosure$1(this, "onError$1");
  },
  _BaseStreamSubscription$3: function(_onData, _onError, _onDone) {
    if (this._liblib$_onData == null)
      this._liblib$_onData = $._nullDataHandler;
    if (this._onError == null)
      this._onError = $._nullErrorHandler;
    if (this._onDone == null)
      this._onDone = $._nullDoneHandler;
  }
};

$$._ForwardingStreamSubscription = {"": "_BaseStreamSubscription;_stream,_unsubscribeOnError,_subscription,_liblib$_onData,_onError,_onDone",
  cancel$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.cancel$0();
    this._subscription = null;
  },
  _sendData$1: function(data) {
    this._liblib$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError) {
      this._subscription.cancel$0();
      this._subscription = null;
    }
  },
  _sendDone$0: function() {
    var t1 = this._subscription;
    if (!(t1 == null)) {
      t1.cancel$0();
      this._subscription = null;
    }
    this._onDone$0();
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.Bound__handleData__ForwardingStreamSubscription(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    this._stream._handleError$2(error, this);
  },
  get$_handleError: function() {
    return new $.BoundClosure$1(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._subscription = null;
    this._stream._handleDone$1(this);
  },
  get$_handleDone: function() {
    return new $.Bound__handleDone__ForwardingStreamSubscription(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, _unsubscribeOnError) {
    var t1, t2, t3;
    t1 = this._stream._liblib$_source;
    t2 = this.get$_handleData();
    t3 = this.get$_handleError();
    this._subscription = t1.listen$3$onDone$onError(t2, this.get$_handleDone(), t3);
  }
};

$$._MapStream = {"": "_ForwardingStream;_transform,_liblib$_source",
  _transform$1: function(arg0) {
    return this._transform.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var outputEvent, e, s, exception, t1;
    outputEvent = null;
    try {
      outputEvent = this._transform$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    sink._sendData$1(outputEvent);
  }
};

$$.Game = {"": "Object;canvas>,context>",
  loadFinish$0: function() {
    $.world.startCycle$1(this.context);
  },
  Game$0: function() {
    $.niceFactor = 0;
    $.rpatCount = $.CONSTANT11.toInt$0($.rng() * 64);
    $.classMap = $.makeLiteralMap(["spawn", new $.anon0(), "avatar", new $.anon1(), "node", new $.anon2(), "arrow", new $.anon3(), "floating_text", new $.anon4()]);
    $.tagEvents = $.makeLiteralMap(["citizen", $.makeLiteralMap(["init", new $.anon5(), "update", new $.anon6(), "hit", new $.anon7(), "die", new $.anon8(), "collide", new $.anon9()]), "player", $.makeLiteralMap(["init", new $.anon10(), "die", new $.anon11(), "decomposed", new $.anon12(this), "update", new $.anon13()]), "scared", $.makeLiteralMap(["init", new $.anon14(), "update", new $.anon15()]), "traveler", $.makeLiteralMap(["init", new $.anon16(), "collide", new $.anon17(), "update", new $.anon18()]), "guard-wander", $.makeLiteralMap(["init", new $.anon19(), "update", new $.anon20(), "collide", new $.anon21(), "die", new $.anon22()]), "guard-wait", $.makeLiteralMap(["update", new $.anon23()]), "guard-attack", $.makeLiteralMap(["init", new $.anon24(), "update", new $.anon25(), "die", new $.anon26()]), "guard", $.makeLiteralMap(["init", new $.anon27(), "die", new $.anon28()]), "homebound", $.makeLiteralMap(["init", new $.anon29(), "update", new $.anon30(), "collide", new $.anon31()]), "lost", $.makeLiteralMap(["update", new $.anon32()]), "corpse", $.makeLiteralMap(["init", new $.anon33(), "update", new $.anon34()]), "following", $.makeLiteralMap(["update", new $.anon35()]), "wander", $.makeLiteralMap(["collide", new $.anon36(), "init", new $.anon37(), "update", new $.anon38()]), "nice", $.makeLiteralMap(["init", new $.anon39(), "update", new $.anon40()]), "mean", $.makeLiteralMap(["init", new $.anon41(), "update", new $.anon42()]), "salesman", $.makeLiteralMap(["update", new $.anon43()]), "arrow", $.makeLiteralMap(["update", new $.anon44()]), "zombie", $.makeLiteralMap(["init", new $.anon45(), "die", new $.anon46()]), "hostile-wander", $.makeLiteralMap(["init", new $.anon47(), "update", new $.anon48(), "collide", new $.anon49(), "hit", new $.anon50()]), "hostile", $.makeLiteralMap(["update", new $.anon51(), "kill", new $.anon52(), "hit", new $.anon53()]), "nestbound", $.makeLiteralMap(["init", new $.anon54(), "update", new $.anon55(), "collide", new $.anon56()]), "floating_text", $.makeLiteralMap(["update", new $.anon57()]), "avatar", $.makeLiteralMap([]), "actor", $.makeLiteralMap([]), "ai", $.makeLiteralMap([]), "friendly", $.makeLiteralMap([]), "uninit", $.makeLiteralMap([]), "house", $.makeLiteralMap([]), "node", $.makeLiteralMap([]), "zombie-spawn", $.makeLiteralMap([])]);
    $.CONSTANT2.forEach$1(["init", "update", "collide", "die", "decomposed", "hit", "kill"], new $.anon58());
    $.notifications = $.List_List(0);
    $.BLANK_IMAGE = $.ImageElement_ImageElement(null, null, null);
    $.tags = $.makeLiteralMap(["zombie", $.List_List(0), "corpse", $.List_List(0), "wander", $.List_List(0), "lost", $.List_List(0), "item", $.List_List(0), "salesman", $.List_List(0), "zombie", $.List_List(0), "uninit", $.List_List(0), "actor", $.List_List(0), "spawn", $.List_List(0), "following", $.List_List(0)]);
    $.tagMap = $.tags;
    $.audio = $.AudioManager$();
    $.animationMap = $.Map_Map();
    this.canvas = $.document().query$1("#canvas");
    this.canvas.set$width(800);
    this.canvas.set$height(450);
    this.context = this.canvas.getContext$1("2d");
    $.SCREEN_WIDTH = this.canvas.get$width();
    $.SCREEN_HEIGHT = this.canvas.get$height();
    $.event = $.UIManager$();
    $.RENDER_DISTANCE = $.CONSTANT7.toInt$0($.$$div($.$$mul($.$$add($.SCREEN_WIDTH, $.SCREEN_HEIGHT), 2), 4));
    $.world = $.World$();
    $.print("Loading World");
    $.web_load("game.json", new $.anon59(this));
  }
};

$$.MainMenu = {"": "Object;canvas>,context>,title,background<,creditsImage<,fin<,active=,dx,dy,anim=,credits<",
  fin$0: function() {
    return this.fin.call$0();
  },
  cycle$1: function(a) {
    if (this.active === true) {
      window.requestAnimationFrame$1(this.get$cycle());
      this.render$0();
    } else
      this.fin$0();
  },
  get$cycle: function() {
    return new $.BoundClosure$1(this, "cycle$1");
  },
  render$0: function() {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9;
    t1 = {};
    this.context.save$0();
    t2 = this.dx;
    t3 = $.$$div($.$$sub($.event.get$mouse_position().get$x(), $.$$div(this.canvas.get$width(), 2)), this.canvas.get$width());
    t4 = $.$$sub(this.background.get$width(), this.canvas.get$width());
    if (typeof t4 !== "number")
      throw $.iae(t4);
    this.dx = t2 - (t2 - (t3 * t4 - $.$$div($.$$sub(this.background.get$width(), this.canvas.get$width()), 2))) / 10;
    t5 = this.dy;
    t6 = $.$$div($.$$sub($.event.get$mouse_position().get$y(), $.$$div(this.canvas.get$height(), 2)), this.canvas.get$height());
    t7 = $.$$sub(this.background.get$height(), this.canvas.get$height());
    if (typeof t7 !== "number")
      throw $.iae(t7);
    this.dy = t5 - (t5 - (t6 * t7 - $.$$div($.$$sub(this.background.get$height(), this.canvas.get$height()), 2))) / 10;
    this.context.drawImage$3(this.background, this.dx, this.dy);
    t8 = this.context;
    t9 = this.title;
    t8.drawImage$3(t9, 250 - $.$$div(t9.get$width(), 2), 75);
    t1.ypos_2 = 200;
    t1.i_3 = 0;
    document.get$body().get$style().set$cursor("default");
    t2 = this.credits;
    t3 = this.anim;
    if (t2 === true) {
      if ($.$$lt($.$$index(t3, 4), 1) === true) {
        t2 = this.anim;
        t4 = $.getInterceptor$JSArrayJSString(t2);
        t5 = $.$$add(t4.$index(t2, 4), 0.05);
        t4.$indexSet(t2, 4, t5);
        t2 = t5;
      } else
        t2 = 1;
      $.$$indexSet(t3, 4, t2);
      t2 = $.event;
      if (t2.get$mouseDown() === true) {
        this.credits = false;
        t2.set$mouseDown(false);
      }
    } else {
      if ($.$$gt($.$$index(t3, 4), 0) === true) {
        t2 = this.anim;
        t4 = $.getInterceptor$JSArrayJSString(t2);
        t5 = $.$$sub(t4.$index(t2, 4), 0.05);
        t4.$indexSet(t2, 4, t5);
        t2 = t5;
      } else
        t2 = 0;
      $.$$indexSet(t3, 4, t2);
    }
    t2 = $.$$index(this.anim, 4);
    this.context.set$globalAlpha(t2);
    this.context.drawImage$3(this.creditsImage, 75, 75);
    t2 = $.$$index(this.anim, 4);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    this.context.set$globalAlpha(1 - t2);
    $.CONSTANT2.forEach$1(["Play", "Dev Mode", "Long Night", "Credits"], new $.MainMenu_render_anon(t1, this, 240, 50, 650));
    this.context.restore$0();
  },
  MainMenu$0: function() {
    this.canvas = $.document().query$1("#canvas");
    this.canvas.set$width(800);
    this.canvas.set$height(450);
    this.context = this.canvas.getContext$1("2d");
    this.context.save$0();
    this.context.set$fillStyle("#000");
    this.context.fillRect$4(0, 0, this.canvas.get$width(), this.canvas.get$height());
    this.context.set$fillStyle("#fff");
    this.context.set$font("36px Arial");
    this.context.set$textAlign("center");
    this.context.fillText$3("Loading Big Island", $.$$div(this.canvas.get$width(), 2), $.$$div(this.canvas.get$height(), 2));
    this.context.restore$0();
    this.title = $.res_loadImage("big_island_lpc.png", new $.anon(this));
  }
};

$$.PathNode = {"": "Vec2;path>,house>,start>,x,y"};

$$.Path = {"": "Object;start>,end,points>",
  Path$5: function(s, e, points, houseStart, houseEnd) {
    this.start = $.PathNode$fromVec2(s, this, houseStart, true);
    this.end = $.PathNode$fromVec2(e, this, houseEnd, false);
  }
};

$$.GameObject = {"": "Vec2;tags>,prop>,id>,type=,markedForRemoval>,x,y",
  $indexSet: function(k, v) {
    var t1 = this.prop;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout(1, k, t1, v);
    if (k !== (k | 0))
      throw $.iae(k);
    if (k < 0 || k >= t1.length)
      throw $.ioore(k);
    t1[k] = v;
  },
  $$indexSet$bailout: function(state0, k, t1, v) {
    $.$$indexSet(t1, k, v);
  },
  $index: function(k) {
    var t1 = this.prop;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, t1, k);
    if (k !== (k | 0))
      throw $.iae(k);
    if (k < 0 || k >= t1.length)
      throw $.ioore(k);
    return t1[k];
  },
  $$index$bailout: function(state0, t1, k) {
    return $.$$index(t1, k);
  },
  loadProperties$1: function(properties) {
    $.forEach(properties, new $.GameObject_loadProperties_anon(this));
  },
  setProperty$2: function(k, v) {
    var t1, vparts, nparts, lowest, highest;
    switch (k) {
      case "x":
        this.x = v;
        break;
      case "y":
        this.y = v;
        break;
      case "animation":
        t1 = $.getInterceptor$JSString(v);
        if (t1.endsWith$1(v, "]") === true) {
          vparts = t1.split$1(v, "[");
          if (1 >= vparts.length)
            throw $.ioore(1);
          nparts = $.split(vparts[1], "-");
          if (0 >= nparts.length)
            throw $.ioore(0);
          lowest = $.int_parse(nparts[0], null, null);
          if (1 >= nparts.length)
            throw $.ioore(1);
          t1 = nparts[1];
          highest = $.$$add($.int_parse($.substring(t1, 0, $.$$sub($.length(t1), 1)), null, null), 1);
          if (0 >= vparts.length)
            throw $.ioore(0);
          v = $.S(vparts[0]) + $.S($.toInt($.$$add($.$$mul($.get$random_number_generator().nextDouble$0(), $.$$sub(highest, lowest)), lowest)));
        }
        this.set$animation($.$$index($.animationMap, v));
        break;
      case "type":
        break;
      case "imageIndex":
        this.set$image($.world.getItemImage$1(v));
        break;
      case "tag":
        $.forEach(v, new $.GameObject_setProperty_anon(this));
        break;
      case "freq":
        this.set$freq(v);
        this.set$timeToSpawn(v);
        break;
      case "limit":
        this.set$limit(v);
        break;
      case "night-only":
        this.set$nightOnly(v);
        break;
      case "emit":
      case "emission":
        this.set$emission(v);
        break;
      case "emit-properties":
      case "emission-properties":
        this.set$emission_properties(v);
        break;
      case "id":
        this.id = v;
        break;
      default:
        $.$$indexSet(this.prop, k, v);
        break;
    }
  },
  render$1: function(c) {
    c.save$0();
    c.translate$2(this.x, this.y);
    this.debugRender$1(c);
    c.restore$0();
  },
  debugRender$2: function(c, sep) {
    var string;
    if ($.DEBUG === true) {
      c.set$fillStyle("#fff");
      string = "(" + $.S($.$$div($.toInt($.$$mul(this.x, 10)), 10)) + "," + $.S($.$$div($.toInt($.$$mul(this.y, 10)), 10)) + ")";
      if (typeof sep !== "number")
        throw $.iae(sep);
      c.fillText$3(string, 0, -0.5 * sep + 10);
      c.fillText$3($.toString(this.tags), 0, 0.5 * sep + 10);
    }
  },
  debugRender$1: function(c) {
    return this.debugRender$2(c, 80);
  },
  fireTagEvent$1: function($event) {
    var i, t1, t3;
    i = 0;
    while (true) {
      t1 = $.length(this.tags);
      if (typeof t1 !== "number")
        return this.fireTagEvent$1$bailout(1, $event, t1, i);
      if (!(i < t1))
        break;
      t1 = $.tagEvents;
      t3 = this.tags;
      if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
        return this.fireTagEvent$1$bailout(3, $event, t1, i, t3);
      if (i >= t3.length)
        throw $.ioore(i);
      t3 = t3[i];
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.fireTagEvent$1$bailout(2, $event, t1, i);
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      $.$$index(t1[t3], $event).call$1(this);
      ++i;
    }
  },
  fireTagEvent$1$bailout: function(state0, $event, t1, i, t3) {
    switch (state0) {
      case 0:
        i = 0;
      default:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = $.length(this.tags);
              case 1:
                state0 = 0;
                if (!$.CONSTANT9.$lt(i, t1))
                  break L0;
                t1 = $.tagEvents;
              case 2:
                state0 = 0;
                t3 = this.tags;
              case 3:
                state0 = 0;
                $.$$index($.$$index(t1, $.$$index(t3, i)), $event).call$1(this);
                ++i;
            }
    }
  },
  markForRemoval$0: function() {
    this.markedForRemoval = true;
    this.tags = [];
    this.remove$0();
  },
  remove$0: function() {
    var t1, onscene, offscene, objects, index;
    $.forEach(this.tags, new $.GameObject_remove_anon(this));
    t1 = $.world;
    onscene = t1.get$onscene();
    offscene = t1.get$offscene();
    objects = t1.get$objects();
    t1 = $.getInterceptor$JSArrayJSString(onscene);
    index = t1.indexOf$1(onscene, this);
    if ($.$$eq(index, -1) !== true)
      t1.removeRange$2(onscene, index, 1);
    else {
      t1 = $.getInterceptor$JSArrayJSString(offscene);
      index = t1.indexOf$1(offscene, this);
      if ($.$$eq(index, -1) !== true)
        t1.removeRange$2(offscene, index, 1);
    }
    t1 = $.getInterceptor$JSArrayJSString(objects);
    index = t1.indexOf$1(objects, this);
    if ($.$$eq(index, -1) !== true)
      t1.removeRange$2(objects, index, 1);
  },
  hasTag$1: function(tag) {
    return $.$$eq($.indexOf(this.tags, tag), -1) !== true;
  },
  removeTag$1: function(tag) {
    var index = $.indexOf(this.tags, tag);
    if (typeof index !== "number")
      return this.removeTag$1$bailout(1, index);
    if (!(index === -1))
      $.removeRange(this.tags, index, 1);
  },
  removeTag$1$bailout: function(state0, index) {
    if ($.$$eq(index, -1) !== true)
      $.removeRange(this.tags, index, 1);
  },
  GameObject$3: function(a, xx, yy) {
    this.tags = $.List_List(0);
    this.prop = $.Map_Map();
    this.loadProperties$1(a);
  }
};

$$.FloatingText = {"": "GameObject;time=,tags,prop,id,type,markedForRemoval,x,y",
  render$1: function(c) {
    var t1;
    c.save$0();
    c.translate$2(this.x, this.y);
    this.debugRender$1(c);
    t1 = this.time;
    if (typeof t1 !== "number")
      return this.render$1$bailout1(1, c, t1);
    c.set$globalAlpha(1 - t1 / 150);
    c.set$font("14px Arial");
    c.set$fillStyle("yellow");
    c.set$textAlign("center");
    c.fillText$3($.$$index(this.prop, "text"), 0, 0);
    c.restore$0();
  },
  render$1$bailout1: function(state0, c, t1) {
    c.set$globalAlpha(1 - $.$$div(t1, 150));
    c.set$font("14px Arial");
    c.set$fillStyle("yellow");
    c.set$textAlign("center");
    c.fillText$3($.$$index(this.prop, "text"), 0, 0);
    c.restore$0();
  }
};

$$.Arrow = {"": "GameObject;distance=,tags,prop,id,type,markedForRemoval,x,y",
  render$1: function(c) {
    c.save$0();
    c.translate$2(this.x, this.y);
    this.debugRender$1(c);
    c.set$globalAlpha(1);
    c.set$strokeStyle("#fff");
    c.set$lineWidth(2);
    c.beginPath$0();
    c.moveTo$2(0, 0);
    c.lineTo$2($.$$index(this.prop, "direction").get$x(), $.$$index(this.prop, "direction").get$y());
    c.stroke$0();
    c.closePath$0();
    c.restore$0();
  }
};

$$.SpawnPoint = {"": "GameObject;freq<,limit<,amountSpawned,timeToSpawn<,nightOnly<,emission<,emission_properties<,tags,prop,id,type,markedForRemoval,x,y",
  update$0: function() {
    var t1, t3, t2, ob;
    t1 = this.nightOnly === true;
    if (t1)
      if (t1) {
        t1 = $.world.get$time();
        if (typeof t1 !== "number")
          return this.update$0$bailout(1, t1);
        t1 = t1 > 21 || t1 < 5;
      } else
        t1 = false;
    else
      t1 = true;
    if (t1) {
      t1 = this.freq;
      if (typeof t1 !== "number")
        return this.update$0$bailout(3, t1);
      if (t1 > 0) {
        t1 = this.amountSpawned;
        t3 = this.limit;
        if (typeof t1 !== "number")
          return this.update$0$bailout(4, t1);
        if (typeof t3 !== "number")
          return this.update$0$bailout(5, t1, t3);
        t3 = t1 < t3;
        t1 = t3;
      } else
        t1 = false;
    } else
      t1 = false;
    if (t1) {
      t1 = this.timeToSpawn;
      if (typeof t1 !== "number")
        return this.update$0$bailout(6, t1);
      this.timeToSpawn = t1 - 1;
      t1 = this.timeToSpawn;
      if (typeof t1 !== "number")
        return this.update$0$bailout(7, t1);
      if (t1 <= 0) {
        t1 = $.world;
        t2 = this.emission;
        t3 = this.emission_properties;
        ob = t1.spawnObject$2(t2, !(t3 == null) ? t3 : $.makeLiteralMap([]));
        ob.set$x(this.x);
        ob.set$y(this.y);
        this.timeToSpawn = this.freq;
        t1 = this.amountSpawned;
        if (typeof t1 !== "number")
          return this.update$0$bailout(8, t1);
        this.amountSpawned = t1 + 1;
      }
    }
  },
  update$0$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.nightOnly === true;
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && t1)
          switch (state0) {
            case 0:
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = $.world.get$time();
                  case 1:
                    state0 = 0;
                  case 2:
                    if (state0 === 2 || state0 === 0 && $.$$gt(t1, 21) !== true)
                      switch (state0) {
                        case 0:
                          t1 = $.world.get$time();
                        case 2:
                          state0 = 0;
                          t3 = $.$$lt(t1, 5) === true;
                          t1 = t3;
                      }
                    else
                      t1 = true;
                }
              else
                t1 = false;
          }
        else
          t1 = true;
      case 3:
      case 4:
      case 5:
        if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this.freq;
            case 3:
              state0 = 0;
            default:
              if (state0 === 5 || state0 === 4 || state0 === 0 && $.$$gt(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.amountSpawned;
                  case 4:
                    state0 = 0;
                    t3 = this.limit;
                  case 5:
                    state0 = 0;
                    t5 = $.$$lt(t1, t3) === true;
                    t1 = t5;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
      case 6:
      case 7:
      case 8:
        var t5, t2, ob;
        if (state0 === 8 || state0 === 7 || state0 === 6 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this.timeToSpawn;
            case 6:
              state0 = 0;
              this.timeToSpawn = $.$$sub(t1, 1);
              t1 = this.timeToSpawn;
            case 7:
              state0 = 0;
            case 8:
              if (state0 === 8 || state0 === 0 && $.$$le(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = $.world;
                    t2 = this.emission;
                    t3 = this.emission_properties;
                    ob = t1.spawnObject$2(t2, !(t3 == null) ? t3 : $.makeLiteralMap([]));
                    ob.set$x(this.x);
                    ob.set$y(this.y);
                    this.timeToSpawn = this.freq;
                    t1 = this.amountSpawned;
                  case 8:
                    state0 = 0;
                    this.amountSpawned = $.$$add(t1, 1);
                }
          }
    }
  },
  render$1: function(c) {
    c.save$0();
    c.translate$2(this.x, this.y);
    this.debugRender$2(c, 20);
    c.restore$0();
  }
};

$$.Avatar = {"": "GameObject;currentAnimation,currentOrientation<,currentFrame=,velocity>,_attacking,attackDirection=,damage=,armor=,attackType=,attackTime=,currentAttackTime=,timeSinceHealthChange,health=,alive>,speed=,speaking=,sayTime=,speech,attackRadius=,animation=,weaponAnimation<,tags,prop,id,type,markedForRemoval,x,y",
  set$attacking: function(b) {
    var t1;
    this._attacking = b;
    if (b === true) {
      t1 = this.attackType;
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= $.CONSTANT35.length)
        throw $.ioore(t1);
      t1 = $.CONSTANT35[t1];
    } else
      t1 = 1;
    this.currentAnimation = t1;
  },
  get$attacking: function() {
    return this._attacking;
  },
  hurt$2: function(damage, direction) {
    var t1, i, tag, u;
    this.fireTagEvent$1("hit");
    t1 = $.getInterceptor$JSNumber(damage);
    this.health = $.$$sub(this.health, t1.$mul(damage, this.armor));
    if (t1.$gt(damage, 10) === true) {
      this.velocity.add$1(direction.multiplyScalar$1(t1.$div(damage, 2)));
      if ($.$$gt(this.velocity.lengthSq$0(), 64) === true)
        this.velocity.normalize$0().multiplyScalar$1(8);
    }
    this.timeSinceHealthChange = 120;
    if (this.alive && $.$$le(this.health, 0) === true) {
      this.currentFrame = 0;
      this.currentAnimation = 3;
      this.currentOrientation = 0;
      $.$$index($.$$index($.tagEvents, "corpse"), "init").call$1(this);
      $.add(this.tags, "corpse");
      $.addTag(this, "corpse");
      this.fireTagEvent$1("die");
      $.$$index($.$$index($.tagEvents, "corpse"), "init").call$1(this);
      this.alive = false;
      i = $.$$sub($.length(this.tags), 1);
      if (typeof i !== "number")
        return this.hurt$2$bailout(1, i);
      for (; i >= 0; --i) {
        tag = $.$$index(this.tags, i);
        if ($.removalOnDeath.containsKey$1(tag) === true && $.$$index($.removalOnDeath, tag) === true) {
          $.removeRange(this.tags, i, 1);
          u = $.$$sub($.length($.$$index($.tagMap, tag)), 1);
          if (typeof u !== "number")
            return this.hurt$2$bailout(2, i, tag, $.CONSTANT7, u);
          for (; u >= 0; --u)
            if ($.$$eq($.$$index($.$$index($.tagMap, tag), u), this) === true) {
              $.removeRange($.$$index($.tagMap, tag), u, 1);
              break;
            }
        }
      }
    }
  },
  hurt$2$bailout: function(state0, i, tag, t1, u) {
    switch (state0) {
      case 0:
        this.fireTagEvent$1("hit");
        t1 = $.getInterceptor$JSNumber(damage);
        this.health = $.$$sub(this.health, t1.$mul(damage, this.armor));
        if (t1.$gt(damage, 10) === true) {
          this.velocity.add$1(direction.multiplyScalar$1(t1.$div(damage, 2)));
          if ($.$$gt(this.velocity.lengthSq$0(), 64) === true)
            this.velocity.normalize$0().multiplyScalar$1(8);
        }
        this.timeSinceHealthChange = 120;
      default:
        var t2;
        if (state0 === 2 || state0 === 1 || state0 === 0 && this.alive && $.$$le(this.health, 0) === true)
          switch (state0) {
            case 0:
              this.currentFrame = 0;
              this.currentAnimation = 3;
              this.currentOrientation = 0;
              $.$$index($.$$index($.tagEvents, "corpse"), "init").call$1(this);
              $.add(this.tags, "corpse");
              $.addTag(this, "corpse");
              this.fireTagEvent$1("die");
              $.$$index($.$$index($.tagEvents, "corpse"), "init").call$1(this);
              this.alive = false;
              i = $.$$sub($.length(this.tags), 1);
            case 1:
              state0 = 0;
            case 2:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      t1 = $.getInterceptor$JSNumber(i);
                      if (!(t1.$ge(i, 0) === true))
                        break L0;
                      tag = $.$$index(this.tags, i);
                    case 2:
                      if (state0 === 2 || state0 === 0 && $.removalOnDeath.containsKey$1(tag) === true && $.$$index($.removalOnDeath, tag) === true)
                        switch (state0) {
                          case 0:
                            $.removeRange(this.tags, i, 1);
                            u = $.$$sub($.length($.$$index($.tagMap, tag)), 1);
                          case 2:
                            state0 = 0;
                            for (; t2 = $.getInterceptor$JSNumber(u), t2.$ge(u, 0) === true; u = t2.$sub(u, 1))
                              if ($.$$eq($.$$index($.$$index($.tagMap, tag), u), this) === true) {
                                $.removeRange($.$$index($.tagMap, tag), u, 1);
                                break;
                              }
                        }
                      i = t1.$sub(i, 1);
                  }
          }
    }
  },
  say$2: function(text, time) {
    this.speaking = true;
    this.speech = text;
    this.sayTime = time;
  },
  say$1: function(text) {
    return this.say$2(text, 300);
  },
  render$1: function(c) {
    var t1, t2, t3, t4, bubbleWidth;
    c.save$0();
    c.translate$2(this.x, this.y);
    this.debugRender$1(c);
    t1 = this.animation;
    t2 = this.currentAnimation;
    t3 = this.currentOrientation;
    t4 = this.currentFrame;
    if (typeof t4 !== "number")
      return this.render$1$bailout1(1, c, t1, t2, t3, t4);
    t1.render$4(c, t2, t3, $.CONSTANT7.toInt$0(t4 / 5));
    t1 = this.weaponAnimation;
    if (!(t1 == null)) {
      t2 = this.currentAnimation;
      t3 = this.currentOrientation;
      t4 = this.currentFrame;
      if (typeof t4 !== "number")
        return this.render$1$bailout1(2, c, t1, t2, t3, t4);
      t1.render$4(c, t2, t3, $.CONSTANT7.toInt$0(t4 / 5));
    }
    t1 = this.timeSinceHealthChange;
    if (t1 >= 0) {
      this.timeSinceHealthChange = t1 - 1;
      c.set$globalAlpha(this.timeSinceHealthChange / 120);
      c.set$fillStyle("#f00");
      c.fillRect$4(-25, -25, 50, 5);
      c.set$fillStyle("#0f0");
      t2 = this.health;
      if (typeof t2 !== "number")
        return this.render$1$bailout1(3, c, 0, t2);
      c.fillRect$4(-25, -25, t2 / 100 * 50, 5);
    }
    if (this.speaking === true) {
      t1 = c.get$globalAlpha();
      if (typeof t1 !== "number")
        return this.render$1$bailout1(4, c, t1);
      c.set$globalAlpha(t1 * 0.75);
      c.set$font("14px Arial");
      t3 = c.measureText$1(this.speech).get$width();
      if (typeof t3 !== "number")
        return this.render$1$bailout1(5, c, 0, 0, t3);
      bubbleWidth = t3 + 20;
      c.set$strokeStyle("#000");
      c.set$fillStyle("#fff");
      c.fillRect$4(8, -42, bubbleWidth, 30);
      c.strokeRect$4(8, -42, bubbleWidth, 30);
      c.set$fillStyle("#000");
      c.fillText$3(this.speech, bubbleWidth / 2 + 6, -22);
      t3 = c.get$globalAlpha();
      if (typeof t3 !== "number")
        return this.render$1$bailout1(6, c, 0, 0, t3);
      c.set$globalAlpha(t3 / 0.75);
    }
    c.restore$0();
  },
  render$1$bailout1: function(state0, c, t1, t2, t3, t4) {
    switch (state0) {
      case 0:
        c.save$0();
        c.translate$2(this.x, this.y);
        this.debugRender$1(c);
        t1 = this.animation;
        t2 = this.currentAnimation;
        t3 = this.currentOrientation;
        t4 = this.currentFrame;
      case 1:
        state0 = 0;
        t1.render$4(c, t2, t3, $.CONSTANT7.toInt$0($.$$div(t4, 5)));
        t1 = this.weaponAnimation;
      case 2:
        if (state0 === 2 || state0 === 0 && !(t1 == null))
          switch (state0) {
            case 0:
              t2 = this.currentAnimation;
              t3 = this.currentOrientation;
              t4 = this.currentFrame;
            case 2:
              state0 = 0;
              t1.render$4(c, t2, t3, $.CONSTANT7.toInt$0($.$$div(t4, 5)));
          }
        t1 = this.timeSinceHealthChange;
      case 3:
        if (state0 === 3 || state0 === 0 && t1 >= 0)
          switch (state0) {
            case 0:
              this.timeSinceHealthChange = t1 - 1;
              c.set$globalAlpha(this.timeSinceHealthChange / 120);
              c.set$fillStyle("#f00");
              c.fillRect$4(-25, -25, 50, 5);
              c.set$fillStyle("#0f0");
              t2 = this.health;
            case 3:
              state0 = 0;
              c.fillRect$4(-25, -25, $.$$div(t2, 100) * 50, 5);
          }
      default:
        var bubbleWidth;
        if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && this.speaking === true)
          switch (state0) {
            case 0:
              t1 = c.get$globalAlpha();
            case 4:
              state0 = 0;
              c.set$globalAlpha($.$$mul(t1, 0.75));
              c.set$font("14px Arial");
              t3 = c.measureText$1(this.speech).get$width();
            case 5:
              state0 = 0;
              bubbleWidth = $.$$add(t3, 20);
              c.set$strokeStyle("#000");
              c.set$fillStyle("#fff");
              c.fillRect$4(8, -42, bubbleWidth, 30);
              c.strokeRect$4(8, -42, bubbleWidth, 30);
              c.set$fillStyle("#000");
              c.fillText$3(this.speech, $.$$div(bubbleWidth, 2) + 6, -22);
              t3 = c.get$globalAlpha();
            case 6:
              state0 = 0;
              c.set$globalAlpha($.$$div(t3, 0.75));
          }
        c.restore$0();
    }
  },
  Avatar$1: function(properties) {
    this.velocity = $.Vec2$(0, 0);
  }
};

$$.Item = {"": "GameObject;image<,tags,prop,id,type,markedForRemoval,x,y",
  render$1: function(c) {
    c.save$0();
    c.translate$2(this.x, this.y);
    this.debugRender$1(c);
    c.drawImage$3(this.image, -16, -16);
    c.restore$0();
  }
};

$$.HiddenCanvas = {"": "Object;canvas>,context>",
  getImage$1: function(callback) {
    var img, dataURL;
    img = $._ElementFactoryProvider_createElement_tag("img");
    dataURL = this.canvas.toDataUrl$1("image/png");
    img.get$onLoad().listen$1(new $.HiddenCanvas_getImage_anon(callback, img));
    img.set$src(dataURL);
    return img;
  },
  HiddenCanvas$2: function(width, height) {
    this.canvas = $.Element_Element$tag("canvas");
    this.canvas.set$width(width);
    this.canvas.set$height(height);
    this.context = this.canvas.getContext$1("2d");
  }
};

$$.Vec2 = {"": "Object;x=,y=",
  set$2: function(x, y) {
    this.x = x;
    this.y = y;
    return this;
  },
  add$1: function(v) {
    var t1, t3, t5, t7;
    t1 = this.x;
    t3 = v.get$x();
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, v, t1);
    if (typeof t3 !== "number")
      return this.add$1$bailout(2, v, t1, t3);
    this.x = t1 + t3;
    t5 = this.y;
    t7 = v.get$y();
    if (typeof t5 !== "number")
      return this.add$1$bailout(3, v, 0, 0, t5);
    if (typeof t7 !== "number")
      return this.add$1$bailout(4, 0, 0, 0, t5, t7);
    this.y = t5 + t7;
    return this;
  },
  add$1$bailout: function(state0, v, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = v.get$x();
      case 2:
        state0 = 0;
        this.x = $.$$add(t1, t3);
        t5 = this.y;
      case 3:
        state0 = 0;
        t7 = v.get$y();
      case 4:
        state0 = 0;
        this.y = $.$$add(t5, t7);
        return this;
    }
  },
  addTo$2: function(a, b) {
    this.x = $.$$add(this.x, a);
    this.y = $.$$add(this.y, b);
    return this;
  },
  subTo$2: function(a, b) {
    this.x = $.$$sub(this.x, a);
    this.y = $.$$sub(this.y, b);
    return this;
  },
  sub$1: function(v) {
    this.x = $.$$sub(this.x, v.get$x());
    this.y = $.$$sub(this.y, v.get$y());
    return this;
  },
  multiplyScalar$1: function(a) {
    this.x = $.$$mul(this.x, a);
    this.y = $.$$mul(this.y, a);
    return this;
  },
  divideScalar$1: function(a) {
    if ($.$$eq(a, 0) === true)
      a = 0.0001;
    this.x = $.$$div(this.x, a);
    this.y = $.$$div(this.y, a);
    return this;
  },
  lengthSq$0: function() {
    var t1, t2;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    return $.$$add(t1, $.$$mul(t2, t2));
  },
  length$0: function() {
    return Math.sqrt($.checkNum(this.lengthSq$0()));
  },
  get$length: function() {
    return new $.BoundClosure$0(this, "length$0");
  },
  normalize$0: function() {
    return this.divideScalar$1(this.length$0());
  },
  distanceToSquared$1: function(v) {
    var dx, dy;
    dx = $.$$sub(v.get$x(), this.x);
    dy = $.$$sub(v.get$y(), this.y);
    return $.$$add($.$$mul(dx, dx), $.$$mul(dy, dy));
  },
  distanceTo$1: function(v) {
    return Math.sqrt($.checkNum(this.distanceToSquared$1(v)));
  },
  clone$0: function() {
    return $.Vec2$(this.x, this.y);
  },
  zero$0: function() {
    this.multiplyScalar$1(0);
    return this;
  },
  zeroX$0: function() {
    this.x = 0;
    return this;
  },
  zeroY$0: function() {
    this.y = 0;
    return this;
  },
  at$2: function(tx, ty) {
    return $.$$eq(this.x, tx) === true && $.$$eq(this.y, ty) === true;
  },
  toString$0: function() {
    return "(" + $.S(this.x) + "," + $.S(this.y) + ")";
  },
  getDirection$0: function() {
    var t1, t2, t3;
    if ($.$$eq(this.y, 0) === true)
      t1 = 0;
    else if ($.abs(this.x) > $.abs(this.y))
      if ($.$$eq(this.x, 0) === true)
        t1 = 0;
      else {
        t1 = this.x;
        t2 = $.getInterceptor$JSNumber(t1);
        t3 = $.CONSTANT7.toInt$0($.CONSTANT7.round$0(t2.$div(t1, t2.abs$0(t1))) + 2);
        t1 = t3;
      }
    else {
      t1 = this.y;
      t2 = $.getInterceptor$JSNumber(t1);
      t3 = $.CONSTANT7.toInt$0($.CONSTANT7.round$0(t2.$div(t1, t2.abs$0(t1))) + 1);
      t1 = t3;
    }
    return t1;
  },
  Vec2$2: function(x, y) {
    this.x = x;
    this.y = y;
  }
};

$$.Camera = {"": "Vec2;tweenSpeed,_targetZoom,_actualZoom,x,y",
  set$zoom: function(value) {
    this._targetZoom = value;
  },
  get$zoom: function() {
    return this._targetZoom;
  },
  get$animatedZoom: function() {
    return this._actualZoom;
  },
  update$0: function() {
    var t1, t3;
    t1 = this._actualZoom;
    if (typeof t1 !== "number")
      return this.update$0$bailout(1, t1);
    t3 = this._targetZoom;
    if (typeof t3 !== "number")
      return this.update$0$bailout(2, t1, t3);
    this._actualZoom = t1 - (t1 - t3) / this.tweenSpeed;
  },
  update$0$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._actualZoom;
      case 1:
        state0 = 0;
        t3 = this._targetZoom;
      case 2:
        var t5;
        state0 = 0;
        t5 = $.getInterceptor$JSNumber(t1);
        this._actualZoom = t5.$sub(t1, $.$$div(t5.$sub(t1, t3), this.tweenSpeed));
    }
  },
  Camera$3: function(x, y, zoom) {
    this.x = x;
    this.y = y;
    this._actualZoom = zoom;
    this._targetZoom = zoom;
  }
};

$$.UIManager = {"": "Object;keyList>,mouseDown=,onKeyPress>,onClick>,mouse_position>,keyMap",
  key$1: function(identifier) {
    var t1, t2;
    t1 = this.keyList;
    t2 = this.keyMap.$index(identifier);
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  mouseDownAt$2: function(x, y) {
    this.mouseDown = true;
    if (x < 0)
      x = 0;
    else if (x > 800)
      x = 800;
    if (y < 0)
      y = 0;
    else if (y > 450)
      y = 450;
    this.mouseAt$2(x, y);
  },
  mouseUpAt$2: function(x, y) {
    this.mouseDown = false;
    if (x < 0)
      x = 0;
    else if (x > 800)
      x = 800;
    if (y < 0)
      y = 0;
    else if (y > 450)
      y = 450;
    this.mouseAt$2(x, y);
  },
  mouseAt$2: function(x, y) {
    if (x < 0)
      x = 0;
    else if (x > 800)
      x = 800;
    if (y < 0)
      y = 0;
    else if (y > 450)
      y = 450;
    this.mouse_position.set$2(x, y);
  },
  UIManager$0: function(box_0) {
    var t1, t2, i;
    box_0.touches_0 = null;
    this.onKeyPress = $.List_List(0);
    this.onClick = $.List_List(0);
    this.mouse_position = $.Vec2$(0, 0);
    this.keyList = $.List_List(255);
    for (t1 = this.keyList, t2 = t1.length, i = 0; i < 255; ++i) {
      if (i >= t2)
        throw $.ioore(i);
      t1[i] = 0;
    }
    $.window().get$onKeyDown().listen$1(new $.anon60(this));
    $.window().get$onKeyUp().listen$1(new $.anon61(this));
    $.window().get$onMouseDown().listen$1(new $.anon62(box_0, this));
    $.window().get$onMouseUp().listen$1(new $.anon63(box_0, this));
    $.window().get$onMouseMove().listen$1(new $.anon64(box_0, this));
    $.window().get$onTouchStart().listen$1(new $.anon65(this));
    $.window().get$onTouchMove().listen$1(new $.anon66(box_0, this));
    $.window().get$onTouchEnd().listen$1(new $.anon67());
  }
};

$$.Color = {"": "Object;_r,_g,_b",
  set$r: function(x) {
    var t1 = $.getInterceptor$JSNumber(x);
    if (t1.$gt(x, 255) === true)
      t1 = 255;
    else
      t1 = t1.$lt(x, 0) === true ? 0 : x;
    this._r = t1;
  },
  get$r: function() {
    return this._r;
  },
  set$g: function(x) {
    var t1 = $.getInterceptor$JSNumber(x);
    if (t1.$gt(x, 255) === true)
      t1 = 255;
    else
      t1 = t1.$lt(x, 0) === true ? 0 : x;
    this._g = t1;
  },
  get$g: function() {
    return this._g;
  },
  set$b: function(x) {
    var t1 = $.getInterceptor$JSNumber(x);
    if (t1.$gt(x, 255) === true)
      t1 = 255;
    else
      t1 = t1.$lt(x, 0) === true ? 0 : x;
    this._b = t1;
  },
  get$b: function() {
    return this._b;
  },
  toString$0: function() {
    var t1, t2, s, s0;
    t1 = $.$$or($.$$shl(this.get$r(), 16), $.$$shl(this.get$g(), 8));
    t2 = this.get$b();
    if (typeof t2 !== "number")
      throw $.iae(t2);
    s = $.CONSTANT7.toRadixString$1((t1 | t2) >>> 0, 16);
    for (; s.length < 6; s = s0)
      s0 = "0" + s;
    return "#" + s;
  },
  subtract$1: function(x) {
    this.set$r($.$$sub(this.get$r(), x));
    this.set$g($.$$sub(this.get$g(), x));
    this.set$b($.$$sub(this.get$b(), x));
    return this;
  },
  blend$2: function(color, w) {
    var t1, t2;
    t1 = this.get$r();
    if (typeof w !== "number")
      throw $.iae(w);
    t2 = 1 - w;
    this.set$r($.toInt($.$$add($.$$mul(t1, t2), $.$$mul(color.get$r(), w))));
    this.set$g($.toInt($.$$add($.$$mul(this.get$g(), t2), $.$$mul(color.get$g(), w))));
    this.set$b($.toInt($.$$add($.$$mul(this.get$b(), t2), $.$$mul(color.get$b(), w))));
  },
  clone$0: function() {
    return $.Color$(this.get$r(), this.get$g(), this.get$b());
  },
  Color$3: function(r, g, b) {
    this.set$r(r);
    this.set$g(g);
    this.set$b(b);
  },
  Color$fromString$1: function(s) {
    var t1, ar, t2, t3;
    t1 = $.getInterceptor$JSString(s);
    ar = t1.splitChars$0(s);
    if ($.$$eq(t1.get$length(s), 4) === true) {
      if (1 >= ar.length)
        throw $.ioore(1);
      this.set$r($.int_parse("0x" + $.S(ar[1]), null, null));
      this.set$r($.$$add($.$$shl(this.get$r(), 4), this.get$r()));
      if (2 >= ar.length)
        throw $.ioore(2);
      this.set$g($.int_parse("0x" + $.S(ar[2]), null, null));
      this.set$g($.$$add($.$$shl(this.get$g(), 4), this.get$g()));
      if (3 >= ar.length)
        throw $.ioore(3);
      this.set$b($.int_parse("0x" + $.S(ar[3]), null, null));
      this.set$b($.$$add($.$$shl(this.get$b(), 4), this.get$b()));
    } else if ($.$$eq(t1.get$length(s), 7) === true) {
      if (1 >= ar.length)
        throw $.ioore(1);
      t1 = "0x" + $.S(ar[1]);
      if (2 >= ar.length)
        throw $.ioore(2);
      this.set$r($.int_parse(t1 + $.S(ar[2]), null, null));
      if (3 >= ar.length)
        throw $.ioore(3);
      t2 = "0x" + $.S(ar[3]);
      if (4 >= ar.length)
        throw $.ioore(4);
      this.set$g($.int_parse(t2 + $.S(ar[4]), null, null));
      if (5 >= ar.length)
        throw $.ioore(5);
      t3 = "0x" + $.S(ar[5]);
      if (6 >= ar.length)
        throw $.ioore(6);
      this.set$b($.int_parse(t3 + $.S(ar[6]), null, null));
    }
  }
};

$$.TileManager = {"": "Object;renderChunks,renderChunkCoordinates,location",
  render$2: function(c, camera) {
    var t1, t2, t3, tx_s, tx, t4, t5, t6, ty_s, ty, txi, tyi, t9, t10, c1, t12, t13, c2, i, txi_i, dx, u, index;
    t1 = camera.x;
    t2 = $.$$div($.SCREEN_WIDTH, 2);
    t3 = camera.get$animatedZoom();
    if (typeof t3 !== "number")
      throw $.iae(t3);
    tx_s = $.$$sub(t1, t2 / t3);
    t1 = $.getInterceptor$JSNumber(tx_s);
    tx = t1.$sub(tx_s, $.$$mod(t1.toInt$0(tx_s), 256));
    if (typeof tx !== "number")
      return this.render$2$bailout(1, c, camera, tx);
    t4 = camera.y;
    t5 = $.$$div($.SCREEN_HEIGHT, 2);
    t6 = camera.get$animatedZoom();
    if (typeof t6 !== "number")
      throw $.iae(t6);
    ty_s = $.$$sub(t4, t5 / t6);
    t4 = $.getInterceptor$JSNumber(ty_s);
    ty = t4.$sub(ty_s, $.$$mod(t4.toInt$0(ty_s), 256));
    if (typeof ty !== "number")
      return this.render$2$bailout(2, c, camera, tx, ty);
    txi = $.CONSTANT7.toInt$0(tx / 256);
    if (typeof txi !== "number")
      return this.render$2$bailout(3, c, camera, tx, ty, $.CONSTANT11, txi);
    tyi = $.CONSTANT7.toInt$0(ty / 256);
    if (typeof tyi !== "number")
      return this.render$2$bailout(4, c, camera, tx, ty, $.CONSTANT11, txi, $.CONSTANT11, tyi);
    t9 = $.$$div($.SCREEN_WIDTH, 256);
    t10 = camera.get$animatedZoom();
    if (typeof t10 !== "number")
      throw $.iae(t10);
    c1 = t9 / t10 + 1;
    if (typeof c1 !== "number")
      return this.render$2$bailout(5, c, camera, tx, ty, $.CONSTANT11, txi, $.CONSTANT11, tyi, c1);
    t12 = $.$$div($.SCREEN_HEIGHT, 256);
    t13 = camera.get$animatedZoom();
    if (typeof t13 !== "number")
      throw $.iae(t13);
    c2 = t12 / t13 + 1;
    if (typeof c2 !== "number")
      return this.render$2$bailout(6, c, 0, tx, ty, $.CONSTANT11, txi, $.CONSTANT11, tyi, c1, c2);
    for (i = -1; i < c1; ++i) {
      txi_i = txi + i;
      for (dx = tx + i * 256, t1 = $.CONSTANT7.$mod(txi_i, 6), t2 = txi_i * 8, u = -1; u < c2; ++u) {
        t3 = tyi + u;
        index = t1 + $.CONSTANT7.$mod(t3, 6) * 6;
        if (!($.$$index(this.renderChunkCoordinates, index) == null) && $.$$index(this.renderChunkCoordinates, index).at$2(txi_i, t3) && !($.$$index(this.renderChunks, index) == null))
          c.drawImage$3($.$$index(this.renderChunks, index), dx, ty + u * 256);
        else {
          $.$$indexSet(this.renderChunkCoordinates, index, $.Vec2$(txi_i, t3));
          $.$$indexSet(this.renderChunks, index, this.generateTileChunk$2(t2, t3 * 8));
        }
      }
    }
  },
  render$2$bailout: function(state0, c, camera, tx, ty, t7, txi, t9, tyi, c1, c2) {
    switch (state0) {
      case 0:
        t1 = camera.x;
        t2 = $.$$div($.SCREEN_WIDTH, 2);
        t3 = camera.get$animatedZoom();
        if (typeof t3 !== "number")
          throw $.iae(t3);
        tx_s = $.$$sub(t1, t2 / t3);
        t1 = $.getInterceptor$JSNumber(tx_s);
        tx = t1.$sub(tx_s, $.$$mod(t1.toInt$0(tx_s), 256));
      case 1:
        state0 = 0;
        t4 = camera.y;
        t5 = $.$$div($.SCREEN_HEIGHT, 2);
        t6 = camera.get$animatedZoom();
        if (typeof t6 !== "number")
          throw $.iae(t6);
        ty_s = $.$$sub(t4, t5 / t6);
        t4 = $.getInterceptor$JSNumber(ty_s);
        ty = t4.$sub(ty_s, $.$$mod(t4.toInt$0(ty_s), 256));
      case 2:
        state0 = 0;
        t7 = $.getInterceptor$JSNumber(tx);
        txi = $.CONSTANT7.toInt$0(t7.$div(tx, 256));
      case 3:
        state0 = 0;
        t9 = $.getInterceptor$JSNumber(ty);
        tyi = $.CONSTANT7.toInt$0(t9.$div(ty, 256));
      case 4:
        state0 = 0;
        t11 = $.$$div($.SCREEN_WIDTH, 256);
        t12 = camera.get$animatedZoom();
        if (typeof t12 !== "number")
          throw $.iae(t12);
        c1 = t11 / t12 + 1;
      case 5:
        state0 = 0;
        t14 = $.$$div($.SCREEN_HEIGHT, 256);
        t15 = camera.get$animatedZoom();
        if (typeof t15 !== "number")
          throw $.iae(t15);
        c2 = t14 / t15 + 1;
      case 6:
        var t1, t2, t3, tx_s, t4, t5, t6, ty_s, t11, t12, t14, t15, i, txi_i, u, index, dx;
        state0 = 0;
        for (t1 = $.getInterceptor$JSNumber(tyi), t2 = $.getInterceptor$JSNumber(txi), i = -1; i < c1; ++i) {
          txi_i = t2.$add(txi, i);
          for (t3 = i * 256, t4 = $.getInterceptor$JSNumber(txi_i), u = -1; u < c2; ++u) {
            index = $.$$add(t4.$mod(txi_i, 6), $.$$mul($.$$mod(t1.$add(tyi, u), 6), 6));
            if (!($.$$index(this.renderChunkCoordinates, index) == null) && $.$$index(this.renderChunkCoordinates, index).at$2(txi_i, t1.$add(tyi, u)) && !($.$$index(this.renderChunks, index) == null)) {
              dx = t7.$add(tx, t3);
              c.drawImage$3($.$$index(this.renderChunks, index), dx, t9.$add(ty, u * 256));
            } else {
              $.$$indexSet(this.renderChunkCoordinates, index, $.Vec2$(txi_i, t1.$add(tyi, u)));
              $.$$indexSet(this.renderChunks, index, this.generateTileChunk$2(t4.$mul(txi_i, 8), $.$$mul(t1.$add(tyi, u), 8)));
            }
          }
        }
    }
  },
  generateTileChunk$3: function(sx, sy, callback) {
    var t2, t3;
    t2 = this.location + "/";
    if (typeof sx !== "number")
      return this.generateTileChunk$3$bailout(1, sx, sy, callback);
    t3 = t2 + $.S($.CONSTANT7.toInt$0(sx / 8)) + "x";
    if (typeof sy !== "number")
      return this.generateTileChunk$3$bailout(1, sx, sy, callback);
    return $.res_loadImage(t3 + $.S($.CONSTANT7.toInt$0(sy / 8)) + ".png", callback);
  },
  generateTileChunk$3$bailout: function(state0, sx, sy, callback) {
    return $.res_loadImage(this.location + "/" + $.S($.CONSTANT7.toInt$0($.$$div(sx, 8))) + "x" + $.S($.CONSTANT7.toInt$0($.$$div(sy, 8))) + ".png", callback);
  },
  generateTileChunk$2: function(sx, sy) {
    return this.generateTileChunk$3(sx, sy, null);
  },
  TileManager$1: function($location) {
    this.renderChunks = $.Map_Map();
    this.renderChunkCoordinates = $.Map_Map();
  }
};

$$.OverlayManager = {"": "Object;SUNRISE,SUNSET,night_dawn,dusk_night",
  render$2: function(c, camera) {
    var time, t1, t2, t3, p, color1, t4, t5, ASUNRISE, sunset;
    time = $.world.get$time();
    t1 = this.SUNRISE;
    t2 = t1 - 1;
    t3 = $.getInterceptor$JSNumber(time);
    if (t3.$gt(time, t2) === true && t3.$lt(time, t1 + 1) === true) {
      if (typeof time !== "number")
        throw $.iae(time);
      p = 1 - (t1 + 1 - time) / 2;
      c.set$globalAlpha(0.75 - p * 0.75);
      t2 = this.night_dawn;
      t3 = $.CONSTANT7.toInt$0($.CONSTANT7.floor$0(p * (t2.length - 1)));
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t2.length)
        throw $.ioore(t3);
      color1 = $.Color$fromString(t2[t3]);
      t4 = $.CONSTANT7.toInt$0($.CONSTANT7.ceil$0(p * (t2.length - 1)));
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      t5 = p * (t2.length - 1);
      color1.blend$2($.Color$fromString(t2[t4]), t5 - $.CONSTANT7.floor$0(t5));
      color1.subtract$1(128);
      c.set$fillStyle(color1.toString$0());
      c.fillRect$4(0, 0, $.SCREEN_WIDTH, $.SCREEN_HEIGHT);
    } else if (t3.$lt(time, t2) === true || t3.$gt(time, this.SUNSET + 1) === true) {
      if (t3.$lt(time, t2) === true)
        time = t3.$add(time, 24);
      ASUNRISE = t1 + 23;
      t1 = this.SUNSET;
      if (typeof time !== "number")
        throw $.iae(time);
      c.set$globalAlpha(0.75);
      t2 = this.night_dawn;
      if (0 >= t2.length)
        throw $.ioore(0);
      sunset = $.Color$fromString(t2[0]);
      t3 = this.dusk_night;
      t4 = t3.length;
      t5 = t4 - 1;
      if (t5 < 0)
        throw $.ioore(t5);
      sunset.blend$2($.Color$fromString(t3[t5]), (ASUNRISE - time) / (ASUNRISE - (t1 + 1)));
      sunset.subtract$1(128);
      c.set$fillStyle(sunset.toString$0());
      c.fillRect$4(0, 0, $.SCREEN_WIDTH, $.SCREEN_HEIGHT);
    } else {
      t1 = this.SUNSET;
      if (t3.$gt(time, t1 - 1) === true && t3.$lt(time, t1 + 1) === true) {
        if (typeof time !== "number")
          throw $.iae(time);
        p = 1 - (t1 + 1 - time) / 2;
        c.set$globalAlpha(p * 0.75);
        t2 = this.dusk_night;
        t3 = $.CONSTANT7.toInt$0($.CONSTANT7.floor$0(p * (t2.length - 1)));
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= t2.length)
          throw $.ioore(t3);
        color1 = $.Color$fromString(t2[t3]);
        t4 = $.CONSTANT7.toInt$0($.CONSTANT7.ceil$0(p * (t2.length - 1)));
        if (t4 !== (t4 | 0))
          throw $.iae(t4);
        if (t4 < 0 || t4 >= t2.length)
          throw $.ioore(t4);
        t5 = p * (t2.length - 1);
        color1.blend$2($.Color$fromString(t2[t4]), t5 - $.CONSTANT7.floor$0(t5));
        color1.subtract$1(128);
        c.set$fillStyle(color1.toString$0());
        c.fillRect$4(0, 0, $.SCREEN_WIDTH, $.SCREEN_HEIGHT);
      }
    }
    c.set$globalAlpha(1);
  }
};

$$.MenuButton = {"": "Vec2;text,action,width>,height>,x,y",
  action$0: function() {
    return this.action.call$0();
  },
  clickAt$2: function(px, py) {
    var t2, t4, t5, t1;
    t2 = this.x;
    if (typeof px !== "number")
      return this.clickAt$2$bailout(1, px, py);
    if (typeof t2 !== "number")
      return this.clickAt$2$bailout(2, px, py, t2);
    t4 = $.CONSTANT7.abs$0(px - t2);
    t5 = this.width;
    if (typeof t5 !== "number")
      return this.clickAt$2$bailout(3, 0, py, 0, t4, t5);
    if (t4 < t5 / 2) {
      t2 = this.y;
      if (typeof py !== "number")
        return this.clickAt$2$bailout(1, px, py);
      if (typeof t2 !== "number")
        return this.clickAt$2$bailout(4, 0, py, t2);
      t4 = $.CONSTANT7.abs$0(py - t2);
      t5 = this.height;
      if (typeof t5 !== "number")
        return this.clickAt$2$bailout(5, 0, 0, 0, t4, t5);
      t4 = t4 < t5 / 2;
      t1 = t4;
    } else
      t1 = false;
    return t1;
  },
  clickAt$2$bailout: function(state0, px, py, t2, t4, t5) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this.x;
      case 2:
        state0 = 0;
        t4 = $.abs($.$$sub(px, t2));
        t5 = this.width;
      case 3:
        state0 = 0;
      default:
        var t1;
        if (state0 === 5 || state0 === 4 || state0 === 0 && t4 < $.$$div(t5, 2))
          switch (state0) {
            case 0:
              t2 = this.y;
            case 4:
              state0 = 0;
              t4 = $.abs($.$$sub(py, t2));
              t5 = this.height;
            case 5:
              state0 = 0;
              t4 = t4 < $.$$div(t5, 2);
              t1 = t4;
          }
        else
          t1 = false;
        return t1;
    }
  },
  render$1: function(c) {
    var t1, t3, t5, t7;
    c.save$0();
    c.translate$2(this.x, this.y);
    c.scale$2(1.5, 1.5);
    t1 = $.world.get$uiImages();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.render$1$bailout(1, c, t1);
    if (25 >= t1.length)
      throw $.ioore(25);
    c.drawImage$3(t1[25], -64, -16);
    t3 = $.world.get$uiImages();
    if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
      return this.render$1$bailout(2, c, 0, t3);
    if (26 >= t3.length)
      throw $.ioore(26);
    c.drawImage$3(t3[26], -32, -16);
    t5 = $.world.get$uiImages();
    if (typeof t5 !== "string" && (typeof t5 !== "object" || t5 === null || t5.constructor !== Array && !t5.$isJavaScriptIndexingBehavior()))
      return this.render$1$bailout(3, c, 0, 0, t5);
    if (26 >= t5.length)
      throw $.ioore(26);
    c.drawImage$3(t5[26], 0, -16);
    t7 = $.world.get$uiImages();
    if (typeof t7 !== "string" && (typeof t7 !== "object" || t7 === null || t7.constructor !== Array && !t7.$isJavaScriptIndexingBehavior()))
      return this.render$1$bailout(4, c, 0, 0, 0, t7);
    if (27 >= t7.length)
      throw $.ioore(27);
    c.drawImage$3(t7[27], 32, -16);
    c.set$globalAlpha(0.75);
    c.set$font("12px Arial");
    c.set$textAlign("center");
    c.set$fillStyle("#fff");
    c.fillText$3(this.text, 0, 4);
    c.restore$0();
  },
  render$1$bailout: function(state0, c, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        c.save$0();
        c.translate$2(this.x, this.y);
        c.scale$2(1.5, 1.5);
        t1 = $.world.get$uiImages();
      case 1:
        state0 = 0;
        c.drawImage$3($.$$index(t1, 25), -64, -16);
        t3 = $.world.get$uiImages();
      case 2:
        state0 = 0;
        c.drawImage$3($.$$index(t3, 26), -32, -16);
        t5 = $.world.get$uiImages();
      case 3:
        state0 = 0;
        c.drawImage$3($.$$index(t5, 26), 0, -16);
        t7 = $.world.get$uiImages();
      case 4:
        state0 = 0;
        c.drawImage$3($.$$index(t7, 27), 32, -16);
        c.set$globalAlpha(0.75);
        c.set$font("12px Arial");
        c.set$textAlign("center");
        c.set$fillStyle("#fff");
        c.fillText$3(this.text, 0, 4);
        c.restore$0();
    }
  }
};

$$.MenuInterface = {"": "Object;type=,data,renderFunction,buttons,ax",
  renderFunction$1: function(arg0) {
    return this.renderFunction.call$1(arg0);
  },
  clickAt$2: function(x, y) {
    var t1 = {};
    t1.returner_0 = false;
    $.any(this.buttons, new $.MenuInterface_clickAt_anon(t1, x, y));
    return t1.returner_0;
  },
  render$1: function(c) {
    var t1;
    c.save$0();
    c.translate$2(this.ax, 0);
    t1 = this.ax;
    if (typeof t1 !== "number")
      return this.render$1$bailout(1, c, t1);
    this.ax = t1 / 1.5;
    this.renderFunction$1(c);
    c.restore$0();
  },
  render$1$bailout: function(state0, c, t1) {
    this.ax = $.$$div(t1, 1.5);
    this.renderFunction$1(c);
    c.restore$0();
  },
  renderOptionsMenu$1: function(c) {
    $.forEach(this.buttons, new $.MenuInterface_renderOptionsMenu_anon(c));
  },
  get$renderOptionsMenu: function() {
    return new $.BoundClosure$1(this, "renderOptionsMenu$1");
  },
  renderConfirmMenu$1: function(c) {
    var cx, cy, ui, t2, pattern, t3, t4, t5, t7, t1, i, t6, t8;
    cx = $.$$div($.SCREEN_WIDTH, 2);
    cy = $.$$div($.SCREEN_HEIGHT, 2);
    ui = $.world.get$uiImages();
    if (typeof ui !== "string" && (typeof ui !== "object" || ui === null || ui.constructor !== Array && !ui.$isJavaScriptIndexingBehavior()))
      return this.renderConfirmMenu$1$bailout(1, c, ui, cx, cy);
    t2 = $.getInterceptor$JSArrayJSString(ui);
    if (16 >= ui.length)
      throw $.ioore(16);
    pattern = c.createPattern$2(ui[16], "repeat");
    c.beginPath$0();
    c.set$fillStyle(pattern);
    t3 = cx - 300;
    t4 = t3 + 32 + 10;
    t5 = cy - 200;
    if (typeof t5 !== "number")
      return this.renderConfirmMenu$1$bailout(2, c, ui, cx, cy, t4, t3, t5, t2);
    t7 = t5 + 32;
    c.rect$4(t4, t7, 516, 312);
    c.fill$0();
    c.closePath$0();
    if (8 >= ui.length)
      throw $.ioore(8);
    t4 = ui[8];
    t3 += 12;
    if (typeof t3 !== "number")
      return this.renderConfirmMenu$1$bailout(3, c, ui, cx, cy, t4, t3, t5, t2, t7);
    c.drawImage$3(t4, t3, t5);
    t1 = t3 + 32;
    t4 = cy + 200 - 64;
    if (typeof t4 !== "number")
      return this.renderConfirmMenu$1$bailout(4, c, ui, cx, cy, t4, t3, t5, t2, t7, t1);
    i = 0;
    for (; i < 16; ++i) {
      if (9 >= ui.length)
        throw $.ioore(9);
      t6 = t1 + i * 32;
      c.drawImage$3(ui[9], t6, t5);
      if (23 >= ui.length)
        throw $.ioore(23);
      c.drawImage$3(ui[23], t6, t4);
    }
    t1 = cx + 300;
    t6 = t1 - 12 - 32;
    if (typeof t6 !== "number")
      return this.renderConfirmMenu$1$bailout(5, c, ui, cx, cy, t4, t3, t5, t2, t7, t1, t6);
    i = 0;
    for (; t2 = ui.length, i < 10; ++i) {
      if (15 >= t2)
        throw $.ioore(15);
      t8 = t7 + i * 32;
      c.drawImage$3(ui[15], t3, t8);
      if (17 >= ui.length)
        throw $.ioore(17);
      c.drawImage$3(ui[17], t6, t8);
    }
    if (10 >= t2)
      throw $.ioore(10);
    t6 = t1 - 32 - 12;
    c.drawImage$3(ui[10], t6, t5);
    if (22 >= ui.length)
      throw $.ioore(22);
    c.drawImage$3(ui[22], t3, t4);
    if (24 >= ui.length)
      throw $.ioore(24);
    c.drawImage$3(ui[24], t6, t4);
    c.set$font("18px Arial");
    c.set$fillStyle("#ab7d10");
    c.set$textAlign("center");
    c.fillText$3(this.data.$index("text"), cx, cy);
    $.forEach(this.buttons, new $.MenuInterface_renderConfirmMenu_anon(c));
  },
  renderConfirmMenu$1$bailout: function(state0, c, ui, cx, cy, t4, t3, t5, t2, t7, t1, t6) {
    switch (state0) {
      case 0:
        cx = $.$$div($.SCREEN_WIDTH, 2);
        cy = $.$$div($.SCREEN_HEIGHT, 2);
        ui = $.world.get$uiImages();
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$JSArrayJSString(ui);
        pattern = c.createPattern$2(t2.$index(ui, 16), "repeat");
        c.beginPath$0();
        c.set$fillStyle(pattern);
        t3 = cx - 300;
        t4 = t3 + 32 + 10;
        t5 = cy - 200;
      case 2:
        state0 = 0;
        t7 = t5 + 32;
        c.rect$4(t4, t7, 516, 312);
        c.fill$0();
        c.closePath$0();
        t4 = t2.$index(ui, 8);
        t3 += 12;
      case 3:
        state0 = 0;
        c.drawImage$3(t4, t3, t5);
        t1 = t3 + 32;
        t4 = cy + 200 - 64;
      case 4:
        state0 = 0;
        i = 0;
        for (; i < 16; ++i) {
          t6 = t1 + i * 32;
          c.drawImage$3(t2.$index(ui, 9), t6, t5);
          c.drawImage$3(t2.$index(ui, 23), t6, t4);
        }
        t1 = cx + 300;
        t6 = t1 - 12 - 32;
      case 5:
        var pattern, i, t8;
        state0 = 0;
        i = 0;
        for (; i < 10; ++i) {
          t8 = t7 + i * 32;
          c.drawImage$3(t2.$index(ui, 15), t3, t8);
          c.drawImage$3(t2.$index(ui, 17), t6, t8);
        }
        t6 = t1 - 32 - 12;
        c.drawImage$3(t2.$index(ui, 10), t6, t5);
        c.drawImage$3(t2.$index(ui, 22), t3, t4);
        c.drawImage$3(t2.$index(ui, 24), t6, t4);
        c.set$font("18px Arial");
        c.set$fillStyle("#ab7d10");
        c.set$textAlign("center");
        c.fillText$3(this.data.$index("text"), cx, cy);
        $.forEach(this.buttons, new $.MenuInterface_renderConfirmMenu_anon(c));
    }
  },
  get$renderConfirmMenu: function() {
    return new $.BoundClosure$1(this, "renderConfirmMenu$1");
  },
  MenuInterface$2: function(type, data) {
    var options, t1, i, $name, func, t2, t3, t4, t5, t6, t7, cx, cy;
    this.buttons = $.List_List(0);
    this.ax = $.$$negate($.SCREEN_WIDTH);
    switch (this.type) {
      case "options":
        this.renderFunction = this.get$renderOptionsMenu();
        options = this.data.$index("options");
        for (t1 = $.getInterceptor$JSArrayJSString(options), i = 0; $.CONSTANT9.$lt(i, t1.get$length(options)); ++i) {
          $name = $.$$index(t1.$index(options, i), "name");
          func = $.$$index(t1.$index(options, i), "func");
          t2 = this.buttons;
          t3 = $.$$div($.SCREEN_WIDTH, 8);
          t4 = $.CONSTANT9.$mod(i, 2);
          t5 = $.$$div($.SCREEN_HEIGHT, 8);
          t6 = $.$$mul($.CONSTANT7.toInt$0(i / 2), 50);
          if (typeof t6 !== "number")
            throw $.iae(t6);
          $.add(t2, $.MenuButton$($name, func, t3 + t4 * 200, t5 + t6));
        }
        t2 = this.buttons;
        t3 = new $.anon70();
        t4 = $.$$div($.SCREEN_WIDTH, 8);
        t5 = $.$$mul($.$$mod(t1.get$length(options), 2), 200);
        if (typeof t5 !== "number")
          throw $.iae(t5);
        t6 = $.$$div($.SCREEN_HEIGHT, 8);
        t7 = $.$$mul($.CONSTANT7.toInt$0($.$$div(t1.get$length(options), 2)), 50);
        if (typeof t7 !== "number")
          throw $.iae(t7);
        $.add(t2, $.MenuButton$("Exit", t3, t4 + t5, t6 + t7));
        break;
      case "confirm":
        this.renderFunction = this.get$renderConfirmMenu();
        cx = $.$$div($.SCREEN_WIDTH, 2);
        cy = $.$$div($.SCREEN_HEIGHT, 2);
        t1 = cy + 100;
        $.add(this.buttons, $.MenuButton$("Cancel", new $.anon71(), cx - 150, t1));
        $.add(this.buttons, $.MenuButton$("Confirm", this.data.$index("func"), cx + 150, t1));
        break;
      case "broke":
        this.renderFunction = this.get$renderConfirmMenu();
        cx = $.$$div($.SCREEN_WIDTH, 2);
        cy = $.$$div($.SCREEN_HEIGHT, 2);
        t1 = cy + 100;
        $.add(this.buttons, $.MenuButton$("Cancel", new $.anon72(), cx - 150, t1));
        $.add(this.buttons, $.MenuButton$("Not Enough Coin", new $.anon73(), cx + 150, t1));
        break;
    }
  }
};

$$.World = {"": "Object;dataTree>,mapsTree,currentMapTree>,bottomTileManager,topTileManager,menuInterfaces>,overlay,camera,objects>,onscene>,offscene>,map_width,collisionMap,itemImages<,uiImages=,AGRO_DISTANCE>,ZOMBIE_WANDER_DISTANCE,ZOMBIE_SPEED>,ZOMBIE_ARMOR>,ZOMBIE_DAMAGE>,paths>,pathnodes>,time=,dayLength=,night_mode,totalPopulation=,saved=,awakePopulation=,dayCount=,zombie_max=,zombie_out=,zombies_killed=,rapid_clicks=,guard_total=,guard_price=,difficultyMode,controlsOpen=,controlsImage<,playerWeapons>,currentWeapon=,weaponDamage>,weaponAttackTime>,weaponAttackTypes>,weaponAttackRadius,weaponCost>,weaponCost2>,weaponName>,weaponStartFrame,multiplier,multiplier_time,max_multiplier_time,coin=,player_animation,player_max_health=,intro=,slideTime,currentSlide,slides,slidex_pos,slidey_pos,slide_dir,paused=,player>,lastSaved",
  load$2: function(json, callback) {
    var objectList;
    $.Primitives_printString("Beginning Parse");
    this.dataTree = $.parse(json, null);
    objectList = $.$$index(this.dataTree, "objects");
    this.mapsTree = $.$$index(this.dataTree, "maps");
    $.Primitives_printString("Unpacking Game");
    this.unpackObjects$1(objectList);
    $.Primitives_printString("Data Parsed");
    $.res_loadSplitImage("items.png", new $.World_load_anon(this, callback), 32, 32);
  },
  loadMap$2: function($name, callback) {
    var map, t1;
    map = $.$$index(this.mapsTree, $name);
    this.currentMapTree = map;
    t1 = $.getInterceptor$JSArrayJSString(map);
    this.unpackMapObjects$1(t1.$index(map, "objects"));
    this.unpackMapPaths$1(t1.$index(map, "paths"));
    this.bottomTileManager = $.TileManager$("map_bottom");
    this.topTileManager = $.TileManager$("map_top");
    $.res_loadFile(t1.$index(map, "collision-map"), new $.World_loadMap_anon(this, callback));
  },
  spawnObject$2: function(type, props) {
    var t1, ob;
    t1 = $.classMap;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.spawnObject$2$bailout(1, type, props, t1);
    if (type !== (type | 0))
      throw $.iae(type);
    if (type < 0 || type >= t1.length)
      throw $.ioore(type);
    ob = t1[type].call$1(props);
    ob.set$type(type);
    $.add(ob.get$tags(), type);
    $.add(ob.get$tags(), "uninit");
    $.addTag(ob, type);
    $.addTag(ob, "uninit");
    this.objects.push(ob);
    this.onscene.push(ob);
    return ob;
  },
  spawnObject$2$bailout: function(state0, type, props, t1) {
    var ob = $.$$index(t1, type).call$1(props);
    ob.set$type(type);
    $.add(ob.get$tags(), type);
    $.add(ob.get$tags(), "uninit");
    $.addTag(ob, type);
    $.addTag(ob, "uninit");
    this.objects.push(ob);
    this.onscene.push(ob);
    return ob;
  },
  unpackMapObjects$1: function(rol) {
    var i, t1;
    if (typeof rol !== "string" && (typeof rol !== "object" || rol === null || rol.constructor !== Array && !rol.$isJavaScriptIndexingBehavior()))
      return this.unpackMapObjects$1$bailout(1, rol);
    for (i = 0; i < rol.length; ++i) {
      t1 = $.$$index(rol[i], "type");
      if (i >= rol.length)
        throw $.ioore(i);
      this.spawnObject$2(t1, rol[i]);
    }
  },
  unpackMapObjects$1$bailout: function(state0, rol) {
    var t1, i;
    for (t1 = $.getInterceptor$JSArrayJSString(rol), i = 0; $.CONSTANT9.$lt(i, t1.get$length(rol)); ++i)
      this.spawnObject$2($.$$index(t1.$index(rol, i), "type"), t1.$index(rol, i));
  },
  unpackMapPaths$1: function(lst) {
    $.forEach(lst, new $.World_unpackMapPaths_anon(this));
  },
  unpackObjects$1: function(list) {
    var box_0, t1, box_00, t2, t3;
    box_0 = {};
    for (box_0.i_0 = 0, t1 = $.getInterceptor$JSArrayJSString(list); $.$$lt(box_0.i_0, t1.get$length(list)) === true; box_00 = {}, box_00.i_0 = box_0.i_0, box_00.i_0 = $.$$add(box_00.i_0, 1), box_0 = box_00) {
      t2 = $.$$index(t1.$index(list, box_0.i_0), "type");
      t3 = box_0.i_0;
      switch (t2) {
        case "animation":
          $.$$indexSet($.animationMap, $.$$index(t1.$index(list, t3), "name"), $.Animation$(t1.$index(list, box_0.i_0)));
          break;
        case "avatar":
          $.$$indexSet($.classMap, $.$$index(t1.$index(list, t3), "name"), new $.World_unpackObjects_anon(box_0, list));
          break;
        case "item":
          $.$$indexSet($.classMap, $.$$index(t1.$index(list, t3), "name"), new $.World_unpackObjects_anon0(box_0, list));
          break;
        case "node":
          $.$$indexSet($.classMap, $.$$index(t1.$index(list, t3), "name"), new $.World_unpackObjects_anon1(box_0, list));
          break;
        default:
          $.Primitives_printString("Type not found: " + $.S($.$$index(t1.$index(list, t3), "type")));
          break;
      }
    }
  },
  fmtCollisionMap$1: function(data) {
    var t1, chars, cir, ci, bseq, hexMap, t2;
    this.collisionMap = $.List_List(0);
    t1 = $.getInterceptor$JSString(data);
    chars = t1.splitChars$0(data);
    for (cir = 0; $.CONSTANT9.$lt(cir, $.$$mul(t1.get$length(data), 4)); ++cir) {
      ci = $.CONSTANT7.toInt$0(cir / 4);
      bseq = $.CONSTANT9.$mod(cir, 4);
      if (ci !== (ci | 0))
        throw $.iae(ci);
      if (ci < 0 || ci >= chars.length)
        throw $.ioore(ci);
      hexMap = $.CONSTANT32.$index(chars[ci]);
      if (!(hexMap == null)) {
        t2 = this.collisionMap;
        $.add(t2, $.$$eq($.$$index(hexMap, bseq), 1) === true && true);
      }
    }
    this.map_width = $.CONSTANT7.toInt$0($.CONSTANT11.ceil$0(Math.sqrt($.checkNum($.length(this.collisionMap)))));
    $.Primitives_printString("Collision Map Loaded, Size : " + $.S($.length(this.collisionMap)));
  },
  collisionAt$2: function(x, y) {
    var x0, y0;
    x0 = $.CONSTANT7.toInt$0($.$$div(x, 32));
    y0 = $.CONSTANT7.toInt$0($.$$div(y, 32) + 0.5);
    return $.$$index(this.collisionMap, $.$$add(x0, $.$$mul(y0, this.map_width)));
  },
  collisionAtVec2$1: function(v) {
    return this.collisionAt$2(v.get$x(), v.get$y());
  },
  increaseDifficulty$1: function(times) {
    var t1, t2, t3, t4;
    if (typeof times !== "number")
      return this.increaseDifficulty$1$bailout(1, times);
    t1 = this.ZOMBIE_WANDER_DISTANCE;
    if (typeof t1 !== "number")
      return this.increaseDifficulty$1$bailout(2, times, t1);
    this.ZOMBIE_WANDER_DISTANCE = $.CONSTANT11.toInt$0(t1 * 1.5);
    this.ZOMBIE_SPEED = this.ZOMBIE_SPEED * 1.1;
    t1 = this.ZOMBIE_SPEED;
    this.ZOMBIE_SPEED = t1 < 2 ? t1 : 2;
    t1 = this.ZOMBIE_DAMAGE;
    this.ZOMBIE_DAMAGE = t1 + 10 * ((75 - t1) / 75);
    t2 = this.ZOMBIE_ARMOR;
    this.ZOMBIE_ARMOR = t2 - (t2 - 0.25) / 10;
    t3 = this.AGRO_DISTANCE;
    this.AGRO_DISTANCE = t3 - (t3 - 512) / 10;
    t4 = this.zombie_max;
    if (typeof t4 !== "number")
      return this.increaseDifficulty$1$bailout(3, times, 0, t4);
    this.zombie_max = t4 + 20;
    return times > 0 ? this.increaseDifficulty$1(times - 1) : null;
  },
  increaseDifficulty$1$bailout: function(state0, times, t1, t4) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.ZOMBIE_WANDER_DISTANCE;
      case 2:
        state0 = 0;
        this.ZOMBIE_WANDER_DISTANCE = $.toInt($.$$mul(t1, 1.5));
        this.ZOMBIE_SPEED = this.ZOMBIE_SPEED * 1.1;
        t1 = this.ZOMBIE_SPEED;
        this.ZOMBIE_SPEED = t1 < 2 ? t1 : 2;
        t1 = this.ZOMBIE_DAMAGE;
        this.ZOMBIE_DAMAGE = t1 + 10 * ((75 - t1) / 75);
        t2 = this.ZOMBIE_ARMOR;
        this.ZOMBIE_ARMOR = t2 - (t2 - 0.25) / 10;
        t3 = this.AGRO_DISTANCE;
        this.AGRO_DISTANCE = t3 - (t3 - 512) / 10;
        t4 = this.zombie_max;
      case 3:
        var t2, t3;
        state0 = 0;
        this.zombie_max = $.$$add(t4, 20);
        t1 = $.getInterceptor$JSNumber(times);
        return t1.$gt(times, 0) === true ? this.increaseDifficulty$1(t1.$sub(times, 1)) : null;
    }
  },
  increaseDifficulty$0: function() {
    return this.increaseDifficulty$1(0);
  },
  openMenu$1: function(type) {
    var optionMap, nci, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
    $.Primitives_printString("Opening " + $.S(type) + " menu");
    switch (type) {
      case "weapons":
        optionMap = [];
        for (nci = 0; t1 = this.playerWeapons, nci < t1.length; ++nci)
          if (t1[nci] !== true) {
            t1 = this.weaponName;
            if (nci >= t1.length)
              throw $.ioore(nci);
            t2 = $.splitChars(t1[nci]);
            if (0 >= t2.length)
              throw $.ioore(0);
            t3 = $.toUpperCase(t2[0]);
            t4 = this.weaponName;
            if (nci >= t4.length)
              throw $.ioore(nci);
            t5 = t3 + $.substring0(t4[nci], 1) + " ";
            t6 = this.weaponCost;
            if (nci >= t6.length)
              throw $.ioore(nci);
            optionMap.push($.makeLiteralMap(["name", t5 + $.S(t6[nci]) + "c", "func", new $.World_openMenu_anon(this, nci)]));
          }
        this.menuInterfaces.push($.MenuInterface$("options", $.makeLiteralMap(["options", optionMap])));
        break;
      case "upgrades":
        optionMap = [];
        for (nci = 1; t1 = this.playerWeapons, nci < t1.length; ++nci)
          if (t1[nci] === true) {
            t1 = this.weaponName;
            if (nci >= t1.length)
              throw $.ioore(nci);
            t2 = $.splitChars(t1[nci]);
            if (0 >= t2.length)
              throw $.ioore(0);
            t3 = $.toUpperCase(t2[0]);
            t4 = this.weaponName;
            if (nci >= t4.length)
              throw $.ioore(nci);
            t5 = t3 + $.substring0(t4[nci], 1) + " Damage ";
            t6 = this.weaponCost;
            if (nci >= t6.length)
              throw $.ioore(nci);
            optionMap.push($.makeLiteralMap(["name", t5 + $.S(t6[nci]) + "c", "func", new $.World_openMenu_anon0(this, nci)]));
            t7 = this.weaponName;
            if (nci >= t7.length)
              throw $.ioore(nci);
            t8 = $.splitChars(t7[nci]);
            if (0 >= t8.length)
              throw $.ioore(0);
            t9 = $.toUpperCase(t8[0]);
            t10 = this.weaponName;
            if (nci >= t10.length)
              throw $.ioore(nci);
            t11 = t9 + $.substring0(t10[nci], 1) + " Attack Rate ";
            t12 = this.weaponCost2;
            if (nci >= t12.length)
              throw $.ioore(nci);
            optionMap.push($.makeLiteralMap(["name", t11 + $.S(t12[nci]) + "c", "func", new $.World_openMenu_anon1(this, nci)]));
          }
        this.menuInterfaces.push($.MenuInterface$("options", $.makeLiteralMap(["options", optionMap])));
        break;
      case "health":
        t1 = $.$$ge(this.coin, 300);
        t2 = this.menuInterfaces;
        if (t1 === true)
          t2.push($.MenuInterface$("confirm", $.makeLiteralMap(["text", "Would you like to buy a health upgrade for 300c?", "func", new $.World_openMenu_anon2(this)])));
        else
          t2.push($.MenuInterface$("broke", $.makeLiteralMap(["text", "Would you like to buy a health upgrade for 300c?"])));
        break;
      case "guards":
        t1 = $.$$ge(this.coin, this.guard_price);
        t2 = this.menuInterfaces;
        if (t1 === true)
          t2.push($.MenuInterface$("confirm", $.makeLiteralMap(["text", "Would you like to buy an additional patrol guard for " + $.S(this.guard_price) + "c?", "func", new $.World_openMenu_anon3(this)])));
        else
          t2.push($.MenuInterface$("broke", $.makeLiteralMap(["text", "You cannot afford an additional guard."])));
        break;
    }
  },
  purchaseWeapon$1: function(weaponID) {
    var t1, t2, t3, t4;
    t1 = this.coin;
    t2 = this.weaponCost;
    if (weaponID !== (weaponID | 0))
      throw $.iae(weaponID);
    if (weaponID < 0 || weaponID >= t2.length)
      throw $.ioore(weaponID);
    this.coin = $.$$sub(t1, t2[weaponID]);
    t3 = this.playerWeapons;
    if (weaponID >= t3.length)
      throw $.ioore(weaponID);
    t3[weaponID] = true;
    t3 = this.weaponCost;
    if (weaponID >= t3.length)
      throw $.ioore(weaponID);
    t4 = $.CONSTANT7.toInt$0($.$$div(t3[weaponID], 2));
    if (weaponID >= t3.length)
      throw $.ioore(weaponID);
    t3[weaponID] = t4;
    t4 = this.weaponCost2;
    t3 = this.weaponCost;
    if (weaponID >= t3.length)
      throw $.ioore(weaponID);
    t3 = t3[weaponID];
    if (weaponID >= t4.length)
      throw $.ioore(weaponID);
    t4[weaponID] = t3;
    $.notify("Press E to change weapons");
  },
  purchaseUpgrade$2: function(type, weaponID) {
    var t1, t2, t3, t4;
    switch (type) {
      case "damage":
        t1 = this.weaponDamage;
        if (weaponID !== (weaponID | 0))
          throw $.iae(weaponID);
        if (weaponID < 0 || weaponID >= t1.length)
          throw $.ioore(weaponID);
        t2 = $.$$mul(t1[weaponID], 1.5);
        if (weaponID >= t1.length)
          throw $.ioore(weaponID);
        t1[weaponID] = t2;
        t2 = this.coin;
        t1 = this.weaponCost;
        if (weaponID >= t1.length)
          throw $.ioore(weaponID);
        this.coin = $.$$sub(t2, t1[weaponID]);
        t3 = this.weaponCost;
        if (weaponID >= t3.length)
          throw $.ioore(weaponID);
        t4 = $.$$mul(t3[weaponID], 2);
        if (weaponID >= t3.length)
          throw $.ioore(weaponID);
        t3[weaponID] = t4;
        break;
      case "rate":
        t1 = this.weaponAttackTime;
        if (weaponID !== (weaponID | 0))
          throw $.iae(weaponID);
        if (weaponID < 0 || weaponID >= t1.length)
          throw $.ioore(weaponID);
        t2 = $.$$sub(t1[weaponID], 2);
        if (weaponID >= t1.length)
          throw $.ioore(weaponID);
        t1[weaponID] = t2;
        t2 = this.coin;
        t1 = this.weaponCost2;
        if (weaponID >= t1.length)
          throw $.ioore(weaponID);
        this.coin = $.$$sub(t2, t1[weaponID]);
        t3 = this.weaponCost2;
        if (weaponID >= t3.length)
          throw $.ioore(weaponID);
        t4 = $.$$mul(t3[weaponID], 2);
        if (weaponID >= t3.length)
          throw $.ioore(weaponID);
        t3[weaponID] = t4;
        break;
    }
  },
  getClosePathNodes$1: function(v) {
    var cnodes = $.List_List(0);
    $.CONSTANT2.forEach$1(this.pathnodes, new $.World_getClosePathNodes_anon(v, cnodes));
    return cnodes;
  },
  spawnGuard$0: function() {
    var t1, t2, t3, t4, pn;
    t1 = this.pathnodes;
    t2 = t1.length;
    t3 = $.get$random_number_generator().nextDouble$0();
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t4 = $.CONSTANT7.toInt$0(t2 * t3);
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    pn = t1[t4];
    this.spawnObject$2("guard", $.makeLiteralMap(["x", pn.get$x(), "y", pn.get$y()]));
  },
  setGuardPath$1: function(guard) {
    var t1, cnodes, t2, destinationNode;
    t1 = {};
    cnodes = this.getClosePathNodes$1(guard);
    t2 = $.getInterceptor$JSArrayJSString(cnodes);
    if ($.$$eq(t2.get$length(cnodes), 0) === true) {
      t1.closest_0 = null;
      $.forEach($.world.get$pathnodes(), new $.World_setGuardPath_anon(t1, guard, 9999));
      destinationNode = t1.closest_0;
    } else
      destinationNode = t2.$index(cnodes, $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), t2.get$length(cnodes))));
    t1 = $.getInterceptor$JSArray(guard);
    t1.$indexSet(guard, "path", destinationNode.get$path());
    t1.$indexSet(guard, "destination", $.add(destinationNode.clone$0(), t1.$index(guard, "positionOffset")));
    t1.$indexSet(guard, "pathDirection", destinationNode.get$start() === true ? 1 : -1);
    t1.$indexSet(guard, "pathIndex", destinationNode.get$start() === true ? 0 : $.$$sub($.length(destinationNode.get$path().get$points()), 1));
  },
  startCycle$1: function(context) {
    var t1, t2, i, t3;
    t1 = {};
    this.player = $.$$index($.$$index($.tags, "player"), 0);
    t2 = this.difficultyMode;
    if (t2 > 0)
      this.increaseDifficulty$1(t2);
    if (this.intro === true) {
      this.player_animation = this.player.get$animation();
      t2 = $.Animation$($.makeLiteralMap([]));
      this.player.set$animation(t2);
    }
    for (i = 0; $.CONSTANT9.$lt(i, this.guard_total); ++i)
      this.spawnGuard$0();
    this.player.removeTag$1("citizen");
    this.sortScreenObjects$0();
    t2 = this.camera;
    t3 = this.player;
    t2.set$2(t3.get$x(), t3.get$y());
    this.paused = false;
    $.add($.event.get$onKeyPress(), new $.World_startCycle_anon(this));
    if ($.DEBUG === true) {
      t1.debugPathNodes_3 = $.List_List(0);
      $.add($.event.get$onKeyPress(), new $.World_startCycle_anon0(t1, this));
    }
    $.add($.event.get$onClick(), new $.World_startCycle_anon1(this));
    $.add($.event.get$onKeyPress(), new $.World_startCycle_anon2(this));
    t2 = new $.World_startCycle_cycle(this, context);
    t1.interval_4 = null;
    t1.interval_4 = $.Timer_Timer$repeating($.Duration$(0, 0, 16, 0, 0), new $.World_startCycle_anon3(t1, this));
    t2.call$1(0);
  },
  equipWeapon$2: function(avatar, weaponID) {
    var t1, t2, t3, t4;
    if ($.$$eq(weaponID, 0) !== true)
      avatar.set$weaponAnimation($.$$index($.animationMap, "weapon" + $.S(weaponID)));
    else
      avatar.set$weaponAnimation(null);
    t1 = this.weaponDamage;
    if (weaponID !== (weaponID | 0))
      throw $.iae(weaponID);
    if (weaponID < 0 || weaponID >= t1.length)
      throw $.ioore(weaponID);
    avatar.set$damage(t1[weaponID]);
    t2 = this.weaponAttackTime;
    if (weaponID >= t2.length)
      throw $.ioore(weaponID);
    avatar.set$attackTime(t2[weaponID]);
    t3 = this.weaponAttackTypes;
    if (weaponID >= t3.length)
      throw $.ioore(weaponID);
    avatar.set$attackType(t3[weaponID]);
    t4 = this.weaponAttackRadius;
    if (weaponID >= t4.length)
      throw $.ioore(weaponID);
    avatar.set$attackRadius($.$$div(t4[weaponID], 2));
  },
  getItemImage$1: function(index) {
    var t1 = this.itemImages;
    if (!(t1 == null))
      return $.$$index(t1, index);
    else
      return $.BLANK_IMAGE;
  },
  sortScreenObjects$0: function() {
    var iter, times, t1, t2, i, i0, i1, t0, a0, a1;
    if (this.offscene.length >= 1) {
      iter = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), this.offscene.length));
      if (iter !== (iter | 0))
        return this.sortScreenObjects$0$bailout(1, iter);
      times = 0;
      for (; t1 = this.offscene, t2 = t1.length, times < t2 / 16 + 1; ++iter, ++times) {
        i = $.CONSTANT9.$mod(iter, t2);
        if (i < 0 || i >= t2)
          throw $.ioore(i);
        if ($.CONSTANT11.$lt(t1[i].distanceTo$1(this.player), $.RENDER_DISTANCE)) {
          t1 = this.onscene;
          t2 = this.offscene;
          if (i >= t2.length)
            throw $.ioore(i);
          t1.push(t2[i]);
          $.CONSTANT2.removeRange$2(this.offscene, i, 1);
        } else {
          t1 = this.offscene;
          if (i >= t1.length)
            throw $.ioore(i);
          if (t1[i].get$markedForRemoval() === true)
            $.CONSTANT2.removeRange$2(t1, i, 1);
        }
      }
    }
    iter = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), this.onscene.length));
    if (iter !== (iter | 0))
      return this.sortScreenObjects$0$bailout(2, iter);
    times = 0;
    for (; t1 = this.onscene, t2 = t1.length, times < t2 / 16; ++iter, ++times) {
      i = $.CONSTANT9.$mod(iter, t2);
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      if ($.CONSTANT11.$gt(t1[i].distanceTo$1(this.player), $.RENDER_DISTANCE)) {
        t1 = this.offscene;
        t2 = this.onscene;
        if (i >= t2.length)
          throw $.ioore(i);
        t1.push(t2[i]);
        $.CONSTANT2.removeRange$2(this.onscene, i, 1);
      } else {
        t1 = this.onscene;
        if (i >= t1.length)
          throw $.ioore(i);
        if (t1[i].get$markedForRemoval() === true)
          $.CONSTANT2.removeRange$2(t1, i, 1);
      }
    }
    if (t2 >= 1)
      for (iter = 0; iter < 1 + this.onscene.length / 4; ++iter) {
        i0 = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), this.onscene.length));
        t1 = $.getInterceptor$JSNumber(i0);
        i1 = $.$$mod($.toInt($.$$sub(t1.$add(i0, $.$$mul($.get$random_number_generator().nextDouble$0(), 6)), 3)), this.onscene.length);
        if (t1.$gt(i0, i1) === true) {
          t0 = i1;
          i1 = i0;
          i0 = t0;
        }
        if ($.$$eq(i0, i1) !== true) {
          t1 = this.onscene;
          if (i0 !== (i0 | 0))
            throw $.iae(i0);
          t2 = t1.length;
          if (i0 < 0 || i0 >= t2)
            throw $.ioore(i0);
          a0 = t1[i0];
          if (i1 !== (i1 | 0))
            throw $.iae(i1);
          if (i1 < 0 || i1 >= t2)
            throw $.ioore(i1);
          a1 = t1[i1];
          if ($.$$gt(a0.get$y(), a1.get$y()) === true) {
            t1 = this.onscene;
            t2 = t1.length;
            if (i0 >= t2)
              throw $.ioore(i0);
            t1[i0] = a1;
            if (i1 >= t2)
              throw $.ioore(i1);
            t1[i1] = a0;
          }
        }
      }
  },
  sortScreenObjects$0$bailout: function(state0, iter) {
    switch (state0) {
      case 0:
      case 1:
        if (state0 === 1 || state0 === 0 && this.offscene.length >= 1)
          switch (state0) {
            case 0:
              iter = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), this.offscene.length));
            case 1:
              state0 = 0;
              times = 0;
              for (; t1 = this.offscene.length, times < t1 / 16 + 1; iter = t2.$add(iter, 1), ++times) {
                t2 = $.getInterceptor$JSNumber(iter);
                i = t2.$mod(iter, t1);
                t1 = this.offscene;
                if (i !== (i | 0))
                  throw $.iae(i);
                if (i < 0 || i >= t1.length)
                  throw $.ioore(i);
                if ($.CONSTANT11.$lt(t1[i].distanceTo$1(this.player), $.RENDER_DISTANCE)) {
                  t1 = this.onscene;
                  t3 = this.offscene;
                  if (i >= t3.length)
                    throw $.ioore(i);
                  t1.push(t3[i]);
                  $.CONSTANT2.removeRange$2(this.offscene, i, 1);
                } else {
                  t1 = this.offscene;
                  if (i >= t1.length)
                    throw $.ioore(i);
                  if (t1[i].get$markedForRemoval() === true)
                    $.CONSTANT2.removeRange$2(t1, i, 1);
                }
              }
          }
        iter = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), this.onscene.length));
      case 2:
        var times, t1, t2, i, t3, i0, i1, t0, a0, a1;
        state0 = 0;
        times = 0;
        for (; t1 = this.onscene.length, times < t1 / 16; iter = t2.$add(iter, 1), ++times) {
          t2 = $.getInterceptor$JSNumber(iter);
          i = t2.$mod(iter, t1);
          t1 = this.onscene;
          if (i !== (i | 0))
            throw $.iae(i);
          if (i < 0 || i >= t1.length)
            throw $.ioore(i);
          if ($.CONSTANT11.$gt(t1[i].distanceTo$1(this.player), $.RENDER_DISTANCE)) {
            t1 = this.offscene;
            t3 = this.onscene;
            if (i >= t3.length)
              throw $.ioore(i);
            t1.push(t3[i]);
            $.CONSTANT2.removeRange$2(this.onscene, i, 1);
          } else {
            t1 = this.onscene;
            if (i >= t1.length)
              throw $.ioore(i);
            if (t1[i].get$markedForRemoval() === true)
              $.CONSTANT2.removeRange$2(t1, i, 1);
          }
        }
        if (t1 >= 1)
          for (iter = 0; iter < 1 + this.onscene.length / 4; ++iter) {
            i0 = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), this.onscene.length));
            t1 = $.getInterceptor$JSNumber(i0);
            i1 = $.$$mod($.toInt($.$$sub(t1.$add(i0, $.$$mul($.get$random_number_generator().nextDouble$0(), 6)), 3)), this.onscene.length);
            if (t1.$gt(i0, i1) === true) {
              t0 = i1;
              i1 = i0;
              i0 = t0;
            }
            if ($.$$eq(i0, i1) !== true) {
              t1 = this.onscene;
              if (i0 !== (i0 | 0))
                throw $.iae(i0);
              t2 = t1.length;
              if (i0 < 0 || i0 >= t2)
                throw $.ioore(i0);
              a0 = t1[i0];
              if (i1 !== (i1 | 0))
                throw $.iae(i1);
              if (i1 < 0 || i1 >= t2)
                throw $.ioore(i1);
              a1 = t1[i1];
              if ($.$$gt(a0.get$y(), a1.get$y()) === true) {
                t1 = this.onscene;
                t2 = t1.length;
                if (i0 >= t2)
                  throw $.ioore(i0);
                t1[i0] = a1;
                if (i1 >= t2)
                  throw $.ioore(i1);
                t1[i1] = a0;
              }
            }
          }
    }
  },
  update$0: function() {
    var t1, t3, t5, t2, t4, t7, citizen, house, zs_list, zs, zom, protips, t8, t6, inc, t9, t11, t12, t14, lst, i, iter, index;
    t1 = $.rpatCount;
    t3 = $.get$random_number_generator().nextDouble$0();
    if (typeof t3 !== "number")
      return this.update$0$bailout(2, t1, t3);
    t5 = $.CONSTANT7.toInt$0(t3 * 64);
    if (typeof t1 !== "number")
      return this.update$0$bailout(1, t1);
    if (typeof t5 !== "number")
      return this.update$0$bailout(3, t1, 0, t5);
    $.rpatCount = t1 + t5;
    t1 = this.rapid_clicks;
    if (typeof t1 !== "number")
      return this.update$0$bailout(4, t1);
    if (t1 > 0) {
      t2 = $.rpatCount;
      if (typeof t2 !== "number")
        return this.update$0$bailout(5, t2);
      $.rpatCount = t2 + 1;
      t4 = $.CONSTANT7.$mod(t2, 30) === 0;
      t2 = t4;
    } else
      t2 = false;
    if (t2)
      this.rapid_clicks = t1 - 1;
    t1 = this.multiplier_time;
    if (typeof t1 !== "number")
      return this.update$0$bailout(7, t1);
    if (t1 <= 0) {
      t1 = this.multiplier;
      if (t1 <= 2)
        this.multiplier = 1;
      else {
        this.multiplier = t1 - 1;
        t2 = this.max_multiplier_time;
        t3 = this.multiplier;
        if (t3 < 0 || t3 >= t2.length)
          throw $.ioore(t3);
        this.multiplier_time = t2[t3];
      }
    } else
      this.multiplier_time = t1 - 1;
    t1 = this.night_mode;
    if (t1) {
      t2 = this.time;
      if (typeof t2 !== "number")
        return this.update$0$bailout(9, t2);
      t2 = t2 > 6.5 && t2 < 21;
    } else
      t2 = false;
    if (t2) {
      this.night_mode = false;
      t1 = this.dayCount;
      if (typeof t1 !== "number")
        return this.update$0$bailout(11, t1);
      this.dayCount = t1 + 1;
      this.zombie_out = 0;
      $.notify("Day " + $.S(this.dayCount));
      $.notify("Total Population : " + $.S(this.totalPopulation));
      t1 = this.totalPopulation;
      if (typeof t1 !== "number")
        return this.update$0$bailout(12, t1);
      if (t1 < 100)
        if (t1 < 50) {
          $.notify("The population has fallen below 50");
          $.GameOver($.game.get$context());
        } else
          $.notify("WARNING! If your population falls below 50 you lose!");
      t1 = this.dayCount;
      if (typeof t1 !== "number")
        return this.update$0$bailout(14, t1);
      if (t1 > 1)
        this.increaseDifficulty$0();
      $.forEach($.$$index($.tags, "lost"), new $.World_update_anon());
      $.forEach($.$$index($.tags, "following"), new $.World_update_anon0());
      $.forEach($.$$index($.tags, "zombie"), new $.World_update_anon1());
    } else {
      if (!t1) {
        t1 = this.time;
        if (typeof t1 !== "number")
          return this.update$0$bailout(15, t1);
        t1 = t1 > 21 || t1 < 6.5;
      } else
        t1 = false;
      if (t1) {
        this.night_mode = true;
        $.forEach($.$$index($.tags, "wander"), new $.World_update_anon2());
        $.notify("Lost Citizens : " + $.S($.length($.$$index($.tags, "lost"))));
        $.notify("Save as many as possible!");
      }
    }
    if (!this.night_mode) {
      t1 = this.time;
      if (typeof t1 !== "number")
        return this.update$0$bailout(17, t1);
      if (t1 > 16) {
        t1 = $.rpatCount;
        if (typeof t1 !== "number")
          return this.update$0$bailout(18, t1);
        $.rpatCount = t1 + 1;
        t3 = $.CONSTANT7.$mod(t1, 5) === 0;
        t1 = t3;
      } else
        t1 = false;
    } else
      t1 = false;
    if (t1) {
      t1 = $.$$index($.tags, "wander");
      t3 = $.length($.$$index($.tags, "wander"));
      t5 = $.get$random_number_generator().nextDouble$0();
      if (typeof t3 !== "number")
        return this.update$0$bailout(20, t1, t3);
      if (typeof t5 !== "number")
        return this.update$0$bailout(21, t1, t3, t5);
      t7 = $.CONSTANT7.toInt$0(t3 * t5);
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.update$0$bailout(19, t1);
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t1.length)
        throw $.ioore(t7);
      citizen = t1[t7];
      if (citizen.hasTag$1("ai") === true && citizen.hasTag$1("lost") !== true && citizen.hasTag$1("citizen") === true) {
        t1 = $.get$random_number_generator().nextDouble$0();
        if (typeof t1 !== "number")
          return this.update$0$bailout(22, t1, 0, 0, citizen);
        if (t1 < 0.9) {
          $.switchTag(citizen, "wander", "homebound");
          $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(citizen);
        } else {
          $.add(citizen.get$tags(), "lost");
          $.addTag(citizen, "lost");
        }
      }
    }
    if (!this.night_mode) {
      t1 = this.time;
      if (typeof t1 !== "number")
        return this.update$0$bailout(23, t1);
      if (t1 < 12) {
        t1 = this.awakePopulation;
        t3 = this.totalPopulation;
        if (typeof t1 !== "number")
          return this.update$0$bailout(24, t1);
        if (typeof t3 !== "number")
          return this.update$0$bailout(25, t1, t3);
        t3 = t1 < t3;
        t1 = t3;
      } else
        t1 = false;
    } else
      t1 = false;
    if (t1) {
      t1 = $.$$index($.tags, "house");
      t3 = $.length($.$$index($.tags, "house"));
      t5 = $.get$random_number_generator().nextDouble$0();
      if (typeof t3 !== "number")
        return this.update$0$bailout(27, t1, t3);
      if (typeof t5 !== "number")
        return this.update$0$bailout(28, t1, t3, t5);
      t7 = $.CONSTANT7.toInt$0(t3 * t5);
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.update$0$bailout(26, t1);
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t1.length)
        throw $.ioore(t7);
      house = t1[t7];
      t1 = $.get$random_number_generator().nextDouble$0();
      if (typeof t1 !== "number")
        return this.update$0$bailout(29, t1, 0, 0, 0, house);
      t1 = t1 < 0.5 ? "wander" : "traveler";
      this.spawnObject$2("citizen", $.makeLiteralMap(["tag", ["friendly", t1, "ai"], "x", house.get$x(), "y", house.get$y(), "home", house]));
      t2 = this.awakePopulation;
      if (typeof t2 !== "number")
        return this.update$0$bailout(30, 0, 0, 0, 0, 0, t2);
      this.awakePopulation = t2 + 1;
    }
    if (this.night_mode) {
      t1 = this.time;
      if (typeof t1 !== "number")
        return this.update$0$bailout(31, t1);
      if (t1 < 4 || t1 > 21) {
        t1 = this.zombie_out;
        t3 = this.zombie_max;
        if (typeof t3 !== "number")
          return this.update$0$bailout(34, t1, t3);
        if (typeof t1 !== "number")
          return this.update$0$bailout(33, t1);
        if (!(t1 < t3 - 50))
          if (t1 < t3) {
            t2 = $.rpatCount;
            if (typeof t2 !== "number")
              return this.update$0$bailout(37, t2);
            $.rpatCount = t2 + 1;
            t4 = $.CONSTANT7.$mod(t2, 16) === 0;
            t2 = t4;
          } else
            t2 = false;
        else
          t2 = true;
        if (t2) {
          this.zombie_out = t1 + 1;
          zs_list = $.$$index($.tags, "zombie-spawn");
          if (typeof zs_list !== "string" && (typeof zs_list !== "object" || zs_list === null || zs_list.constructor !== Array && !zs_list.$isJavaScriptIndexingBehavior()))
            return this.update$0$bailout(39, 0, 0, 0, 0, 0, 0, zs_list);
          t3 = $.getInterceptor$JSArrayJSString(zs_list);
          t4 = zs_list.length;
          t5 = $.get$random_number_generator().nextDouble$0();
          if (typeof t5 !== "number")
            return this.update$0$bailout(41, 0, 0, t4, 0, 0, 0, zs_list, t3, t5);
          t7 = $.CONSTANT7.toInt$0(t4 * t5);
          if (t7 !== (t7 | 0))
            throw $.iae(t7);
          if (t7 < 0 || t7 >= zs_list.length)
            throw $.ioore(t7);
          zs = zs_list[t7];
          this.spawnObject$2("zombie", $.makeLiteralMap(["x", zs.get$x(), "y", zs.get$y()]));
        }
      } else {
        t1 = this.zombie_out;
        if (typeof t1 !== "number")
          return this.update$0$bailout(42, t1);
        if (t1 > 0) {
          t1 = $.rpatCount;
          if (typeof t1 !== "number")
            return this.update$0$bailout(43, t1);
          $.rpatCount = t1 + 1;
          t3 = $.CONSTANT7.$mod(t1, 30) === 0;
          t1 = t3;
        } else
          t1 = false;
        if (t1) {
          t1 = $.$$index($.tags, "zombie");
          t3 = $.length($.$$index($.tags, "zombie"));
          t5 = $.get$random_number_generator().nextDouble$0();
          if (typeof t3 !== "number")
            return this.update$0$bailout(45, t1, t3);
          if (typeof t5 !== "number")
            return this.update$0$bailout(46, t1, t3, t5);
          t7 = $.CONSTANT7.toInt$0(t3 * t5);
          if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
            return this.update$0$bailout(44, t1);
          if (t7 !== (t7 | 0))
            throw $.iae(t7);
          if (t7 < 0 || t7 >= t1.length)
            throw $.ioore(t7);
          zom = t1[t7];
          if (zom.hasTag$1("nestbound") !== true) {
            zom.removeTag$1("hostile");
            $.rmTag(zom, "hostile");
            zom.removeTag$1("hostile-wander");
            $.rmTag(zom, "hostile-wander");
            $.add(zom.get$tags(), "nestbound");
            $.addTag(zom, "nestbound");
            $.$$index($.$$index($.tagEvents, "nestbound"), "init").call$1(zom);
          }
        }
      }
    }
    t1 = $.rpatCount;
    if (typeof t1 !== "number")
      return this.update$0$bailout(47, t1);
    $.rpatCount = t1 + 1;
    if ($.CONSTANT7.$mod(t1, 2000) === 0) {
      protips = ["You can switch weapons with E", "Villagers tend to be meaner when you kill them", "Villagers will be nicer if you keep saving them", "Upgrades can be purchased for all weapons", "Zombies grow stronger every day, equip yourself accordingly", "You can press T to speed up time", "Press the SHIFT key to sprint", "You can purchase patrol guards to help keep villagers safe", "Health upgrades can be found in the bottom left region of the map", "Weapons can be purchased in the bottom right region of the map", "All vendors are located in towns", "Weapon upgrades are in the top right region of the map"];
      t1 = protips.length;
      t2 = $.get$random_number_generator().nextDouble$0();
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t3 = $.CONSTANT7.toInt$0(t1 * t2);
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= protips.length)
        throw $.ioore(t3);
      $.notify("Tip : " + $.S(protips[t3]));
    }
    if (this.night_mode) {
      t1 = $.rpatCount;
      if (typeof t1 !== "number")
        return this.update$0$bailout(48, t1);
      $.rpatCount = t1 + 1;
      if ($.CONSTANT7.$mod(t1, 60) === 0) {
        t1 = $.length($.$$index($.tags, "lost"));
        if (typeof t1 !== "number")
          return this.update$0$bailout(49, t1);
        t1 = t1 > 0;
      } else
        t1 = false;
    } else
      t1 = false;
    if (t1) {
      t1 = $.$$index($.tags, "lost");
      t3 = $.length($.$$index($.tags, "lost"));
      t5 = $.get$random_number_generator().nextDouble$0();
      if (typeof t3 !== "number")
        return this.update$0$bailout(51, t1, t3);
      if (typeof t5 !== "number")
        return this.update$0$bailout(52, t1, t3, t5);
      t7 = $.CONSTANT7.toInt$0(t3 * t5);
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.update$0$bailout(50, t1);
      if (t7 !== (t7 | 0))
        throw $.iae(t7);
      if (t7 < 0 || t7 >= t1.length)
        throw $.ioore(t7);
      t7 = t1[t7];
      t1 = $.get$random_number_generator().nextDouble$0();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t8 = $.CONSTANT7.toInt$0(5 * t1);
      if (t8 !== (t8 | 0))
        throw $.iae(t8);
      if (t8 < 0 || t8 >= $.CONSTANT33.length)
        throw $.ioore(t8);
      t7.say$1($.CONSTANT33[t8]);
    }
    if (this.intro !== true) {
      t1 = $.event.key$1("d");
      t3 = $.event.key$1("a");
      if (typeof t1 !== "number")
        return this.update$0$bailout(53, t1);
      if (typeof t3 !== "number")
        return this.update$0$bailout(54, t1, t3);
      t3 = t1 - t3;
      t1 = $.event.key$1("s");
      t6 = $.event.key$1("w");
      if (typeof t1 !== "number")
        return this.update$0$bailout(55, t1, t3);
      if (typeof t6 !== "number")
        return this.update$0$bailout(56, t1, t3, 0, 0, 0, 0, 0, 0, 0, t6);
      inc = $.Vec2$(t3, t1 - t6);
      t3 = inc.normalize$0();
      t8 = $.event.key$1("shift");
      if (typeof t8 !== "number")
        throw $.iae(t8);
      t3.multiplyScalar$1(2 * (1 + 1 * t8));
      $.add(this.player.get$velocity(), inc);
    } else {
      this.slideTime = this.slideTime + 1;
      t1 = this.slidex_pos;
      t2 = this.currentSlide;
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t1 = t1[t2];
      t4 = this.slideTime;
      t5 = this.slide_dir;
      if (t2 >= t5.length)
        throw $.ioore(t2);
      t5 = t5[t2];
      if (typeof t5 !== "number")
        throw $.iae(t5);
      if (typeof t1 !== "number")
        return this.update$0$bailout(57, t1, 0, 0, 0, 0, t2);
      this.camera.x = t1 + t4 * t5;
      t6 = this.slidey_pos;
      t7 = this.currentSlide;
      if (t7 < 0 || t7 >= t6.length)
        throw $.ioore(t7);
      t7 = t6[t7];
      this.camera.y = t7;
      t7 = this.player;
      t6 = this.camera;
      t7.set$2(t6.x, t6.y);
      if (this.slideTime >= 300) {
        this.slideTime = 0;
        this.currentSlide = this.currentSlide + 1;
        if (this.currentSlide >= this.slides.length) {
          this.intro = false;
          $.notify("Day " + $.S(this.dayCount));
          $.notify("Total Population : " + $.S(this.totalPopulation));
          this.player.set$2(4793, 4342);
          t1 = this.player_animation;
          this.player.set$animation(t1);
          $.notify("Explore the island while it's safe!");
        }
      }
    }
    if ($.event.get$mouseDown() === true) {
      t1 = this.player;
      t2 = t1.get$currentAttackTime();
      if (typeof t2 !== "number")
        return this.update$0$bailout(58, t2);
      if (t2 === 0) {
        t2 = this.weaponStartFrame;
        t3 = this.currentWeapon;
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= t2.length)
          throw $.ioore(t3);
        t3 = t2[t3];
        if (typeof t3 !== "number")
          return this.update$0$bailout(59, 0, 0, 0, 0, 0, t3);
        t1.set$currentFrame(t3 * 5);
      }
      this.player.set$attacking(true);
      t1 = $.event.get$mouse_position().clone$0();
      t2 = $.SCREEN_WIDTH;
      if (typeof t2 !== "number")
        return this.update$0$bailout(60, t1, 0, 0, 0, 0, t2);
      t2 /= 2;
      t4 = $.SCREEN_HEIGHT;
      if (typeof t4 !== "number")
        return this.update$0$bailout(61, t1, 0, 0, 0, 0, t2, 0, t4);
      t6 = t1.subTo$2(t2, t4 / 2).normalize$0();
      this.player.set$attackDirection(t6);
    } else {
      this.player.set$currentAttackTime(0);
      this.player.set$attacking(false);
    }
    t1 = this.camera;
    t2 = t1.x;
    if (typeof t2 !== "number")
      return this.update$0$bailout(62, t1, 0, 0, 0, 0, t2);
    t4 = this.player;
    t5 = t4.get$x();
    t7 = t4.get$velocity().get$x();
    if (typeof t7 !== "number")
      return this.update$0$bailout(64, t1, 0, t5, 0, 0, t2, 0, 0, t7);
    if (typeof t5 !== "number")
      return this.update$0$bailout(63, t1, 0, t5, 0, 0, t2, 0, t4);
    t1.x = t2 - (t2 - (t5 + t7 * 5)) / 5;
    t1 = this.camera;
    t9 = t1.y;
    if (typeof t9 !== "number")
      return this.update$0$bailout(65, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9);
    t11 = this.player;
    t12 = t11.get$y();
    t14 = t11.get$velocity().get$y();
    if (typeof t14 !== "number")
      return this.update$0$bailout(67, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, t12, t14);
    if (typeof t12 !== "number")
      return this.update$0$bailout(66, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, t11, t12);
    t1.y = t9 - (t9 - (t12 + t14 * 5)) / 5;
    if ($.DEBUG === true) {
      t1 = this.camera;
      t2 = t1.get$zoom();
      t4 = $.event.key$1("up");
      t6 = $.event.key$1("down");
      if (typeof t4 !== "number")
        return this.update$0$bailout(69, t1, 0, 0, 0, 0, t2, 0, t4);
      if (typeof t6 !== "number")
        return this.update$0$bailout(70, t1, 0, 0, 0, 0, t2, 0, t4, 0, t6);
      if (typeof t2 !== "number")
        return this.update$0$bailout(68, t1, 0, 0, 0, 0, t2);
      t1.set$zoom(t2 + (t4 - t6) / 10);
    }
    this.camera.update$0();
    $.forEach($.$$index($.tags, "uninit"), new $.World_update_anon3());
    $.$$indexSet($.tags, "uninit", $.List_List(0));
    for (t1 = $.iterator($.tags.get$keys()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = $.tags;
      if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
        return this.update$0$bailout(71, t1, t3, 0, 0, 0, t2);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t3.length)
        throw $.ioore(t2);
      lst = t3[t2];
      if (typeof lst !== "string" && (typeof lst !== "object" || lst === null || lst.constructor !== Array && !lst.$isJavaScriptIndexingBehavior()))
        return this.update$0$bailout(72, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, lst);
      t2 = $.get$random_number_generator().nextDouble$0();
      t4 = $.getInterceptor$JSArrayJSString(lst);
      t5 = lst.length;
      if (typeof t2 !== "number")
        return this.update$0$bailout(73, t1, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, lst);
      i = $.CONSTANT7.toInt$0(t2 * t5);
      if (typeof i !== "number")
        return this.update$0$bailout(75, t1, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, lst, i);
      iter = 0;
      for (; t2 = lst.length, iter < t2 / 16; ++iter, ++i) {
        index = $.CONSTANT7.$mod(i, t2);
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t2)
          throw $.ioore(index);
        if (lst[index].get$markedForRemoval() === true)
          t4.removeRange$2(lst, index, 1);
      }
    }
    t1 = this.objects.length;
    t2 = $.get$random_number_generator().nextDouble$0();
    if (typeof t2 !== "number")
      throw $.iae(t2);
    i = $.CONSTANT7.toInt$0(t1 * t2);
    if (i !== (i | 0))
      return this.update$0$bailout(78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i);
    iter = 0;
    for (; t1 = this.objects, t2 = t1.length, iter < t2 / 16; ++iter, ++i) {
      index = $.CONSTANT9.$mod(i, t2);
      if (index < 0 || index >= t2)
        throw $.ioore(index);
      if (t1[index].get$markedForRemoval() === true)
        $.CONSTANT2.removeRange$2(t1, index, 1);
    }
    $.CONSTANT2.forEach$1(t1, new $.World_update_anon4());
    $.forEach($.$$index($.tags, "actor"), new $.World_update_anon5(this));
    $.forEach($.$$index($.tags, "spawn"), new $.World_update_anon6());
    this.sortScreenObjects$0();
    t1 = this.time;
    t3 = this.dayLength;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    if (typeof t1 !== "number")
      return this.update$0$bailout(79, t1);
    this.time = t1 + 24 / t3;
    t1 = this.time;
    if (typeof t1 !== "number")
      return this.update$0$bailout(80, t1);
    if (t1 > 24)
      this.time = 0;
  },
  update$0$bailout: function(state0, t1, t3, t5, citizen, house, t2, zs_list, t4, t7, t6, t10, t12, t13, t15, lst, i, iter) {
    switch (state0) {
      case 0:
        t1 = $.rpatCount;
      case 1:
        state0 = 0;
        t3 = $.get$random_number_generator().nextDouble$0();
      case 2:
        state0 = 0;
        t5 = $.toInt($.$$mul(t3, 64));
      case 3:
        state0 = 0;
        $.rpatCount = $.$$add(t1, t5);
        t1 = this.rapid_clicks;
      case 4:
        state0 = 0;
      case 5:
        if (state0 === 5 || state0 === 0 && $.$$gt(t1, 0) === true)
          switch (state0) {
            case 0:
              t1 = $.rpatCount;
            case 5:
              state0 = 0;
              t3 = $.getInterceptor$JSNumber(t1);
              $.rpatCount = t3.$add(t1, 1);
              t4 = $.$$eq(t3.$mod(t1, 30), 0) === true;
              t1 = t4;
          }
        else
          t1 = false;
      case 6:
        if (state0 === 6 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this.rapid_clicks;
            case 6:
              state0 = 0;
              this.rapid_clicks = $.$$sub(t1, 1);
          }
        t1 = this.multiplier_time;
      case 7:
        state0 = 0;
      case 8:
        if (state0 === 0 && $.$$le(t1, 0) === true) {
          t1 = this.multiplier;
          if (t1 <= 2)
            this.multiplier = 1;
          else {
            this.multiplier = t1 - 1;
            t2 = this.max_multiplier_time;
            t3 = this.multiplier;
            if (t3 < 0 || t3 >= t2.length)
              throw $.ioore(t3);
            this.multiplier_time = t2[t3];
          }
        } else
          switch (state0) {
            case 0:
              t1 = this.multiplier_time;
            case 8:
              state0 = 0;
              this.multiplier_time = $.$$sub(t1, 1);
          }
      default:
        if (state0 === 10 || state0 === 9 || state0 === 0 && this.night_mode)
          switch (state0) {
            case 0:
              t1 = this.time;
            case 9:
              state0 = 0;
            case 10:
              if (state0 === 10 || state0 === 0 && $.$$gt(t1, 6.5) === true)
                switch (state0) {
                  case 0:
                    t1 = this.time;
                  case 10:
                    state0 = 0;
                    t3 = $.$$lt(t1, 21) === true;
                    t1 = t3;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
        if (state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              this.night_mode = false;
              t1 = this.dayCount;
            case 11:
              state0 = 0;
              this.dayCount = $.$$add(t1, 1);
              this.zombie_out = 0;
              $.notify("Day " + $.S(this.dayCount));
              $.notify("Total Population : " + $.S(this.totalPopulation));
              t1 = this.totalPopulation;
            case 12:
              state0 = 0;
            case 13:
              if (state0 === 13 || state0 === 0 && $.$$lt(t1, 100) === true)
                switch (state0) {
                  case 0:
                    t1 = this.totalPopulation;
                  case 13:
                    state0 = 0;
                    if ($.$$lt(t1, 50) === true) {
                      $.notify("The population has fallen below 50");
                      $.GameOver($.game.get$context());
                    } else
                      $.notify("WARNING! If your population falls below 50 you lose!");
                }
              t1 = this.dayCount;
            case 14:
              state0 = 0;
              if ($.$$gt(t1, 1) === true)
                this.increaseDifficulty$0();
              $.forEach($.$$index($.tags, "lost"), new $.World_update_anon());
              $.forEach($.$$index($.tags, "following"), new $.World_update_anon0());
              $.forEach($.$$index($.tags, "zombie"), new $.World_update_anon1());
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 16 || state0 === 15 || state0 === 0 && !this.night_mode)
                switch (state0) {
                  case 0:
                    t1 = this.time;
                  case 15:
                    state0 = 0;
                  case 16:
                    if (state0 === 16 || state0 === 0 && $.$$gt(t1, 21) !== true)
                      switch (state0) {
                        case 0:
                          t1 = this.time;
                        case 16:
                          state0 = 0;
                          t3 = $.$$lt(t1, 6.5) === true;
                          t1 = t3;
                      }
                    else
                      t1 = true;
                }
              else
                t1 = false;
              if (t1) {
                this.night_mode = true;
                $.forEach($.$$index($.tags, "wander"), new $.World_update_anon2());
                $.notify("Lost Citizens : " + $.S($.length($.$$index($.tags, "lost"))));
                $.notify("Save as many as possible!");
              }
          }
      case 17:
      case 18:
        if (state0 === 18 || state0 === 17 || state0 === 0 && !this.night_mode)
          switch (state0) {
            case 0:
              t1 = this.time;
            case 17:
              state0 = 0;
            case 18:
              if (state0 === 18 || state0 === 0 && $.$$gt(t1, 16) === true)
                switch (state0) {
                  case 0:
                    t1 = $.rpatCount;
                  case 18:
                    state0 = 0;
                    t3 = $.getInterceptor$JSNumber(t1);
                    $.rpatCount = t3.$add(t1, 1);
                    t4 = $.$$eq(t3.$mod(t1, 5), 0) === true;
                    t1 = t4;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
      case 19:
      case 20:
      case 21:
      case 22:
        if (state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = $.$$index($.tags, "wander");
            case 19:
              state0 = 0;
              t3 = $.length($.$$index($.tags, "wander"));
            case 20:
              state0 = 0;
              t5 = $.get$random_number_generator().nextDouble$0();
            case 21:
              state0 = 0;
              citizen = $.$$index(t1, $.toInt($.$$mul(t3, t5)));
            case 22:
              if (state0 === 22 || state0 === 0 && citizen.hasTag$1("ai") === true && citizen.hasTag$1("lost") !== true && citizen.hasTag$1("citizen") === true)
                switch (state0) {
                  case 0:
                    t1 = $.get$random_number_generator().nextDouble$0();
                  case 22:
                    state0 = 0;
                    if ($.$$lt(t1, 0.9) === true) {
                      $.switchTag(citizen, "wander", "homebound");
                      $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(citizen);
                    } else {
                      $.add(citizen.get$tags(), "lost");
                      $.addTag(citizen, "lost");
                    }
                }
          }
      case 23:
      case 24:
      case 25:
        if (state0 === 25 || state0 === 24 || state0 === 23 || state0 === 0 && !this.night_mode)
          switch (state0) {
            case 0:
              t1 = this.time;
            case 23:
              state0 = 0;
            default:
              if (state0 === 25 || state0 === 24 || state0 === 0 && $.$$lt(t1, 12) === true)
                switch (state0) {
                  case 0:
                    t1 = this.awakePopulation;
                  case 24:
                    state0 = 0;
                    t3 = this.totalPopulation;
                  case 25:
                    state0 = 0;
                    t5 = $.$$lt(t1, t3) === true;
                    t1 = t5;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
        if (state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = $.$$index($.tags, "house");
            case 26:
              state0 = 0;
              t3 = $.length($.$$index($.tags, "house"));
            case 27:
              state0 = 0;
              t5 = $.get$random_number_generator().nextDouble$0();
            case 28:
              state0 = 0;
              house = $.$$index(t1, $.toInt($.$$mul(t3, t5)));
              t1 = $.get$random_number_generator().nextDouble$0();
            case 29:
              state0 = 0;
              t1 = $.$$lt(t1, 0.5) === true ? "wander" : "traveler";
              this.spawnObject$2("citizen", $.makeLiteralMap(["tag", ["friendly", t1, "ai"], "x", house.get$x(), "y", house.get$y(), "home", house]));
              t2 = this.awakePopulation;
            case 30:
              state0 = 0;
              this.awakePopulation = $.$$add(t2, 1);
          }
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
        if (state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 0 && this.night_mode)
          switch (state0) {
            case 0:
              t1 = this.time;
            case 31:
              state0 = 0;
            case 32:
              if (state0 === 32 || state0 === 0 && $.$$lt(t1, 4) !== true)
                switch (state0) {
                  case 0:
                    t1 = this.time;
                  case 32:
                    state0 = 0;
                    t3 = $.$$gt(t1, 21) === true;
                    t1 = t3;
                }
              else
                t1 = true;
            default:
              if (state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = this.zombie_out;
                  case 33:
                    state0 = 0;
                    t3 = this.zombie_max;
                  case 34:
                    state0 = 0;
                  default:
                    if (state0 === 37 || state0 === 36 || state0 === 35 || state0 === 0 && $.$$lt(t1, $.$$sub(t3, 50)) !== true)
                      switch (state0) {
                        case 0:
                          t1 = this.zombie_out;
                        case 35:
                          state0 = 0;
                          t3 = this.zombie_max;
                        case 36:
                          state0 = 0;
                        case 37:
                          if (state0 === 37 || state0 === 0 && $.$$lt(t1, t3) === true)
                            switch (state0) {
                              case 0:
                                t1 = $.rpatCount;
                              case 37:
                                state0 = 0;
                                t3 = $.getInterceptor$JSNumber(t1);
                                $.rpatCount = t3.$add(t1, 1);
                                t4 = $.$$eq(t3.$mod(t1, 16), 0) === true;
                                t1 = t4;
                            }
                          else
                            t1 = false;
                      }
                    else
                      t1 = true;
                  case 38:
                  case 39:
                  case 40:
                  case 41:
                    if (state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = this.zombie_out;
                        case 38:
                          state0 = 0;
                          this.zombie_out = $.$$add(t1, 1);
                          zs_list = $.$$index($.tags, "zombie-spawn");
                        case 39:
                          state0 = 0;
                          t4 = $.getInterceptor$JSArrayJSString(zs_list);
                          t5 = t4.get$length(zs_list);
                        case 40:
                          state0 = 0;
                          t7 = $.get$random_number_generator().nextDouble$0();
                        case 41:
                          state0 = 0;
                          zs = t4.$index(zs_list, $.toInt($.$$mul(t5, t7)));
                          this.spawnObject$2("zombie", $.makeLiteralMap(["x", zs.get$x(), "y", zs.get$y()]));
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this.zombie_out;
                  case 42:
                    state0 = 0;
                  case 43:
                    if (state0 === 43 || state0 === 0 && $.$$gt(t1, 0) === true)
                      switch (state0) {
                        case 0:
                          t1 = $.rpatCount;
                        case 43:
                          state0 = 0;
                          t3 = $.getInterceptor$JSNumber(t1);
                          $.rpatCount = t3.$add(t1, 1);
                          t4 = $.$$eq(t3.$mod(t1, 30), 0) === true;
                          t1 = t4;
                      }
                    else
                      t1 = false;
                  default:
                    if (state0 === 46 || state0 === 45 || state0 === 44 || state0 === 0 && t1)
                      switch (state0) {
                        case 0:
                          t1 = $.$$index($.tags, "zombie");
                        case 44:
                          state0 = 0;
                          t3 = $.length($.$$index($.tags, "zombie"));
                        case 45:
                          state0 = 0;
                          t5 = $.get$random_number_generator().nextDouble$0();
                        case 46:
                          state0 = 0;
                          zom = $.$$index(t1, $.toInt($.$$mul(t3, t5)));
                          if (zom.hasTag$1("nestbound") !== true) {
                            zom.removeTag$1("hostile");
                            $.rmTag(zom, "hostile");
                            zom.removeTag$1("hostile-wander");
                            $.rmTag(zom, "hostile-wander");
                            $.add(zom.get$tags(), "nestbound");
                            $.addTag(zom, "nestbound");
                            $.$$index($.$$index($.tagEvents, "nestbound"), "init").call$1(zom);
                          }
                      }
                }
          }
        t1 = $.rpatCount;
      case 47:
        state0 = 0;
        t3 = $.getInterceptor$JSNumber(t1);
        $.rpatCount = t3.$add(t1, 1);
        if ($.$$eq(t3.$mod(t1, 2000), 0) === true) {
          protips = ["You can switch weapons with E", "Villagers tend to be meaner when you kill them", "Villagers will be nicer if you keep saving them", "Upgrades can be purchased for all weapons", "Zombies grow stronger every day, equip yourself accordingly", "You can press T to speed up time", "Press the SHIFT key to sprint", "You can purchase patrol guards to help keep villagers safe", "Health upgrades can be found in the bottom left region of the map", "Weapons can be purchased in the bottom right region of the map", "All vendors are located in towns", "Weapon upgrades are in the top right region of the map"];
          t1 = protips.length;
          t2 = $.get$random_number_generator().nextDouble$0();
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t3 = $.CONSTANT7.toInt$0(t1 * t2);
          if (t3 !== (t3 | 0))
            throw $.iae(t3);
          if (t3 < 0 || t3 >= protips.length)
            throw $.ioore(t3);
          $.notify("Tip : " + $.S(protips[t3]));
        }
      case 48:
      case 49:
        if (state0 === 49 || state0 === 48 || state0 === 0 && this.night_mode)
          switch (state0) {
            case 0:
              t1 = $.rpatCount;
            case 48:
              state0 = 0;
              t3 = $.getInterceptor$JSNumber(t1);
              $.rpatCount = t3.$add(t1, 1);
            case 49:
              if (state0 === 49 || state0 === 0 && $.$$eq(t3.$mod(t1, 60), 0) === true)
                switch (state0) {
                  case 0:
                    t1 = $.length($.$$index($.tags, "lost"));
                  case 49:
                    state0 = 0;
                    t3 = $.$$gt(t1, 0) === true;
                    t1 = t3;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
      case 50:
      case 51:
      case 52:
        if (state0 === 52 || state0 === 51 || state0 === 50 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = $.$$index($.tags, "lost");
            case 50:
              state0 = 0;
              t3 = $.length($.$$index($.tags, "lost"));
            case 51:
              state0 = 0;
              t5 = $.get$random_number_generator().nextDouble$0();
            case 52:
              state0 = 0;
              t1 = $.$$index(t1, $.toInt($.$$mul(t3, t5)));
              t7 = $.get$random_number_generator().nextDouble$0();
              if (typeof t7 !== "number")
                throw $.iae(t7);
              t8 = $.CONSTANT7.toInt$0(5 * t7);
              if (t8 !== (t8 | 0))
                throw $.iae(t8);
              if (t8 < 0 || t8 >= $.CONSTANT33.length)
                throw $.ioore(t8);
              t1.say$1($.CONSTANT33[t8]);
          }
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        if (state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 0 && this.intro !== true)
          switch (state0) {
            case 0:
              t1 = $.event.key$1("d");
            case 53:
              state0 = 0;
              t3 = $.event.key$1("a");
            case 54:
              state0 = 0;
              t3 = $.$$sub(t1, t3);
              t1 = $.event.key$1("s");
            case 55:
              state0 = 0;
              t6 = $.event.key$1("w");
            case 56:
              state0 = 0;
              inc = $.Vec2$(t3, $.$$sub(t1, t6));
              t3 = inc.normalize$0();
              t8 = $.event.key$1("shift");
              if (typeof t8 !== "number")
                throw $.iae(t8);
              t3.multiplyScalar$1(2 * (1 + 1 * t8));
              $.add(this.player.get$velocity(), inc);
          }
        else
          switch (state0) {
            case 0:
              this.slideTime = this.slideTime + 1;
              t1 = this.slidex_pos;
              t2 = this.currentSlide;
              if (t2 < 0 || t2 >= t1.length)
                throw $.ioore(t2);
              t1 = t1[t2];
            case 57:
              state0 = 0;
              t4 = this.slideTime;
              t5 = this.slide_dir;
              if (t2 >= t5.length)
                throw $.ioore(t2);
              t5 = t5[t2];
              if (typeof t5 !== "number")
                throw $.iae(t5);
              t1 = $.$$add(t1, t4 * t5);
              this.camera.x = t1;
              t1 = this.slidey_pos;
              t6 = this.currentSlide;
              if (t6 < 0 || t6 >= t1.length)
                throw $.ioore(t6);
              t6 = t1[t6];
              this.camera.y = t6;
              t6 = this.player;
              t1 = this.camera;
              t6.set$2(t1.x, t1.y);
              if (this.slideTime >= 300) {
                this.slideTime = 0;
                this.currentSlide = this.currentSlide + 1;
                if (this.currentSlide >= this.slides.length) {
                  this.intro = false;
                  $.notify("Day " + $.S(this.dayCount));
                  $.notify("Total Population : " + $.S(this.totalPopulation));
                  this.player.set$2(4793, 4342);
                  t1 = this.player_animation;
                  this.player.set$animation(t1);
                  $.notify("Explore the island while it's safe!");
                }
              }
          }
      case 58:
      case 59:
      case 60:
      case 61:
        if (state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 0 && $.event.get$mouseDown() === true)
          switch (state0) {
            case 0:
              t1 = this.player.get$currentAttackTime();
            case 58:
              state0 = 0;
            case 59:
              if (state0 === 59 || state0 === 0 && $.$$eq(t1, 0) === true)
                switch (state0) {
                  case 0:
                    t1 = this.weaponStartFrame;
                    t2 = this.currentWeapon;
                    if (t2 !== (t2 | 0))
                      throw $.iae(t2);
                    if (t2 < 0 || t2 >= t1.length)
                      throw $.ioore(t2);
                    t2 = t1[t2];
                  case 59:
                    state0 = 0;
                    t2 = $.$$mul(t2, 5);
                    this.player.set$currentFrame(t2);
                }
              this.player.set$attacking(true);
              t1 = $.event.get$mouse_position().clone$0();
              t2 = $.SCREEN_WIDTH;
            case 60:
              state0 = 0;
              t2 = $.$$div(t2, 2);
              t4 = $.SCREEN_HEIGHT;
            case 61:
              state0 = 0;
              t6 = t1.subTo$2(t2, $.$$div(t4, 2)).normalize$0();
              this.player.set$attackDirection(t6);
          }
        else {
          this.player.set$currentAttackTime(0);
          this.player.set$attacking(false);
        }
        t1 = this.camera;
        t2 = t1.x;
      case 62:
        state0 = 0;
        t4 = this.player;
        t5 = t4.get$x();
      case 63:
        state0 = 0;
        t7 = t4.get$velocity().get$x();
      case 64:
        state0 = 0;
        t9 = $.getInterceptor$JSNumber(t2);
        t1.x = t9.$sub(t2, $.$$div(t9.$sub(t2, $.$$add(t5, $.$$mul(t7, 5))), 5));
        t1 = this.camera;
        t10 = t1.y;
      case 65:
        state0 = 0;
        t12 = this.player;
        t13 = t12.get$y();
      case 66:
        state0 = 0;
        t15 = t12.get$velocity().get$y();
      case 67:
        state0 = 0;
        t17 = $.getInterceptor$JSNumber(t10);
        t1.y = t17.$sub(t10, $.$$div(t17.$sub(t10, $.$$add(t13, $.$$mul(t15, 5))), 5));
      case 68:
      case 69:
      case 70:
        if (state0 === 70 || state0 === 69 || state0 === 68 || state0 === 0 && $.DEBUG === true)
          switch (state0) {
            case 0:
              t1 = this.camera;
              t2 = t1.get$zoom();
            case 68:
              state0 = 0;
              t4 = $.event.key$1("up");
            case 69:
              state0 = 0;
              t6 = $.event.key$1("down");
            case 70:
              state0 = 0;
              t1.set$zoom($.$$add(t2, $.$$div($.$$sub(t4, t6), 10)));
          }
        this.camera.update$0();
        $.forEach($.$$index($.tags, "uninit"), new $.World_update_anon3());
        $.$$indexSet($.tags, "uninit", $.List_List(0));
        t1 = $.iterator($.tags.get$keys());
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(t1.moveNext$0() === true))
                  break L0;
                t2 = t1.get$current();
                t3 = $.tags;
              case 71:
                state0 = 0;
                lst = $.$$index(t3, t2);
              case 72:
                state0 = 0;
                t2 = $.get$random_number_generator().nextDouble$0();
              case 73:
                state0 = 0;
                t4 = $.getInterceptor$JSArrayJSString(lst);
                t5 = t4.get$length(lst);
              case 74:
                state0 = 0;
                i = $.toInt($.$$mul(t2, t5));
              case 75:
                state0 = 0;
                iter = 0;
              default:
                L1:
                  while (true)
                    switch (state0) {
                      case 0:
                        t2 = t4.get$length(lst);
                      case 76:
                        state0 = 0;
                        if (!(iter < $.$$div(t2, 16)))
                          break L1;
                        t2 = t4.get$length(lst);
                      case 77:
                        state0 = 0;
                        t5 = $.getInterceptor$JSNumber(i);
                        index = t5.$mod(i, t2);
                        if (t4.$index(lst, index).get$markedForRemoval() === true)
                          t4.removeRange$2(lst, index, 1);
                        ++iter;
                        i = t5.$add(i, 1);
                    }
            }
        t1 = this.objects.length;
        t2 = $.get$random_number_generator().nextDouble$0();
        if (typeof t2 !== "number")
          throw $.iae(t2);
        i = $.CONSTANT7.toInt$0(t1 * t2);
      case 78:
        state0 = 0;
        iter = 0;
        for (; t1 = this.objects, t2 = t1.length, iter < t2 / 16; ++iter, i = t1.$add(i, 1)) {
          t1 = $.getInterceptor$JSNumber(i);
          index = t1.$mod(i, t2);
          t2 = this.objects;
          if (index !== (index | 0))
            throw $.iae(index);
          if (index < 0 || index >= t2.length)
            throw $.ioore(index);
          if (t2[index].get$markedForRemoval() === true)
            $.CONSTANT2.removeRange$2(t2, index, 1);
        }
        $.CONSTANT2.forEach$1(t1, new $.World_update_anon4());
        $.forEach($.$$index($.tags, "actor"), new $.World_update_anon5(this));
        $.forEach($.$$index($.tags, "spawn"), new $.World_update_anon6());
        this.sortScreenObjects$0();
        t1 = this.time;
      case 79:
        state0 = 0;
        t3 = this.dayLength;
        if (typeof t3 !== "number")
          throw $.iae(t3);
        this.time = $.$$add(t1, 24 / t3);
        t1 = this.time;
      case 80:
        var zs, zom, protips, t8, inc, t9, t17, index;
        state0 = 0;
        if ($.$$gt(t1, 24) === true)
          this.time = 0;
    }
  },
  renderSaved$1: function(c) {
    if ($.$$eq(this.lastSaved, this.saved) !== true) {
      this.lastSaved = this.saved;
      $.notify("Saved : " + $.S(this.saved));
    }
  },
  renderCoins$1: function(c) {
    c.set$fillStyle("yellow");
    c.set$font("18px Arial");
    c.set$globalAlpha(0.75);
    c.fillText$3($.S(this.coin) + "c", 15, 18);
    c.set$globalAlpha(1);
  },
  renderMultiplier$1: function(c) {
    var t1, t2, t3, p;
    c.save$0();
    c.set$globalAlpha(0.5);
    c.set$lineWidth(12);
    c.set$strokeStyle("#f00");
    c.save$0();
    c.beginPath$0();
    t1 = this.multiplier_time;
    t2 = this.max_multiplier_time;
    t3 = this.multiplier;
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    p = $.$$div(t1, t2[t3]) * 6.283185307179586;
    if (p > 0) {
      c.translate$2($.$$sub($.SCREEN_WIDTH, 50), 50);
      c.rotate$1(p * p / 6.283185307179586);
      c.arc$6(0, 0, 40, 0, p, false);
    }
    c.stroke$0();
    c.closePath$0();
    c.restore$0();
    c.set$fillStyle("#f00");
    c.set$font("bold 18px Arial");
    c.fillText$3($.S(this.multiplier) + "x", $.$$sub($.$$sub($.SCREEN_WIDTH, 50), 11), 56);
    c.restore$0();
  },
  giveCoin$2: function(at, amt) {
    amt = $.$$mul(amt, this.multiplier);
    this.coin = $.$$add(this.coin, amt);
    this.spawnObject$2("floating_text", $.makeLiteralMap(["x", at.get$x(), "y", at.get$y(), "text", "+" + $.S(amt)]));
    $.audio.play$1("coin");
  },
  addMultiplier$0: function() {
    var t1, t2;
    this.multiplier = this.multiplier + 1;
    t1 = this.max_multiplier_time;
    t2 = this.multiplier;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    this.multiplier_time = t1[t2];
  },
  damageBubble$4: function(point, radius, damage, direction) {
    var attacked = $.List_List(0);
    $.forEach($.$$index($.tags, "actor"), new $.World_damageBubble_anon(point, radius, damage, direction, attacked));
    return attacked;
  },
  render$1: function(c) {
    var t1, t3, t2, t4, t6, t7, t9;
    c.setTransform$6(1, 0, 0, 1, 0, 0);
    c.clearRect$4(0, 0, $.SCREEN_WIDTH, $.SCREEN_HEIGHT);
    c.save$0();
    t1 = $.SCREEN_WIDTH;
    if (typeof t1 !== "number")
      return this.render$1$bailout(1, c, t1);
    t1 /= 2;
    t3 = $.SCREEN_HEIGHT;
    if (typeof t3 !== "number")
      return this.render$1$bailout(2, c, t1, t3);
    c.translate$2(t1, t3 / 2);
    c.scale$2(this.camera.get$animatedZoom(), this.camera.get$animatedZoom());
    t1 = this.camera;
    t2 = t1.x;
    t4 = $.SCREEN_WIDTH;
    if (typeof t4 !== "number")
      return this.render$1$bailout(4, c, t2, t4);
    if (typeof t2 !== "number")
      return this.render$1$bailout(3, c, t2);
    if (t2 - t4 / 2 < 0)
      t1.x = t4 / 2;
    else {
      t2 += t4 / 2;
      t3 = this.map_width;
      if (typeof t3 !== "number")
        return this.render$1$bailout(8, c, t2, 0, t3);
      if (t2 > t3 * 32)
        t1.x = t3 * 32 - t4 / 2;
    }
    t1 = this.camera;
    t2 = t1.y;
    t4 = $.SCREEN_HEIGHT;
    if (typeof t4 !== "number")
      return this.render$1$bailout(12, c, t2, t4);
    if (typeof t2 !== "number")
      return this.render$1$bailout(11, c, t2);
    if (t2 - t4 / 2 < 0)
      t1.y = t4 / 2;
    else {
      t2 += t4 / 2;
      t3 = this.map_width;
      if (typeof t3 !== "number")
        return this.render$1$bailout(16, c, t2, 0, t3);
      if (t2 > t3 * 32)
        t1.y = t3 * 32 - t4 / 2;
    }
    t1 = this.camera;
    t2 = t1.x;
    if (typeof t2 !== "number")
      return this.render$1$bailout(19, c, t2);
    t2 = -t2;
    t1 = t1.y;
    if (typeof t1 !== "number")
      return this.render$1$bailout(20, c, t2, t1);
    c.translate$2(t2, -t1);
    c.set$font("12px Arial");
    c.set$textAlign("center");
    this.bottomTileManager.render$2(c, this.camera);
    $.CONSTANT2.forEach$1(this.onscene, new $.World_render_anon(c));
    c.set$globalAlpha(0.5);
    if ($.DEBUG === true)
      $.CONSTANT2.forEach$1(this.paths, new $.World_render_anon0(c));
    this.topTileManager.render$2(c, this.camera);
    c.restore$0();
    this.overlay.render$2(c, this.camera);
    $.CONSTANT2.forEach$1(this.menuInterfaces, new $.World_render_anon1(c));
    $.renderNotifications(c);
    this.renderSaved$1(c);
    this.renderCoins$1(c);
    this.renderMultiplier$1(c);
    if (this.intro === true) {
      c.set$globalAlpha(1);
      c.set$fillStyle("#000");
      t1 = $.SCREEN_HEIGHT;
      if (typeof t1 !== "number")
        return this.render$1$bailout(21, c, t1);
      c.fillRect$4(0, t1 - 50, $.SCREEN_WIDTH, 50);
      c.set$fillStyle("#fff");
      c.set$font("24px Arial");
      t3 = this.slides;
      t4 = this.currentSlide;
      if (t4 < 0 || t4 >= t3.length)
        throw $.ioore(t4);
      t4 = t3[t4];
      t3 = $.SCREEN_HEIGHT;
      if (typeof t3 !== "number")
        return this.render$1$bailout(22, c, 0, t3, 0, t4);
      c.fillText$3(t4, 50, t3 - 20);
      c.set$fillStyle("#000");
      t4 = (this.slideTime - 150) / 150;
      $.checkNum(t4);
      $.checkNum(2);
      c.set$globalAlpha(Math.pow(t4, 2));
      c.fillRect$4(0, 0, $.SCREEN_WIDTH, $.SCREEN_HEIGHT);
      c.set$globalAlpha(1);
    } else if (this.controlsOpen === true) {
      c.set$globalAlpha(0.9);
      t1 = this.controlsImage;
      t2 = $.SCREEN_WIDTH;
      t4 = t1.get$width();
      if (typeof t2 !== "number")
        return this.render$1$bailout(23, c, t1, 0, 0, 0, t2);
      if (typeof t4 !== "number")
        return this.render$1$bailout(24, c, t1, 0, 0, t4, t2);
      t6 = (t2 - t4) / 2;
      t7 = $.SCREEN_HEIGHT;
      t9 = this.controlsImage.get$height();
      if (typeof t7 !== "number")
        return this.render$1$bailout(25, c, t1, 0, 0, 0, 0, t6, t7);
      if (typeof t9 !== "number")
        return this.render$1$bailout(26, c, t1, 0, 0, 0, 0, t6, t7, t9);
      c.drawImage$3(t1, t6, (t7 - t9) / 2);
      c.set$globalAlpha(1);
    }
  },
  render$1$bailout: function(state0, c, t1, t3, t5, t4, t2, t6, t7, t9) {
    switch (state0) {
      case 0:
        c.setTransform$6(1, 0, 0, 1, 0, 0);
        c.clearRect$4(0, 0, $.SCREEN_WIDTH, $.SCREEN_HEIGHT);
        c.save$0();
        t1 = $.SCREEN_WIDTH;
      case 1:
        state0 = 0;
        t1 = $.$$div(t1, 2);
        t3 = $.SCREEN_HEIGHT;
      case 2:
        state0 = 0;
        c.translate$2(t1, $.$$div(t3, 2));
        c.scale$2(this.camera.get$animatedZoom(), this.camera.get$animatedZoom());
        t1 = this.camera.x;
      case 3:
        state0 = 0;
        t3 = $.SCREEN_WIDTH;
      case 4:
        state0 = 0;
      default:
        if (state0 === 5 || state0 === 0 && $.$$lt($.$$sub(t1, $.$$div(t3, 2)), 0) === true)
          switch (state0) {
            case 0:
              t1 = $.SCREEN_WIDTH;
            case 5:
              state0 = 0;
              t1 = $.$$div(t1, 2);
              this.camera.x = t1;
          }
        else
          switch (state0) {
            case 0:
              t1 = this.camera.x;
            case 6:
              state0 = 0;
              t3 = $.SCREEN_WIDTH;
            case 7:
              state0 = 0;
              t1 = $.$$add(t1, $.$$div(t3, 2));
              t5 = this.map_width;
            case 8:
              state0 = 0;
            default:
              if (state0 === 10 || state0 === 9 || state0 === 0 && $.$$gt(t1, $.$$mul(t5, 32)) === true)
                switch (state0) {
                  case 0:
                    t1 = this.map_width;
                  case 9:
                    state0 = 0;
                    t1 = $.$$mul(t1, 32);
                    t3 = $.SCREEN_WIDTH;
                  case 10:
                    state0 = 0;
                    t1 = $.$$sub(t1, $.$$div(t3, 2));
                    this.camera.x = t1;
                }
          }
        t1 = this.camera.y;
      case 11:
        state0 = 0;
        t3 = $.SCREEN_HEIGHT;
      case 12:
        state0 = 0;
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
        if (state0 === 13 || state0 === 0 && $.$$lt($.$$sub(t1, $.$$div(t3, 2)), 0) === true)
          switch (state0) {
            case 0:
              t1 = $.SCREEN_HEIGHT;
            case 13:
              state0 = 0;
              t1 = $.$$div(t1, 2);
              this.camera.y = t1;
          }
        else
          switch (state0) {
            case 0:
              t1 = this.camera.y;
            case 14:
              state0 = 0;
              t3 = $.SCREEN_HEIGHT;
            case 15:
              state0 = 0;
              t1 = $.$$add(t1, $.$$div(t3, 2));
              t5 = this.map_width;
            case 16:
              state0 = 0;
            default:
              if (state0 === 18 || state0 === 17 || state0 === 0 && $.$$gt(t1, $.$$mul(t5, 32)) === true)
                switch (state0) {
                  case 0:
                    t1 = this.map_width;
                  case 17:
                    state0 = 0;
                    t1 = $.$$mul(t1, 32);
                    t3 = $.SCREEN_HEIGHT;
                  case 18:
                    state0 = 0;
                    t1 = $.$$sub(t1, $.$$div(t3, 2));
                    this.camera.y = t1;
                }
          }
        t1 = this.camera.x;
      case 19:
        state0 = 0;
        t1 = $.$$negate(t1);
        t3 = this.camera.y;
      case 20:
        state0 = 0;
        c.translate$2(t1, $.$$negate(t3));
        c.set$font("12px Arial");
        c.set$textAlign("center");
        this.bottomTileManager.render$2(c, this.camera);
        $.CONSTANT2.forEach$1(this.onscene, new $.World_render_anon(c));
        c.set$globalAlpha(0.5);
        if ($.DEBUG === true)
          $.CONSTANT2.forEach$1(this.paths, new $.World_render_anon0(c));
        this.topTileManager.render$2(c, this.camera);
        c.restore$0();
        this.overlay.render$2(c, this.camera);
        $.CONSTANT2.forEach$1(this.menuInterfaces, new $.World_render_anon1(c));
        $.renderNotifications(c);
        this.renderSaved$1(c);
        this.renderCoins$1(c);
        this.renderMultiplier$1(c);
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
        if (state0 === 22 || state0 === 21 || state0 === 0 && this.intro === true)
          switch (state0) {
            case 0:
              c.set$globalAlpha(1);
              c.set$fillStyle("#000");
              t1 = $.SCREEN_HEIGHT;
            case 21:
              state0 = 0;
              c.fillRect$4(0, $.$$sub(t1, 50), $.SCREEN_WIDTH, 50);
              c.set$fillStyle("#fff");
              c.set$font("24px Arial");
              t3 = this.slides;
              t4 = this.currentSlide;
              if (t4 < 0 || t4 >= t3.length)
                throw $.ioore(t4);
              t4 = t3[t4];
              t3 = $.SCREEN_HEIGHT;
            case 22:
              state0 = 0;
              c.fillText$3(t4, 50, $.$$sub(t3, 20));
              c.set$fillStyle("#000");
              t4 = (this.slideTime - 150) / 150;
              $.checkNum(t4);
              $.checkNum(2);
              c.set$globalAlpha(Math.pow(t4, 2));
              c.fillRect$4(0, 0, $.SCREEN_WIDTH, $.SCREEN_HEIGHT);
              c.set$globalAlpha(1);
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 0 && this.controlsOpen === true)
                switch (state0) {
                  case 0:
                    c.set$globalAlpha(0.9);
                    t1 = this.controlsImage;
                    t2 = $.SCREEN_WIDTH;
                  case 23:
                    state0 = 0;
                    t4 = t1.get$width();
                  case 24:
                    state0 = 0;
                    t6 = $.$$div($.$$sub(t2, t4), 2);
                    t7 = $.SCREEN_HEIGHT;
                  case 25:
                    state0 = 0;
                    t9 = this.controlsImage.get$height();
                  case 26:
                    state0 = 0;
                    c.drawImage$3(t1, t6, $.$$div($.$$sub(t7, t9), 2));
                    c.set$globalAlpha(1);
                }
          }
    }
  },
  World$0: function() {
    this.objects = $.List_List(0);
    this.onscene = $.List_List(0);
    this.offscene = $.List_List(0);
    this.camera = $.Camera$(0, 0, 1);
    this.overlay = $.OverlayManager$();
    this.menuInterfaces = $.List_List(0);
    this.paths = $.List_List(0);
    this.pathnodes = $.List_List(0);
    this.playerWeapons = [true, true, true, true, true, true];
    this.playerWeapons = [true, false, false, false, false, false];
    this.weaponDamage = [25, 34, 20, 34, 75, 45, 70];
    this.weaponAttackTypes = [0, 0, 1, 2, 2, 0, 0];
    this.weaponAttackTime = [12, 10, 24, 15, 20, 12, 18];
    this.weaponAttackRadius = [64, 64, 256, 64, 64, 64, 64];
    this.weaponCost = [0, 120, 240, 150, 400, 300, 500];
    this.weaponCost2 = [0, 120, 240, 150, 400, 300, 500];
    this.weaponStartFrame = [0, 0, 25, 0, 0, 0, 0];
    this.weaponName = ["fist", "dagger", "bow", "staff", "spear", "rapier", "longsword"];
  }
};

$$.FrameMap = {"": "Object;orientations,positions,frames",
  render$3: function(c, orientation, position) {
    var t1, t2, t3;
    t1 = this.frames;
    t2 = this.positions;
    if (typeof orientation !== "number")
      throw $.iae(orientation);
    t3 = $.$$mod(position, t2);
    if (typeof t3 !== "number")
      throw $.iae(t3);
    c.drawImage$3($.$$index(t1, t2 * orientation + t3), 0, 0);
  }
};

$$.Animation = {"": "Object;frameMapIndex>,size,mid",
  loadProperties$1: function(properties) {
    $.forEach(properties, new $.Animation_loadProperties_anon(this));
  },
  loadWalkAnimation$2: function(path, callback) {
    var t1, t2;
    t1 = new $.Animation_loadWalkAnimation_anon(callback);
    t2 = this.size;
    $.res_loadSplitImage(path, t1, t2, t2);
  },
  loadSlashAnimation$2: function(path, callback) {
    var t1, t2;
    t1 = new $.Animation_loadSlashAnimation_anon(callback);
    t2 = this.size;
    $.res_loadSplitImage(path, t1, t2, t2);
  },
  loadDeathAnimation$2: function(path, callback) {
    var t1, t2;
    t1 = new $.Animation_loadDeathAnimation_anon(callback);
    t2 = this.size;
    $.res_loadSplitImage(path, t1, t2, t2);
  },
  loadShootAnimation$2: function(path, callback) {
    var t1, t2;
    t1 = new $.Animation_loadShootAnimation_anon(callback);
    t2 = this.size;
    $.res_loadSplitImage(path, t1, t2, t2);
  },
  loadThrustAnimation$2: function(path, callback) {
    var t1, t2;
    t1 = new $.Animation_loadThrustAnimation_anon(callback);
    t2 = this.size;
    $.res_loadSplitImage(path, t1, t2, t2);
  },
  render$4: function(c, animation, orientation, frame) {
    var fmap;
    c.save$0();
    c.translate$2($.$$negate(this.mid), $.$$negate(this.mid));
    fmap = $.$$index(this.frameMapIndex, animation);
    if (!(fmap == null))
      fmap.render$3(c, orientation, frame);
    c.restore$0();
  },
  Animation$1: function(properties) {
    var t1 = $.getInterceptor$JSArrayJSString(properties);
    this.size = t1.$index(properties, "size") == null ? 64 : t1.$index(properties, "size");
    this.mid = $.CONSTANT7.toInt$0($.$$div(this.size, 2));
    this.frameMapIndex = $.List_List(8);
    this.loadProperties$1(properties);
  }
};

$$.Notification = {"": "Object;text,timeLeft,y=,ay",
  render$1: function(c) {
    var t1, t3, t4, t7, t8, t9;
    t1 = this.timeLeft;
    c.set$globalAlpha(0.5 * (t1 < 60 ? t1 / 60 : 1));
    c.set$fillStyle("#000");
    c.set$font("18px Arial");
    t1 = $.SCREEN_HEIGHT;
    t3 = this.ay;
    if (typeof t1 !== "number")
      return this.render$1$bailout(1, c, t1);
    t3 = t1 - t3;
    t1 = this.text;
    t4 = c.measureText$1(t1).get$width();
    if (typeof t4 !== "number")
      return this.render$1$bailout(2, c, t3, t4, t1);
    c.fillRect$4(0, t3, t4 + 20, 32);
    c.set$fillStyle("#fff");
    t3 = $.SCREEN_HEIGHT;
    t7 = this.ay;
    if (typeof t3 !== "number")
      return this.render$1$bailout(3, c, t3, 0, t1);
    c.fillText$3(t1, 10, t3 - t7 + 20);
    t1 = this.ay;
    t8 = this.y;
    if (typeof t8 !== "number")
      throw $.iae(t8);
    this.ay = t1 - (t1 - t8) / 10;
    c.set$globalAlpha(1);
    t9 = this.timeLeft;
    this.timeLeft = t9 - 1;
    return t9 <= 0;
  },
  render$1$bailout: function(state0, c, t1, t4, t3) {
    switch (state0) {
      case 0:
        t1 = this.timeLeft;
        c.set$globalAlpha(0.5 * (t1 < 60 ? t1 / 60 : 1));
        c.set$fillStyle("#000");
        c.set$font("18px Arial");
        t1 = $.SCREEN_HEIGHT;
      case 1:
        state0 = 0;
        t1 = $.$$sub(t1, this.ay);
        t3 = this.text;
        t4 = c.measureText$1(t3).get$width();
      case 2:
        state0 = 0;
        c.fillRect$4(0, t1, $.$$add(t4, 20), 32);
        c.set$fillStyle("#fff");
        t1 = $.SCREEN_HEIGHT;
      case 3:
        var t7, t8;
        state0 = 0;
        c.fillText$3(t3, 10, $.$$add($.$$sub(t1, this.ay), 20));
        t3 = this.ay;
        t7 = this.y;
        if (typeof t7 !== "number")
          throw $.iae(t7);
        this.ay = t3 - (t3 - t7) / 10;
        c.set$globalAlpha(1);
        t8 = this.timeLeft;
        this.timeLeft = t8 - 1;
        return t8 <= 0;
    }
  }
};

$$.AudioManager = {"": "Object;audioElements>,audioGroup",
  play$1: function(soundName) {
    var t1, t2;
    t1 = this.audioGroup.containsKey$1(soundName);
    t2 = this.audioElements;
    if (t1 === true)
      $.$$index(t2, $.$$index($.$$index(this.audioGroup, soundName), $.toInt($.$$mul($.length($.$$index(this.audioGroup, soundName)), $.get$random_number_generator().nextDouble$0())))).play$0();
    else
      $.$$index(t2, soundName).play$0();
  },
  AudioManager$0: function() {
    this.audioElements = $.Map_Map();
    $.CONSTANT2.forEach$1(["bump", "shoot1", "hurt3", "shoot", "hurt2", "hurt", "hurt1", "coin"], new $.anon68(this));
    this.audioGroup = $.Map_Map();
    $.$$indexSet(this.audioGroup, "shoot", ["shoot", "shoot1"]);
    $.$$indexSet(this.audioGroup, "hurt", ["hurt", "hurt1", "hurt2", "hurt3"]);
  }
};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (!(t1 == null))
      this._target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  onError$1: function(handleError) {
  },
  get$onError: function() {
    return new $.BoundClosure$1(this, "onError$1");
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (!(this._onData == null) && this.get$_paused() !== true)
      this._target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  close$0: function() {
    return this._window.close();
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t1, nextPosition);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$$add(t1, 1);
        t1 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt(nextPosition, t1) === true)
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._current = $.$$index(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$.JsonUnsupportedObjectError = {"": "Object;unsupportedObject,cause>",
  toString$0: function() {
    if (!(this.cause == null))
      return "Calling toJson method on object failed.";
    else
      return "Object toJson method returns non-serializable value.";
  }
};

$$.JsonListener = {"": "Object;",
  handleString$1: function(value) {
  },
  handleNumber$1: function(value) {
  },
  handleBool$1: function(value) {
  },
  handleNull$0: function() {
  },
  beginObject$0: function() {
  },
  propertyName$0: function() {
  },
  propertyValue$0: function() {
  },
  endObject$0: function() {
  },
  beginArray$0: function() {
  },
  arrayElement$0: function() {
  },
  endArray$0: function() {
  },
  fail$3: function(source, position, message) {
  }
};

$$.BuildJsonListener = {"": "JsonListener;stack,currentContainer,key,value",
  key$1: function(arg0) {
    return this.key.call$1(arg0);
  },
  pushContainer$0: function() {
    var t1 = this.currentContainer;
    if (typeof t1 === "object" && t1 !== null && !!t1.$isMap)
      this.stack.push(this.key);
    this.stack.push(this.currentContainer);
  },
  popContainer$0: function() {
    var t1, t2;
    this.value = this.currentContainer;
    t1 = this.stack;
    if (0 >= t1.length)
      throw $.ioore(0);
    this.currentContainer = t1.pop();
    t2 = this.currentContainer;
    if (typeof t2 === "object" && t2 !== null && !!t2.$isMap) {
      if (0 >= t1.length)
        throw $.ioore(0);
      this.key = t1.pop();
    }
  },
  handleString$1: function(value) {
    this.value = value;
  },
  handleNumber$1: function(value) {
    this.value = value;
  },
  handleBool$1: function(value) {
    this.value = value;
  },
  handleNull$0: function() {
    this.value = this.value;
  },
  beginObject$0: function() {
    this.pushContainer$0();
    this.currentContainer = $.makeLiteralMap([]);
  },
  propertyName$0: function() {
    this.key = this.value;
    this.value = null;
  },
  propertyValue$0: function() {
    $.$$indexSet(this.currentContainer, this.key, this.value);
    this.value = null;
    this.key = null;
  },
  endObject$0: function() {
    this.popContainer$0();
  },
  beginArray$0: function() {
    this.pushContainer$0();
    this.currentContainer = [];
  },
  arrayElement$0: function() {
    $.add(this.currentContainer, this.value);
    this.value = null;
  },
  endArray$0: function() {
    this.popContainer$0();
  },
  get$result: function() {
    return this.value;
  }
};

$$.ReviverJsonListener = {"": "BuildJsonListener;reviver,stack,currentContainer,key,value",
  reviver$2: function(arg0, arg1) {
    return this.reviver.call$2(arg0, arg1);
  },
  arrayElement$0: function() {
    this.value = this.reviver$2($.length(this.currentContainer), this.value);
    $.BuildJsonListener.prototype.arrayElement$0.call(this);
  },
  propertyValue$0: function() {
    this.value = this.reviver$2(this.key, this.value);
    $.BuildJsonListener.prototype.propertyValue$0.call(this);
  },
  get$result: function() {
    return this.reviver$2("", this.value);
  }
};

$$.JsonParser = {"": "Object;source>,listener>",
  parse$0: function() {
    var states, t1, $length, t2, t3, state, position, t4, $char, position0;
    states = [];
    t1 = this.source;
    $length = $.length(t1);
    for (t2 = $.getInterceptor$JSString(t1), t3 = this.listener, state = 0, position = 0; t4 = $.getInterceptor$JSNumber(position), t4.$lt(position, $length) === true;) {
      $char = t2.charCodeAt$1(t1, position);
      switch ($char) {
        case 32:
        case 13:
        case 10:
        case 9:
          position = t4.$add(position, 1);
          break;
        case 34:
          if ((state & 8) !== 0)
            this.fail$1(position);
          position0 = this.parseString$1(t4.$add(position, 1));
          state = (state | 28) >>> 0;
          position = position0;
          break;
        case 91:
          if ((state & 4) !== 0)
            this.fail$1(position);
          t3.beginArray$0();
          states.push(state);
          position = t4.$add(position, 1);
          state = 1;
          break;
        case 123:
          if ((state & 4) !== 0)
            this.fail$1(position);
          t3.beginObject$0();
          states.push(state);
          position = t4.$add(position, 1);
          state = 6;
          break;
        case 110:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseNull$1(position);
          state = (state | 28) >>> 0;
          break;
        case 102:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseFalse$1(position);
          state = (state | 28) >>> 0;
          break;
        case 116:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseTrue$1(position);
          state = (state | 28) >>> 0;
          break;
        case 58:
          if (!(state === 30))
            this.fail$1(position);
          t3.propertyName$0();
          position = t4.$add(position, 1);
          state = 19;
          break;
        case 44:
          if (state === 31) {
            t3.propertyValue$0();
            position = t4.$add(position, 1);
            state = 22;
          } else if (state === 29) {
            t3.arrayElement$0();
            position = t4.$add(position, 1);
            state = 17;
          } else
            this.fail$1(position);
          break;
        case 93:
          if (state === 1)
            t3.endArray$0();
          else if (state === 29) {
            t3.arrayElement$0();
            t3.endArray$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          state = $.$$or(states.pop(), 28);
          position = t4.$add(position, 1);
          break;
        case 125:
          if (state === 6)
            t3.endObject$0();
          else if (state === 31) {
            t3.propertyValue$0();
            t3.endObject$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          state = $.$$or(states.pop(), 28);
          position = t4.$add(position, 1);
          break;
        default:
          if ((state & 4) !== 0)
            this.fail$1(position);
          position = this.parseNumber$2($char, position);
          state = (state | 28) >>> 0;
          break;
      }
    }
    if (!(state === 28))
      this.fail$1(position);
  },
  parseTrue$1: function(position) {
    var t1, t2, t4;
    if (typeof position !== "number")
      return this.parseTrue$1$bailout(1, position);
    t1 = this.source;
    t2 = $.length(t1);
    t4 = position + 4;
    if (typeof t2 !== "number")
      return this.parseTrue$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$JSString(t1);
    if (t2.charCodeAt$1(t1, position + 1) !== 114 || t2.charCodeAt$1(t1, position + 2) !== 117 || t2.charCodeAt$1(t1, position + 3) !== 101)
      this.fail$1(position);
    this.listener.handleBool$1(true);
    return t4;
  },
  parseTrue$1$bailout: function(state0, position, t1, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.length(t1);
      case 2:
        var t4;
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.$$lt(t2, t4.$add(position, 4)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$JSString(t1);
        if (t2.charCodeAt$1(t1, t4.$add(position, 1)) !== 114 || t2.charCodeAt$1(t1, t4.$add(position, 2)) !== 117 || t2.charCodeAt$1(t1, t4.$add(position, 3)) !== 101)
          this.fail$1(position);
        this.listener.handleBool$1(true);
        return t4.$add(position, 4);
    }
  },
  parseFalse$1: function(position) {
    var t1, t2, t4;
    if (typeof position !== "number")
      return this.parseFalse$1$bailout(1, position);
    t1 = this.source;
    t2 = $.length(t1);
    t4 = position + 5;
    if (typeof t2 !== "number")
      return this.parseFalse$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$JSString(t1);
    if (t2.charCodeAt$1(t1, position + 1) !== 97 || t2.charCodeAt$1(t1, position + 2) !== 108 || t2.charCodeAt$1(t1, position + 3) !== 115 || t2.charCodeAt$1(t1, position + 4) !== 101)
      this.fail$1(position);
    this.listener.handleBool$1(false);
    return t4;
  },
  parseFalse$1$bailout: function(state0, position, t1, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.length(t1);
      case 2:
        var t4;
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.$$lt(t2, t4.$add(position, 5)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$JSString(t1);
        if (t2.charCodeAt$1(t1, t4.$add(position, 1)) !== 97 || t2.charCodeAt$1(t1, t4.$add(position, 2)) !== 108 || t2.charCodeAt$1(t1, t4.$add(position, 3)) !== 115 || t2.charCodeAt$1(t1, t4.$add(position, 4)) !== 101)
          this.fail$1(position);
        this.listener.handleBool$1(false);
        return t4.$add(position, 5);
    }
  },
  parseNull$1: function(position) {
    var t1, t2, t4;
    if (typeof position !== "number")
      return this.parseNull$1$bailout(1, position);
    t1 = this.source;
    t2 = $.length(t1);
    t4 = position + 4;
    if (typeof t2 !== "number")
      return this.parseNull$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$JSString(t1);
    if (t2.charCodeAt$1(t1, position + 1) !== 117 || t2.charCodeAt$1(t1, position + 2) !== 108 || t2.charCodeAt$1(t1, position + 3) !== 108)
      this.fail$1(position);
    this.listener.handleNull$0();
    return t4;
  },
  parseNull$1$bailout: function(state0, position, t1, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.length(t1);
      case 2:
        var t4;
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.$$lt(t2, t4.$add(position, 4)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$JSString(t1);
        if (t2.charCodeAt$1(t1, t4.$add(position, 1)) !== 117 || t2.charCodeAt$1(t1, t4.$add(position, 2)) !== 108 || t2.charCodeAt$1(t1, t4.$add(position, 3)) !== 108)
          this.fail$1(position);
        this.listener.handleNull$0();
        return t4.$add(position, 4);
    }
  },
  parseString$1: function(position) {
    var t1, t2, t3, t4, position0, t5, $char, firstEscape, chars, hexStart, value, i, value0, char0, result;
    t1 = this.source;
    t2 = $.getInterceptor$JSString(t1);
    t3 = $.getInterceptor$JSNumber(position);
    t4 = $.getInterceptor$JSArrayJSString(t1);
    position0 = position;
    do {
      t5 = $.getInterceptor(position0);
      if (t5.$eq(position0, t4.get$length(t1)) === true)
        this.fail$2(t3.$sub(position, 1), "Unterminated string");
      $char = t2.charCodeAt$1(t1, position0);
      if ($char === 34) {
        this.listener.handleString$1(t2.substring$2(t1, position, position0));
        return t5.$add(position0, 1);
      }
      if ($char < 32)
        this.fail$2(position0, "Control character in string");
      position0 = t5.$add(position0, 1);
    } while ($char !== 92);
    firstEscape = $.$$sub(position0, 1);
    chars = [];
    for (; true;) {
      t5 = $.getInterceptor(position0);
      if (t5.$eq(position0, t4.get$length(t1)) === true)
        this.fail$2(t3.$sub(position, 1), "Unterminated string");
      $char = t2.charCodeAt$1(t1, position0);
      switch ($char) {
        case 98:
          $char = 8;
          break;
        case 102:
          $char = 12;
          break;
        case 110:
          $char = 10;
          break;
        case 114:
          $char = 13;
          break;
        case 116:
          $char = 9;
          break;
        case 47:
        case 92:
        case 34:
          break;
        case 117:
          hexStart = t5.$sub(position0, 1);
          for (value = 0, i = 0; i < 4; ++i) {
            position0 = $.$$add(position0, 1);
            if ($.$$eq(position0, t4.get$length(t1)) === true)
              this.fail$2(t3.$sub(position, 1), "Unterminated string");
            $char = t2.charCodeAt$1(t1, position0) - 48;
            if ($char < 0)
              this.fail$2(hexStart, "Invalid unicode escape");
            if ($char < 10) {
              value0 = value * 16 + $char;
              value = value0;
            } else {
              char0 = (($char | 32) >>> 0) - 49;
              if (char0 < 0 || char0 > 5)
                this.fail$2(hexStart, "Invalid unicode escape");
              value0 = value * 16 + char0 + 10;
              value = value0;
            }
          }
          $char = value;
          break;
        default:
          if ($char < 32)
            this.fail$2(position0, "Control character in string");
          this.fail$2(position0, "Unrecognized string escape");
      }
      do {
        chars.push($char);
        position0 = $.$$add(position0, 1);
        t5 = $.getInterceptor(position0);
        if (t5.$eq(position0, t4.get$length(t1)) === true)
          this.fail$2(t3.$sub(position, 1), "Unterminated string");
        $char = t2.charCodeAt$1(t1, position0);
        if ($char === 34) {
          result = $.String_String$fromCharCodes(chars);
          if (t3.$lt(position, firstEscape) === true)
            result = t2.substring$2(t1, position, firstEscape) + $.S(result);
          this.listener.handleString$1(result);
          return t5.$add(position0, 1);
        }
        if ($char < 32)
          this.fail$2(position0, "Control character in string");
      } while ($char !== 92);
      position0 = t5.$add(position0, 1);
    }
  },
  parseNumber$2: function($char, position) {
    var t1, t2, $length, position0, t3, t4;
    t1 = {};
    if (typeof position !== "number")
      return this.parseNumber$2$bailout(1, $char, position, t1);
    t2 = this.source;
    $length = $.length(t2);
    t1.isDouble_0 = false;
    if ($char === 45) {
      position0 = position + 1;
      if (position0 === $length)
        this.fail$2(position0, "Missing expected digit");
      $char = $.charCodeAt(t2, position0);
    } else
      position0 = position;
    if ($char < 48 || $char > 57)
      this.fail$2(position0, "Missing expected digit");
    t3 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
    if ($char === 48) {
      position = position0 + 1;
      if (position === $length)
        return t3.call$1(position);
      $char = $.charCodeAt(t2, position);
      if (48 <= $char && $char <= 57)
        this.fail$1(position);
    } else {
      t4 = $.getInterceptor$JSString(t2);
      position = position0;
      do {
        ++position;
        if (position === $length)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 46) {
      t1.isDouble_0 = true;
      ++position;
      if (position === $length)
        this.fail$2(position, "Missing expected digit");
      t4 = $.getInterceptor$JSString(t2);
      $char = t4.charCodeAt$1(t2, position);
      if ($char < 48 || $char > 57)
        this.fail$1(position);
      do {
        ++position;
        if (position === $length)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 101 || $char === 69) {
      t1.isDouble_0 = true;
      ++position;
      if (position === $length)
        this.fail$2(position, "Missing expected digit");
      t1 = $.getInterceptor$JSString(t2);
      $char = t1.charCodeAt$1(t2, position);
      if ($char === 43 || $char === 45) {
        ++position;
        if (position === $length)
          this.fail$2(position, "Missing expected digit");
        $char = t1.charCodeAt$1(t2, position);
      }
      if ($char < 48 || $char > 57)
        this.fail$2(position, "Missing expected digit");
      do {
        ++position;
        if (position === $length)
          return t3.call$1(position);
        $char = t1.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    return t3.call$1(position);
  },
  parseNumber$2$bailout: function(state0, $char, position, t1) {
    var t2, $length, position0, t3, t4;
    t2 = this.source;
    $length = $.length(t2);
    t1.isDouble_0 = false;
    if ($char === 45) {
      position0 = $.$$add(position, 1);
      if ($.$$eq(position0, $length) === true)
        this.fail$2(position0, "Missing expected digit");
      $char = $.charCodeAt(t2, position0);
    } else
      position0 = position;
    if ($char < 48 || $char > 57)
      this.fail$2(position0, "Missing expected digit");
    t3 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
    if ($char === 48) {
      position = $.$$add(position0, 1);
      if ($.$$eq(position, $length) === true)
        return t3.call$1(position);
      $char = $.charCodeAt(t2, position);
      if (48 <= $char && $char <= 57)
        this.fail$1(position);
    } else {
      t4 = $.getInterceptor$JSString(t2);
      position = position0;
      do {
        position = $.$$add(position, 1);
        if ($.$$eq(position, $length) === true)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 46) {
      t1.isDouble_0 = true;
      position = $.$$add(position, 1);
      if ($.$$eq(position, $length) === true)
        this.fail$2(position, "Missing expected digit");
      t4 = $.getInterceptor$JSString(t2);
      $char = t4.charCodeAt$1(t2, position);
      if ($char < 48 || $char > 57)
        this.fail$1(position);
      do {
        position = $.$$add(position, 1);
        if ($.$$eq(position, $length) === true)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 101 || $char === 69) {
      t1.isDouble_0 = true;
      position = $.$$add(position, 1);
      t1 = $.getInterceptor(position);
      if (t1.$eq(position, $length) === true)
        this.fail$2(position, "Missing expected digit");
      t4 = $.getInterceptor$JSString(t2);
      $char = t4.charCodeAt$1(t2, position);
      if ($char === 43 || $char === 45) {
        position = t1.$add(position, 1);
        if ($.$$eq(position, $length) === true)
          this.fail$2(position, "Missing expected digit");
        $char = t4.charCodeAt$1(t2, position);
      }
      if ($char < 48 || $char > 57)
        this.fail$2(position, "Missing expected digit");
      do {
        position = $.$$add(position, 1);
        if ($.$$eq(position, $length) === true)
          return t3.call$1(position);
        $char = t4.charCodeAt$1(t2, position);
      } while (48 <= $char && $char <= 57);
    }
    return t3.call$1(position);
  },
  fail$2: function(position, message) {
    var t1, t2, sliceEnd, t4, slice;
    if (typeof position !== "number")
      return this.fail$2$bailout(1, position, message);
    if (typeof message !== "string")
      return this.fail$2$bailout(1, position, message);
    t1 = this.listener;
    t2 = this.source;
    t1.fail$3(t2, position, message);
    sliceEnd = position + 20;
    t1 = $.length(t2);
    if (typeof t1 !== "number")
      return this.fail$2$bailout(2, position, 0, t2, sliceEnd, t1);
    t4 = $.getInterceptor$JSString(t2);
    slice = sliceEnd > t1 ? "'" + t4.substring$1(t2, position) + "'" : "'" + t4.substring$2(t2, position, sliceEnd) + "...'";
    throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
  },
  fail$2$bailout: function(state0, position, message, t2, sliceEnd, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (message == null)
          message = "Unexpected character";
        t1 = this.listener;
        t2 = this.source;
        t1.fail$3(t2, position, message);
        sliceEnd = $.$$add(position, 20);
        t1 = $.length(t2);
      case 2:
        var t4, slice;
        state0 = 0;
        t4 = $.getInterceptor$JSString(t2);
        slice = $.$$gt(sliceEnd, t1) === true ? "'" + t4.substring$1(t2, position) + "'" : "'" + t4.substring$2(t2, position, sliceEnd) + "...'";
        throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
    }
  },
  fail$1: function(position) {
    return this.fail$2(position, null);
  }
};

$$._JsonStringifier = {"": "Object;sb>,seen",
  checkCycle$1: function(object) {
    var t1, t2, i, t3;
    for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
      t3 = t1[i];
      if (t3 == null ? object == null : t3 === object)
        throw $.$$throw("Cyclic structure");
    }
    t1.push(object);
  },
  stringifyValue$1: function(object) {
    var customJson, e, t1, exception;
    if (!this.stringifyJsonValue$1(object)) {
      this.checkCycle$1(object);
      try {
        customJson = object.toJson$0();
        if (!this.stringifyJsonValue$1(customJson))
          throw $.$$throw($.JsonUnsupportedObjectError$(object));
        t1 = this.seen;
        if (0 >= t1.length)
          throw $.ioore(0);
        t1.pop();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
      }

    }
  },
  stringifyJsonValue$1: function(object) {
    var t1, t2, i;
    t1 = {};
    if (typeof object === "number") {
      this.sb.add$1($.CONSTANT7.toString$0(object));
      return true;
    } else if (object === true) {
      this.sb.add$1("true");
      return true;
    } else if (object === false) {
      this.sb.add$1("false");
      return true;
    } else if (object == null) {
      this.sb.add$1("null");
      return true;
    } else if (typeof object === "string") {
      t1 = this.sb;
      t1.add$1("\"");
      $._JsonStringifier_escape(t1, object);
      t1.add$1("\"");
      return true;
    } else if (typeof object === "object" && object !== null && (object.constructor === Array || object.$isList())) {
      if (typeof object !== "object" || object === null || object.constructor !== Array && !object.$isJavaScriptIndexingBehavior())
        return this.stringifyJsonValue$1$bailout(1, object);
      this.checkCycle$1(object);
      t2 = this.sb;
      t2.add$1("[");
      if (object.length > 0) {
        this.stringifyValue$1(object[0]);
        for (i = 1; i < object.length; ++i) {
          t2.add$1(",");
          if (i >= object.length)
            throw $.ioore(i);
          this.stringifyValue$1(object[i]);
        }
      }
      t2.add$1("]");
      t1 = this.seen;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
      return true;
    } else if (typeof object === "object" && object !== null && !!object.$isMap) {
      this.checkCycle$1(object);
      t2 = this.sb;
      t2.add$1("{");
      t1.first_0 = true;
      object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
      t2.add$1("}");
      t2 = this.seen;
      if (0 >= t2.length)
        throw $.ioore(0);
      t2.pop();
      return true;
    } else
      return false;
  },
  stringifyJsonValue$1$bailout: function(state0, object) {
    switch (state0) {
      case 0:
        t1 = {};
      case 1:
        var t1, t2, i;
        if (state0 === 0 && typeof object === "number") {
          this.sb.add$1($.CONSTANT7.toString$0(object));
          return true;
        } else
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 0 && object === true) {
                this.sb.add$1("true");
                return true;
              } else
                switch (state0) {
                  case 0:
                  case 1:
                    if (state0 === 0 && object === false) {
                      this.sb.add$1("false");
                      return true;
                    } else
                      switch (state0) {
                        case 0:
                        case 1:
                          if (state0 === 0 && object == null) {
                            this.sb.add$1("null");
                            return true;
                          } else
                            switch (state0) {
                              case 0:
                              case 1:
                                if (state0 === 0 && typeof object === "string") {
                                  t1 = this.sb;
                                  t1.add$1("\"");
                                  $._JsonStringifier_escape(t1, object);
                                  t1.add$1("\"");
                                  return true;
                                } else
                                  switch (state0) {
                                    case 0:
                                    case 1:
                                      if (state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && (object.constructor === Array || object.$isList()))
                                        switch (state0) {
                                          case 0:
                                          case 1:
                                            state0 = 0;
                                            this.checkCycle$1(object);
                                            t2 = this.sb;
                                            t2.add$1("[");
                                            t1 = $.getInterceptor$JSArrayJSString(object);
                                            if ($.$$gt(t1.get$length(object), 0) === true) {
                                              this.stringifyValue$1(t1.$index(object, 0));
                                              for (i = 1; $.CONSTANT9.$lt(i, t1.get$length(object)); ++i) {
                                                t2.add$1(",");
                                                this.stringifyValue$1(t1.$index(object, i));
                                              }
                                            }
                                            t2.add$1("]");
                                            t1 = this.seen;
                                            if (0 >= t1.length)
                                              throw $.ioore(0);
                                            t1.pop();
                                            return true;
                                        }
                                      else if (typeof object === "object" && object !== null && !!object.$isMap) {
                                        this.checkCycle$1(object);
                                        t2 = this.sb;
                                        t2.add$1("{");
                                        t1.first_0 = true;
                                        object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
                                        t2.add$1("}");
                                        t2 = this.seen;
                                        if (0 >= t2.length)
                                          throw $.ioore(0);
                                        t2.pop();
                                        return true;
                                      } else
                                        return false;
                                  }
                            }
                      }
                }
          }
    }
  }
};

$$._Random = {"": "Object;",
  nextDouble$0: function() {
    return Math.random();
  }
};

$$.main_anon = {"": "Closure;",
  call$1: function(e) {
    $.menu = $.MainMenu$();
  },
  $is_TimerCallback1: true
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  },
  $is_TimerCallback0: true
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  },
  $is_TimerCallback0: true
};

$$.ToString__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    $.add(t1, ": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add(t1.count_0, 1);
  },
  $is_TimerCallback1: true
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._liblib$_setValue$1(this.box_0.count_0);
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$0: function() {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      $.Primitives_printString("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (!(t1 == null))
        $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  },
  $is_TimerCallback0: true
};

$$.Timer_Timer_anon = {"": "Closure;box_0,callback_1",
  call$0: function() {
    return this.callback_1.call$1(this.box_0.timer_0);
  },
  $is_TimerCallback0: true
};

$$.internalCallback = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$0();
    this.this_0.set$_handle(null);
    var t1 = $globalState.topEventLoop;
    t1.set$activeTimerCount($.$$sub(t1.get$activeTimerCount(), 1));
  },
  $is_TimerCallback0: true
};

$$.Duration_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$JSNumber(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$gt(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.Duration_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.Stream_elementAt_anon = {"": "Closure;box_0,future_1",
  call$1: function(value) {
    var t1 = this.box_0;
    if ($.$$eq(t1.index_0, 0) === true) {
      this.future_1._liblib$_setValue$1(value);
      t1.subscription_1.cancel$0();
      return;
    }
    t1.index_0 = $.$$sub(t1.index_0, 1);
  },
  $is_TimerCallback1: true
};

$$.Stream_elementAt_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setError$1($.AsyncError$($.StateError$("Not enough elements for elementAt"), null));
  },
  $is_TimerCallback0: true
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt(t1.i_1, 0) === true)
      $.add(t1.sb_0, ", ");
    $.add(t1.sb_0, key);
    $.add(t1.sb_0, ": ");
    $.add(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add(t1.i_1, 1);
  }
};

$$.anon = {"": "Closure;this_0",
  call$1: function(img) {
    var t1 = this.this_0;
    t1.set$background($.res_loadImage("mainMenuBackground.png", new $._anon(t1)));
  },
  $is_TimerCallback1: true
};

$$._anon = {"": "Closure;this_1",
  call$1: function(img) {
    var t1 = this.this_1;
    t1.set$creditsImage($.res_loadImage("attribution.png", new $.__anon(t1)));
  },
  $is_TimerCallback1: true
};

$$.__anon = {"": "Closure;this_2",
  call$1: function(img) {
    var t1;
    $.event = $.UIManager$();
    t1 = this.this_2;
    t1.set$anim([0, 0, 0, 0, 0]);
    if (t1.get$active() === true) {
      window.requestAnimationFrame$1(t1.get$cycle());
      t1.render$0();
    } else
      t1.fin$0();
  },
  $is_TimerCallback1: true
};

$$.res_loadImage_anon = {"": "Closure;box_0,img_1",
  call$1: function(e) {
    this.box_0.callback_0.call$1(this.img_1);
  },
  $is_TimerCallback1: true
};

$$.res_loadImage_anon0 = {"": "Closure;box_0",
  call$1: function(e) {
    this.box_0.callback_0.call$1($.ImageElement_ImageElement(null, null, null));
  },
  $is_TimerCallback1: true
};

$$.res_loadImage_anon1 = {"": "Closure;",
  call$1: function(a) {
  },
  $is_TimerCallback1: true
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$.MainMenu_render_anon = {"": "Closure;box_2,this_3,buttonWidth_4,buttonHeight_5,linex_6",
  call$1: function(s) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, bw, bh;
    t1 = {};
    t2 = this.this_3;
    t2.get$context().save$0();
    t2.get$context().set$fillStyle("#000");
    t3 = $.event.get$mouse_position().get$x();
    t4 = this.linex_6;
    t5 = $.abs($.$$sub(t3, t4));
    t6 = this.buttonWidth_4;
    t7 = $.getInterceptor$JSNumber(t6);
    t3 = t5 < t7.$div(t6, 2) && $.abs($.$$sub($.event.get$mouse_position().get$y(), this.box_2.ypos_2)) < $.$$div(this.buttonHeight_5, 2);
    t5 = t2.get$anim();
    t8 = this.box_2;
    if (t3) {
      t3 = t8.i_3;
      if ($.$$lt($.$$index(t5, t3), 1) === true) {
        t9 = t2.get$anim();
        t8 = t8.i_3;
        t10 = $.getInterceptor$JSArrayJSString(t9);
        t11 = $.$$add(t10.$index(t9, t8), 0.1);
        t10.$indexSet(t9, t8, t11);
        t8 = t11;
      } else
        t8 = 1;
      $.$$indexSet(t5, t3, t8);
      t3 = $.event;
      if (t3.get$mouseDown() === true)
        switch (s) {
          case "Credits":
            t2.set$credits(true);
            t3.set$mouseDown(false);
            break;
          case "Play":
            t2.set$active(false);
            t2.set$fin(new $.MainMenu_render__anon());
            break;
          case "Dev Mode":
            t2.set$active(false);
            t2.set$fin(new $.MainMenu_render__anon0());
            break;
          case "Long Night":
            t2.set$active(false);
            t1.count_1 = 1;
            t2.set$fin(new $.MainMenu_render__anon1(t1));
            break;
        }
      else
        document.get$body().get$style().set$cursor("pointer");
    } else {
      t1 = t8.i_3;
      if ($.$$gt($.$$index(t5, t1), 0) === true) {
        t3 = t2.get$anim();
        t8 = t8.i_3;
        t9 = $.getInterceptor$JSArrayJSString(t3);
        t10 = $.$$sub(t9.$index(t3, t8), 0.1);
        t9.$indexSet(t3, t8, t10);
        t3 = t10;
      } else
        t3 = 0;
      $.$$indexSet(t5, t1, t3);
    }
    t1 = t2.get$context();
    t3 = t1.get$globalAlpha();
    t5 = t2.get$anim();
    t8 = this.box_2;
    t1.set$globalAlpha($.$$mul(t3, 0.5 + $.$$div($.$$index(t5, t8.i_3), 2)));
    bw = t7.$add(t6, $.$$mul($.$$index(t2.get$anim(), t8.i_3), 20));
    t6 = this.buttonHeight_5;
    t7 = $.getInterceptor$JSNumber(t6);
    bh = t7.$add(t6, $.$$mul($.$$index(t2.get$anim(), t8.i_3), 10));
    t2.get$context().fillRect$4($.$$sub(t4, $.$$div(bw, 2)), $.$$sub(t8.ypos_2, $.$$div(bh, 2)), bw, bh);
    t1 = t2.get$context();
    t1.set$globalAlpha($.$$div(t1.get$globalAlpha(), 0.5 + $.$$div($.$$index(t2.get$anim(), t8.i_3), 2)));
    t2.get$context().set$fillStyle("white");
    t2.get$context().set$font("24px Arial");
    t2.get$context().set$textAlign("center");
    t2.get$context().fillText$3(s, t4, $.$$add($.$$sub(t8.ypos_2, t7.$div(t6, 2)), 32));
    t8.ypos_2 = $.$$add(t8.ypos_2, t7.$add(t6, 10));
    t2.get$context().restore$0();
    t8.i_3 = $.$$add(t8.i_3, 1);
  }
};

$$.MainMenu_render__anon = {"": "Closure;",
  call$0: function() {
    $.menu = null;
    $.game = $.Game$();
    return;
  },
  $is_TimerCallback0: true
};

$$.MainMenu_render__anon0 = {"": "Closure;",
  call$0: function() {
    $.DEBUG = true;
    $.menu = null;
    $.game = $.Game$();
    $.world.set$intro(false);
  },
  $is_TimerCallback0: true
};

$$.MainMenu_render__anon1 = {"": "Closure;box_1",
  call$0: function() {
    var t1, t2;
    t1 = {};
    $.menu = null;
    $.game = $.Game$();
    t2 = $.world;
    t2.set$intro(false);
    t2.set$dayLength(432000);
    t2.set$time(21);
    t1.interval_0 = null;
    t1.interval_0 = $.Timer_Timer($.Duration$(0, 0, 500, 0, 0), new $.MainMenu_render___anon(t1, this.box_1, 20));
  },
  $is_TimerCallback0: true
};

$$.MainMenu_render___anon = {"": "Closure;box_0,box_1,seconds_difficulty_change_7",
  call$1: function(timer) {
    var t1, t2;
    t1 = this.box_1;
    if ($.$$eq($.$$mod(t1.count_1, $.$$mul(this.seconds_difficulty_change_7, 2)), 0) === true) {
      t2 = $.world;
      t2.set$dayCount($.$$add(t2.get$dayCount(), 1));
      $.world.increaseDifficulty$0();
      $.notify("Difficulty Increased (Night " + $.S($.world.get$dayCount()) + ")");
      if ($.game == null || $.world.get$paused() === true)
        this.box_0.interval_0.cancel$0();
    }
    t1.count_1 = $.$$add(t1.count_1, 1);
  },
  $is_TimerCallback1: true
};

$$.anon0 = {"": "Closure;",
  call$1: function(p) {
    return $.SpawnPoint$(p);
  },
  $is_TimerCallback1: true
};

$$.anon1 = {"": "Closure;",
  call$1: function(p) {
    return $.Avatar$(p);
  },
  $is_TimerCallback1: true
};

$$.anon2 = {"": "Closure;",
  call$1: function(p) {
    return $.GameObject$(p, 0, 0);
  },
  $is_TimerCallback1: true
};

$$.anon3 = {"": "Closure;",
  call$1: function(p) {
    return $.Arrow$(p);
  },
  $is_TimerCallback1: true
};

$$.anon4 = {"": "Closure;",
  call$1: function(p) {
    return $.FloatingText$(p);
  },
  $is_TimerCallback1: true
};

$$.anon5 = {"": "Closure;",
  call$1: function(avatar) {
    var t1, t2, r;
    if (avatar.get$damage() == null) {
      avatar.set$armor(1);
      avatar.set$damage(0);
    }
    t1 = $.$$mul($.get$random_number_generator().nextDouble$0(), 1.5);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    avatar.set$speed(0.5 + t1);
    t2 = $.getInterceptor$JSArray(avatar);
    t2.$indexSet(avatar, "destination", avatar.clone$0());
    t2.$indexSet(avatar, "waitTime", 0);
    r = $.$$add($.get$random_number_generator().nextDouble$0(), $.niceFactor);
    t1 = $.getInterceptor$JSNumber(r);
    if (t1.$lt(r, 0.1) === true) {
      $.add(avatar.get$tags(), "mean");
      $.addTag(avatar, "mean");
    } else if (t1.$gt(r, 1) === true) {
      $.add(avatar.get$tags(), "nice");
      $.addTag(avatar, "nice");
    }
    t2.$indexSet(avatar, "followOffset", $.Vec2$($.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 128), 64), $.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 128), 64)));
  }
};

$$.anon6 = {"": "Closure;",
  call$1: function(citizen) {
    var zoms, t1, i, iter, index, t2;
    if (citizen.hasTag$1("scared") !== true) {
      zoms = $.$$index($.tags, "zombie");
      if (typeof zoms !== "string" && (typeof zoms !== "object" || zoms === null || zoms.constructor !== Array && !zoms.$isJavaScriptIndexingBehavior()))
        return this.call$1$bailout(1, citizen, zoms);
      t1 = $.getInterceptor$JSArrayJSString(zoms);
      i = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), zoms.length));
      if (typeof i !== "number")
        return this.call$1$bailout(2, citizen, zoms, i, t1);
      iter = 0;
      for (; t1 = zoms.length, iter < t1 / 16; ++iter, ++i) {
        index = $.CONSTANT7.$mod(i, t1);
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1)
          throw $.ioore(index);
        t2 = zoms[index];
        if (t2.get$alive() === true && t2.distanceTo$1(citizen) < 96) {
          $.CONSTANT2.forEach$1(["wander", "traveler", "lost", "following", "homebound"], new $._anon11(citizen));
          t1 = $.get$random_number_generator().nextDouble$0();
          if (typeof t1 !== "number")
            throw $.iae(t1);
          t2 = $.CONSTANT7.toInt$0(5 * t1);
          if (t2 !== (t2 | 0))
            throw $.iae(t2);
          if (t2 < 0 || t2 >= $.CONSTANT39.length)
            throw $.ioore(t2);
          citizen.say$2($.CONSTANT39[t2], 100);
          $.add(citizen.get$tags(), "scared");
          $.addTag(citizen, "scared");
          if (index >= zoms.length)
            throw $.ioore(index);
          $.$$indexSet(citizen, "scaredOf", zoms[index]);
          $.$$index($.$$index($.tagEvents, "scared"), "init").call$1(citizen);
          return;
        }
      }
      zoms = $.$$index($.tags, "corpse");
      if (typeof zoms !== "string" && (typeof zoms !== "object" || zoms === null || zoms.constructor !== Array && !zoms.$isJavaScriptIndexingBehavior()))
        return this.call$1$bailout(3, citizen, zoms);
      t1 = $.getInterceptor$JSArrayJSString(zoms);
      i = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), zoms.length));
      if (typeof i !== "number")
        return this.call$1$bailout(4, citizen, zoms, i, t1);
      iter = 0;
      for (; t1 = zoms.length, iter < t1 / 16; ++iter, ++i) {
        index = $.CONSTANT7.$mod(i, t1);
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1)
          throw $.ioore(index);
        if (zoms[index].hasTag$1("zombie") !== true) {
          if (index >= zoms.length)
            throw $.ioore(index);
          t1 = zoms[index].distanceTo$1(citizen) < 96;
        } else
          t1 = false;
        if (t1) {
          $.CONSTANT2.forEach$1(["wander", "traveler", "lost", "following", "homebound"], new $._anon12(citizen));
          t1 = $.get$random_number_generator().nextDouble$0();
          if (typeof t1 !== "number")
            throw $.iae(t1);
          t2 = $.CONSTANT7.toInt$0(5 * t1);
          if (t2 !== (t2 | 0))
            throw $.iae(t2);
          if (t2 < 0 || t2 >= $.CONSTANT39.length)
            throw $.ioore(t2);
          citizen.say$1($.CONSTANT39[t2]);
          $.add(citizen.get$tags(), "scared");
          $.addTag(citizen, "scared");
          if (index >= zoms.length)
            throw $.ioore(index);
          $.$$indexSet(citizen, "scaredOf", zoms[index]);
          $.$$index($.$$index($.tagEvents, "scared"), "init").call$1(citizen);
          return;
        }
      }
    }
  },
  call$1$bailout: function(state0, citizen, zoms, i, t1) {
    switch (state0) {
      case 0:
      default:
        var iter, t2, index, t3;
        if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && citizen.hasTag$1("scared") !== true)
          switch (state0) {
            case 0:
              zoms = $.$$index($.tags, "zombie");
            case 1:
              state0 = 0;
              t1 = $.getInterceptor$JSArrayJSString(zoms);
              i = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), t1.get$length(zoms)));
            case 2:
              state0 = 0;
              iter = 0;
              for (; iter < $.$$div(t1.get$length(zoms), 16); ++iter, i = t2.$add(i, 1)) {
                t2 = $.getInterceptor$JSNumber(i);
                index = t2.$mod(i, t1.get$length(zoms));
                if (t1.$index(zoms, index).get$alive() === true && t1.$index(zoms, index).distanceTo$1(citizen) < 96) {
                  $.CONSTANT2.forEach$1(["wander", "traveler", "lost", "following", "homebound"], new $._anon11(citizen));
                  t2 = $.get$random_number_generator().nextDouble$0();
                  if (typeof t2 !== "number")
                    throw $.iae(t2);
                  t3 = $.CONSTANT7.toInt$0(5 * t2);
                  if (t3 !== (t3 | 0))
                    throw $.iae(t3);
                  if (t3 < 0 || t3 >= $.CONSTANT39.length)
                    throw $.ioore(t3);
                  citizen.say$2($.CONSTANT39[t3], 100);
                  $.add(citizen.get$tags(), "scared");
                  $.addTag(citizen, "scared");
                  $.$$indexSet(citizen, "scaredOf", t1.$index(zoms, index));
                  $.$$index($.$$index($.tagEvents, "scared"), "init").call$1(citizen);
                  return;
                }
              }
              zoms = $.$$index($.tags, "corpse");
            case 3:
              state0 = 0;
              t1 = $.getInterceptor$JSArrayJSString(zoms);
              i = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), t1.get$length(zoms)));
            case 4:
              state0 = 0;
              iter = 0;
              for (; iter < $.$$div(t1.get$length(zoms), 16); ++iter, i = t2.$add(i, 1)) {
                t2 = $.getInterceptor$JSNumber(i);
                index = t2.$mod(i, t1.get$length(zoms));
                if (t1.$index(zoms, index).hasTag$1("zombie") !== true && t1.$index(zoms, index).distanceTo$1(citizen) < 96) {
                  $.CONSTANT2.forEach$1(["wander", "traveler", "lost", "following", "homebound"], new $._anon12(citizen));
                  t2 = $.get$random_number_generator().nextDouble$0();
                  if (typeof t2 !== "number")
                    throw $.iae(t2);
                  t3 = $.CONSTANT7.toInt$0(5 * t2);
                  if (t3 !== (t3 | 0))
                    throw $.iae(t3);
                  if (t3 < 0 || t3 >= $.CONSTANT39.length)
                    throw $.ioore(t3);
                  citizen.say$1($.CONSTANT39[t3]);
                  $.add(citizen.get$tags(), "scared");
                  $.addTag(citizen, "scared");
                  $.$$indexSet(citizen, "scaredOf", t1.$index(zoms, index));
                  $.$$index($.$$index($.tagEvents, "scared"), "init").call$1(citizen);
                  return;
                }
              }
          }
    }
  }
};

$$._anon11 = {"": "Closure;citizen_1",
  call$1: function(tag) {
    var t1 = this.citizen_1;
    if (t1.hasTag$1(tag) === true) {
      t1.removeTag$1(tag);
      $.rmTag(t1, tag);
    }
  }
};

$$._anon12 = {"": "Closure;citizen_2",
  call$1: function(tag) {
    var t1 = this.citizen_2;
    if (t1.hasTag$1(tag) === true) {
      t1.removeTag$1(tag);
      $.rmTag(t1, tag);
    }
  }
};

$$.anon7 = {"": "Closure;",
  call$1: function(citizen) {
    var t1, t2;
    if (citizen.distanceTo$1($.world.get$player()) < 256)
      $.audio.play$1("hurt");
    if ($.world.get$player().get$attacking() === true) {
      $.niceFactor = $.$$sub($.niceFactor, 0.005);
      $.CONSTANT2.forEach$1(["wander", "traveler", "lost", "following", "homebound", "scared"], new $._anon10(citizen));
      t1 = $.get$random_number_generator().nextDouble$0();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t2 = $.CONSTANT7.toInt$0(5 * t1);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= $.CONSTANT39.length)
        throw $.ioore(t2);
      citizen.say$1($.CONSTANT39[t2]);
      $.add(citizen.get$tags(), "scared");
      $.addTag(citizen, "scared");
      $.$$indexSet(citizen, "scaredOf", $.world.get$player());
      $.$$index($.$$index($.tagEvents, "scared"), "init").call$1(citizen);
    }
  }
};

$$._anon10 = {"": "Closure;citizen_3",
  call$1: function(tag) {
    var t1 = this.citizen_3;
    if (t1.hasTag$1(tag) === true) {
      t1.removeTag$1(tag);
      $.rmTag(t1, tag);
    }
  }
};

$$.anon8 = {"": "Closure;",
  call$1: function(avatar) {
    var t1, t2;
    t1 = $.world;
    t1.set$totalPopulation($.$$sub(t1.get$totalPopulation(), 1));
    t1 = $.world;
    t1.set$awakePopulation($.$$sub(t1.get$awakePopulation(), 1));
    t1 = $.world;
    t1.set$zombie_max($.$$add(t1.get$zombie_max(), 1));
    $.niceFactor = $.$$sub($.niceFactor, 0.01);
    if ($.world.get$player().get$attacking() === true && $.world.get$player().distanceTo$1(avatar) < 256) {
      $.niceFactor = $.$$sub($.niceFactor, 0.05);
      t1 = $.world;
      t2 = $.get$random_number_generator().nextDouble$0();
      if (typeof t2 !== "number")
        throw $.iae(t2);
      t1.giveCoin$2(avatar, $.CONSTANT7.toInt$0(10 * t2 + 2));
    }
  }
};

$$.anon9 = {"": "Closure;",
  call$1: function(citizen) {
    var t1, t2;
    t1 = $.rpatCount;
    t2 = $.getInterceptor$JSNumber(t1);
    $.rpatCount = t2.$add(t1, 1);
    if ($.$$eq(t2.$mod(t1, 120), 0) === true)
      $.add(citizen, citizen.get$velocity());
  }
};

$$.anon10 = {"": "Closure;",
  call$1: function(player) {
    player.set$damage(25);
    player.set$armor(0.5);
    player.set$speed(1);
  }
};

$$.anon11 = {"": "Closure;",
  call$1: function(player) {
    $.notify("You have died, please wait");
    $.$$indexSet(player, "deadTime", 540);
  }
};

$$.anon12 = {"": "Closure;this_4",
  call$1: function(player) {
    $.GameOver(this.this_4.get$context());
  }
};

$$.anon13 = {"": "Closure;",
  call$1: function(player) {
    player.set$health($.$$lt(player.get$health(), $.world.get$player_max_health()) === true ? $.$$add(player.get$health(), 0.2) : $.world.get$player_max_health());
    if ($.world.collisionAtVec2$1(player) === true)
      $.add(player, player.get$velocity());
  }
};

$$.anon14 = {"": "Closure;",
  call$1: function(citizen) {
    var t1 = $.getInterceptor$JSArrayJSString(citizen);
    t1.$indexSet(citizen, "runDirection", citizen.clone$0().sub$1(t1.$index(citizen, "scaredOf")).normalize$0().multiplyScalar$1(citizen.get$speed()));
  }
};

$$.anon15 = {"": "Closure;",
  call$1: function(citizen) {
    var t1, t2, t3;
    t1 = $.getInterceptor$JSArrayJSString(citizen);
    $.add(citizen.get$velocity(), t1.$index(citizen, "runDirection"));
    t2 = $.rpatCount;
    t3 = $.getInterceptor$JSNumber(t2);
    $.rpatCount = t3.$add(t2, 1);
    if ($.$$eq(t3.$mod(t2, 8), 0) === true)
      if ($.CONSTANT11.$gt(t1.$index(citizen, "scaredOf").distanceTo$1(citizen), $.$$add($.world.get$AGRO_DISTANCE(), 32))) {
        $.switchTag(citizen, "scared", "lost");
        $.add(citizen.get$tags(), "wander");
        $.addTag(citizen, "wander");
      }
  }
};

$$.anon16 = {"": "Closure;",
  call$1: function(a) {
    var cnodes, t1, t2, ni, t3, i;
    cnodes = $.world.getClosePathNodes$1(a);
    if (typeof cnodes !== "string" && (typeof cnodes !== "object" || cnodes === null || cnodes.constructor !== Array && !cnodes.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout(1, a, cnodes);
    if (cnodes.length > 0)
      if ($.$$lt($.world.get$time(), 16) === true) {
        t1 = cnodes.length;
        t2 = $.get$random_number_generator().nextDouble$0();
        if (typeof t2 !== "number")
          throw $.iae(t2);
        ni = $.CONSTANT7.toInt$0(t1 * t2);
        if (ni !== (ni | 0))
          throw $.iae(ni);
        if (ni < 0 || ni >= cnodes.length)
          throw $.ioore(ni);
        t3 = $.getInterceptor$JSArray(a);
        t3.$indexSet(a, "path", cnodes[ni].get$path());
        if (ni >= cnodes.length)
          throw $.ioore(ni);
        t3.$indexSet(a, "pathDirection", cnodes[ni].get$start() === true ? 1 : -1);
        if (ni >= cnodes.length)
          throw $.ioore(ni);
        if (cnodes[ni].get$start() === true)
          t1 = 0;
        else {
          if (ni >= cnodes.length)
            throw $.ioore(ni);
          t1 = $.$$sub($.length(cnodes[ni].get$path().get$points()), 1);
        }
        t3.$indexSet(a, "pathIndex", t1);
        if (ni >= cnodes.length)
          throw $.ioore(ni);
        t3.$indexSet(a, "pathPoint", cnodes[ni].clone$0());
        if (ni >= cnodes.length)
          throw $.ioore(ni);
        t3.$indexSet(a, "pathMove", cnodes[ni].clone$0().sub$1(a).normalize$0().multiplyScalar$1(a.get$speed()));
      } else {
        for (i = cnodes.length - 1; i >= 0; --i)
          if (cnodes[i].get$house() === true) {
            $.any($.$$index($.tags, "house"), new $._anon9(a));
            $.switchTag(a, "traveler", "homebound");
            $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(a);
            return;
          }
        $.switchTag(a, "traveler", "wander");
        $.$$index($.$$index($.tagEvents, "wander"), "init").call$1(a);
        return;
      }
    else {
      $.switchTag(a, "traveler", "wander");
      $.$$index($.$$index($.tagEvents, "wander"), "init").call$1(a);
    }
  },
  call$1$bailout: function(state0, a, cnodes, i, t1) {
    switch (state0) {
      case 0:
        cnodes = $.world.getClosePathNodes$1(a);
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSArrayJSString(cnodes);
      case 2:
        var ni, t2;
        if (state0 === 2 || state0 === 0 && $.$$gt(t1.get$length(cnodes), 0) === true)
          switch (state0) {
            case 0:
            case 2:
              if (state0 === 0 && $.$$lt($.world.get$time(), 16) === true) {
                ni = $.toInt($.$$mul(t1.get$length(cnodes), $.get$random_number_generator().nextDouble$0()));
                t2 = $.getInterceptor$JSArray(a);
                t2.$indexSet(a, "path", t1.$index(cnodes, ni).get$path());
                t2.$indexSet(a, "pathDirection", t1.$index(cnodes, ni).get$start() === true ? 1 : -1);
                t2.$indexSet(a, "pathIndex", t1.$index(cnodes, ni).get$start() === true ? 0 : $.$$sub($.length(t1.$index(cnodes, ni).get$path().get$points()), 1));
                t2.$indexSet(a, "pathPoint", t1.$index(cnodes, ni).clone$0());
                t2.$indexSet(a, "pathMove", t1.$index(cnodes, ni).clone$0().sub$1(a).normalize$0().multiplyScalar$1(a.get$speed()));
              } else
                switch (state0) {
                  case 0:
                    i = $.$$sub(t1.get$length(cnodes), 1);
                  case 2:
                    state0 = 0;
                    for (; t2 = $.getInterceptor$JSNumber(i), t2.$ge(i, 0) === true; i = t2.$sub(i, 1))
                      if (t1.$index(cnodes, i).get$house() === true) {
                        $.any($.$$index($.tags, "house"), new $._anon9(a));
                        $.switchTag(a, "traveler", "homebound");
                        $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(a);
                        return;
                      }
                    $.switchTag(a, "traveler", "wander");
                    $.$$index($.$$index($.tagEvents, "wander"), "init").call$1(a);
                    return;
                }
          }
        else {
          $.switchTag(a, "traveler", "wander");
          $.$$index($.$$index($.tagEvents, "wander"), "init").call$1(a);
        }
    }
  }
};

$$._anon9 = {"": "Closure;a_5",
  call$1: function(house) {
    var t1 = this.a_5;
    if (house.distanceTo$1(t1) < 256) {
      $.$$indexSet(t1, "home", house);
      return true;
    }
    return false;
  }
};

$$.anon17 = {"": "Closure;",
  call$1: function(a) {
    var t1 = $.getInterceptor$JSArrayJSString(a);
    t1.$indexSet(a, "pathPoint", $.$$index(t1.$index(a, "path").get$points(), t1.$index(a, "pathIndex")));
    t1.$indexSet(a, "pathMove", t1.$index(a, "pathPoint").clone$0().sub$1(a).normalize$0().multiplyScalar$1(a.get$speed()));
    t1.add$1(a, t1.$index(a, "pathMove"));
  }
};

$$.anon18 = {"": "Closure;",
  call$1: function(a) {
    var t1, t2, d;
    t1 = $.getInterceptor$JSArrayJSString(a);
    $.add(a.get$velocity(), t1.$index(a, "pathMove"));
    if (t1.$index(a, "pathPoint").distanceTo$1(a) < 32) {
      t2 = t1.$index(a, "pathDirection");
      t1.$indexSet(a, "pathIndex", $.$$add(t1.$index(a, "pathIndex"), t2));
      if ($.$$lt(t1.$index(a, "pathIndex"), 0) === true || $.$$ge(t1.$index(a, "pathIndex"), $.length(t1.$index(a, "path").get$points())) === true)
        $.$$index($.$$index($.tagEvents, "traveler"), "init").call$1(a);
      else {
        t1.$indexSet(a, "pathPoint", $.$$index(t1.$index(a, "path").get$points(), t1.$index(a, "pathIndex")).clone$0());
        d = a.distanceTo$1(t1.$index(a, "pathPoint")) / 4;
        t2 = d / 2;
        t1.$index(a, "pathPoint").addTo$2($.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), d), t2), $.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), d), t2));
        t1.$indexSet(a, "pathMove", t1.$index(a, "pathPoint").clone$0().sub$1(a).normalize$0().multiplyScalar$1(a.get$speed()));
      }
    }
  }
};

$$.anon19 = {"": "Closure;",
  call$1: function(guard) {
    $.$$indexSet(guard, "positionOffset", $.Vec2$($.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 64), 32), $.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 64), 32)));
    $.world.setGuardPath$1(guard);
  }
};

$$.anon20 = {"": "Closure;",
  call$1: function(guard) {
    var zombies, t1, i, iter, t2, zom, t3;
    zombies = $.$$index($.tags, "zombie");
    if (typeof zombies !== "string" && (typeof zombies !== "object" || zombies === null || zombies.constructor !== Array && !zombies.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout(1, guard, zombies);
    t1 = $.getInterceptor$JSArrayJSString(zombies);
    if (zombies.length > 0) {
      i = $.$$sub($.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), zombies.length)), 1);
      if (typeof i !== "number")
        return this.call$1$bailout(2, guard, zombies, t1, i);
      iter = 0;
      for (; t1 = zombies.length, iter < t1 / 30 + 1; ++iter, ++i) {
        t2 = $.CONSTANT7.$mod(i, t1);
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= t1)
          throw $.ioore(t2);
        zom = zombies[t2];
        if (zom.distanceTo$1(guard) < 256) {
          $.switchTag(guard, "guard-wander", "guard-attack");
          $.$$indexSet(guard, "target", zom);
          return;
        }
      }
    }
    t1 = $.getInterceptor$JSArrayJSString(guard);
    $.add(guard.get$velocity(), t1.$index(guard, "destination").clone$0().sub$1(guard).normalize$0().multiplyScalar$1(guard.get$speed()));
    if (t1.$index(guard, "destination").distanceTo$1(guard) < 32) {
      t2 = t1.$index(guard, "pathDirection");
      t1.$indexSet(guard, "pathIndex", $.$$add(t1.$index(guard, "pathIndex"), t2));
      if ($.$$lt(t1.$index(guard, "pathIndex"), 0) === true || $.$$ge(t1.$index(guard, "pathIndex"), $.length(t1.$index(guard, "path").get$points())) === true) {
        t2 = $.rpatCount;
        t3 = $.getInterceptor$JSNumber(t2);
        $.rpatCount = t3.$add(t2, 1);
        if ($.$$eq(t3.$mod(t2, 2), 0) === true) {
          guard.set$currentFrame(0);
          t2 = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), 360));
          if (typeof t2 !== "number")
            throw $.iae(t2);
          t1.$indexSet(guard, "waitTime", 120 + t2);
          $.switchTag(guard, "guard-wander", "guard-wait");
          return;
        } else {
          $.world.setGuardPath$1(guard);
          return;
        }
      } else
        t1.$indexSet(guard, "destination", $.add($.$$index(t1.$index(guard, "path").get$points(), t1.$index(guard, "pathIndex")).clone$0(), t1.$index(guard, "positionOffset")));
    }
    if ($.$$lt(guard.get$health(), 100) === true)
      guard.set$health($.$$add(guard.get$health(), 0.005));
  },
  call$1$bailout: function(state0, guard, zombies, t1, i) {
    switch (state0) {
      case 0:
        zombies = $.$$index($.tags, "zombie");
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSArrayJSString(zombies);
      case 2:
        var iter, t2, zom, t3;
        if (state0 === 2 || state0 === 0 && $.$$gt(t1.get$length(zombies), 0) === true)
          switch (state0) {
            case 0:
              i = $.$$sub($.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), t1.get$length(zombies))), 1);
            case 2:
              state0 = 0;
              iter = 0;
              for (; iter < $.$$div(t1.get$length(zombies), 30) + 1; ++iter, i = t2.$add(i, 1)) {
                t2 = $.getInterceptor$JSNumber(i);
                zom = t1.$index(zombies, t2.$mod(i, t1.get$length(zombies)));
                if (zom.distanceTo$1(guard) < 256) {
                  $.switchTag(guard, "guard-wander", "guard-attack");
                  $.$$indexSet(guard, "target", zom);
                  return;
                }
              }
          }
        t1 = $.getInterceptor$JSArrayJSString(guard);
        $.add(guard.get$velocity(), t1.$index(guard, "destination").clone$0().sub$1(guard).normalize$0().multiplyScalar$1(guard.get$speed()));
        if (t1.$index(guard, "destination").distanceTo$1(guard) < 32) {
          t2 = t1.$index(guard, "pathDirection");
          t1.$indexSet(guard, "pathIndex", $.$$add(t1.$index(guard, "pathIndex"), t2));
          if ($.$$lt(t1.$index(guard, "pathIndex"), 0) === true || $.$$ge(t1.$index(guard, "pathIndex"), $.length(t1.$index(guard, "path").get$points())) === true) {
            t2 = $.rpatCount;
            t3 = $.getInterceptor$JSNumber(t2);
            $.rpatCount = t3.$add(t2, 1);
            if ($.$$eq(t3.$mod(t2, 2), 0) === true) {
              guard.set$currentFrame(0);
              t2 = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), 360));
              if (typeof t2 !== "number")
                throw $.iae(t2);
              t1.$indexSet(guard, "waitTime", 120 + t2);
              $.switchTag(guard, "guard-wander", "guard-wait");
              return;
            } else {
              $.world.setGuardPath$1(guard);
              return;
            }
          } else
            t1.$indexSet(guard, "destination", $.add($.$$index(t1.$index(guard, "path").get$points(), t1.$index(guard, "pathIndex")).clone$0(), t1.$index(guard, "positionOffset")));
        }
        if ($.$$lt(guard.get$health(), 100) === true)
          guard.set$health($.$$add(guard.get$health(), 0.005));
    }
  }
};

$$.anon21 = {"": "Closure;",
  call$1: function(guard) {
    var t1, t2, t3;
    t1 = $.getInterceptor$JSArrayJSString(guard);
    t2 = t1.$index(guard, "collideTime");
    t3 = $.getInterceptor$JSNumber(t2);
    t1.$indexSet(guard, "collideTime", t3.$add(t2, 1));
    if (t3.$gt(t2, 120) === true) {
      t1.$indexSet(guard, "collideTime", 0);
      guard.set$2(t1.$index(guard, "destination").get$x(), t1.$index(guard, "destination").get$y());
    }
  }
};

$$.anon22 = {"": "Closure;",
  call$1: function(guard) {
  }
};

$$.anon23 = {"": "Closure;",
  call$1: function(guard) {
    var zombies, t1, i, iter, t2, zom;
    zombies = $.$$index($.tags, "zombie");
    if (typeof zombies !== "string" && (typeof zombies !== "object" || zombies === null || zombies.constructor !== Array && !zombies.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout(1, guard, zombies);
    t1 = $.getInterceptor$JSArrayJSString(zombies);
    if (zombies.length > 0) {
      i = $.$$sub($.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), zombies.length)), 1);
      if (typeof i !== "number")
        return this.call$1$bailout(2, guard, zombies, t1, i);
      iter = 0;
      for (; t1 = zombies.length, iter < t1 / 30 + 1; ++iter, ++i) {
        t2 = $.CONSTANT7.$mod(i, t1);
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= t1)
          throw $.ioore(t2);
        zom = zombies[t2];
        if (zom.distanceTo$1(guard) < 256) {
          $.switchTag(guard, "guard-wait", "guard-attack");
          $.$$indexSet(guard, "target", zom);
          return;
        }
      }
    }
    t1 = $.getInterceptor$JSArrayJSString(guard);
    t1.$indexSet(guard, "waitTime", $.$$sub(t1.$index(guard, "waitTime"), 1));
    if ($.$$le(t1.$index(guard, "waitTime"), 0) === true) {
      $.world.setGuardPath$1(guard);
      $.switchTag(guard, "guard-wait", "guard-wander");
    }
  },
  call$1$bailout: function(state0, guard, zombies, t1, i) {
    switch (state0) {
      case 0:
        zombies = $.$$index($.tags, "zombie");
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSArrayJSString(zombies);
      case 2:
        var iter, t2, zom;
        if (state0 === 2 || state0 === 0 && $.$$gt(t1.get$length(zombies), 0) === true)
          switch (state0) {
            case 0:
              i = $.$$sub($.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), t1.get$length(zombies))), 1);
            case 2:
              state0 = 0;
              iter = 0;
              for (; iter < $.$$div(t1.get$length(zombies), 30) + 1; ++iter, i = t2.$add(i, 1)) {
                t2 = $.getInterceptor$JSNumber(i);
                zom = t1.$index(zombies, t2.$mod(i, t1.get$length(zombies)));
                if (zom.distanceTo$1(guard) < 256) {
                  $.switchTag(guard, "guard-wait", "guard-attack");
                  $.$$indexSet(guard, "target", zom);
                  return;
                }
              }
          }
        t1 = $.getInterceptor$JSArrayJSString(guard);
        t1.$indexSet(guard, "waitTime", $.$$sub(t1.$index(guard, "waitTime"), 1));
        if ($.$$le(t1.$index(guard, "waitTime"), 0) === true) {
          $.world.setGuardPath$1(guard);
          $.switchTag(guard, "guard-wait", "guard-wander");
        }
    }
  }
};

$$.anon24 = {"": "Closure;",
  call$1: function(guard) {
  }
};

$$.anon25 = {"": "Closure;",
  call$1: function(guard) {
    var zom = $.$$index(guard, "target");
    if (!(zom == null) && zom.get$alive() === true)
      if ($.CONSTANT11.$gt(guard.distanceTo$1(zom), guard.get$attackRadius())) {
        $.add(guard.get$velocity(), zom.clone$0().sub$1(guard).normalize$0().multiplyScalar$1(guard.get$speed()));
        guard.set$attacking(false);
      } else {
        guard.set$attacking(true);
        guard.set$attackDirection(zom.clone$0().sub$1(guard).normalize$0());
      }
    else {
      guard.set$attacking(false);
      $.switchTag(guard, "guard-attack", "guard-wander");
    }
  }
};

$$.anon26 = {"": "Closure;",
  call$1: function(guard) {
  }
};

$$.anon27 = {"": "Closure;",
  call$1: function(guard) {
    var t1;
    $.$$indexSet(guard, "collideTime", 0);
    guard.set$armor(0.25);
    t1 = $.$$mul($.get$random_number_generator().nextDouble$0(), 1.2);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    guard.set$speed(0.8 + t1);
    $.world.equipWeapon$2(guard, $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), $.length($.world.get$weaponName()))));
  }
};

$$.anon28 = {"": "Closure;",
  call$1: function(guard) {
    $.world.spawnGuard$0();
  }
};

$$.anon29 = {"": "Closure;",
  call$1: function(avatar) {
    var t1 = $.getInterceptor$JSArray(avatar);
    t1.$indexSet(avatar, "collisionCount", 0);
    t1.$indexSet(avatar, "homeboundDirection", t1.$index(avatar, "home").clone$0().sub$1(avatar).normalize$0().multiplyScalar$1(avatar.get$speed()));
  }
};

$$.anon30 = {"": "Closure;",
  call$1: function(avatar) {
    var t1, t2, t3, t4, d;
    t1 = {};
    t2 = $.getInterceptor$JSArrayJSString(avatar);
    $.add(avatar.get$velocity(), t2.$index(avatar, "homeboundDirection"));
    t3 = $.rpatCount;
    t4 = $.getInterceptor$JSNumber(t3);
    $.rpatCount = t4.$add(t3, 1);
    if ($.$$eq(t4.$mod(t3, 8), 0) === true) {
      d = t2.$index(avatar, "home").distanceTo$1(avatar);
      if (d > 256) {
        t1.found_0 = false;
        $.any($.$$index($.tags, "house"), new $._anon8(t1, avatar));
        if (t1.found_0 === true) {
          t2.$indexSet(avatar, "collisionCount", 0);
          t2.$indexSet(avatar, "homeboundDirection", t2.$index(avatar, "home").clone$0().sub$1(avatar).normalize$0().multiplyScalar$1(avatar.get$speed()));
        } else {
          $.switchTag(avatar, "homebound", "lost");
          $.add(avatar.get$tags(), "wander");
          $.addTag(avatar, "wander");
        }
      } else if (d < 32) {
        avatar.markForRemoval$0();
        t1 = $.world;
        t1.set$awakePopulation($.$$sub(t1.get$awakePopulation(), 1));
      }
    }
  }
};

$$._anon8 = {"": "Closure;box_0,avatar_6",
  call$1: function(house) {
    var t1 = this.avatar_6;
    if (house.distanceTo$1(t1) < 256) {
      $.$$indexSet(t1, "home", house);
      this.box_0.found_0 = true;
      return true;
    }
    return false;
  }
};

$$.anon31 = {"": "Closure;",
  call$1: function(avatar) {
    var t1 = $.getInterceptor$JSArrayJSString(avatar);
    t1.$indexSet(avatar, "collisionCount", $.$$add(t1.$index(avatar, "collisionCount"), 1));
    if ($.$$gt(t1.$index(avatar, "collisionCount"), 120) === true) {
      $.switchTag(avatar, "homebound", "lost");
      $.add(avatar.get$tags(), "wander");
      $.addTag(avatar, "wander");
    } else if (avatar.distanceTo$1(t1.$index(avatar, "home")) < 256) {
      avatar.markForRemoval$0();
      t1 = $.world;
      t1.set$awakePopulation($.$$sub(t1.get$awakePopulation(), 1));
    }
  }
};

$$.anon32 = {"": "Closure;",
  call$1: function(avatar) {
    var t1, t2, i, iter, index;
    if (avatar.get$speaking() === true) {
      avatar.set$sayTime($.$$sub(avatar.get$sayTime(), 1));
      if ($.$$lt(avatar.get$sayTime(), 0) === true)
        avatar.set$speaking(false);
    }
    t1 = $.rpatCount;
    t2 = $.getInterceptor$JSNumber(t1);
    $.rpatCount = t2.$add(t1, 1);
    if ($.$$eq(t2.$mod(t1, 8), 0) === true && avatar.distanceTo$1($.world.get$player()) < 64) {
      t1 = $.get$random_number_generator().nextDouble$0();
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t2 = $.CONSTANT7.toInt$0(3 * t1);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= $.CONSTANT38.length)
        throw $.ioore(t2);
      avatar.say$2($.CONSTANT38[t2], 120);
      $.switchTag(avatar, "lost", "following");
      avatar.removeTag$1("wander");
      $.rmTag(avatar, "wander");
    } else {
      i = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), $.length($.$$index($.tags, "house"))));
      if (typeof i !== "number")
        return this.call$1$bailout(1, avatar, i);
      t2 = $.getInterceptor$JSArray(avatar);
      iter = 0;
      for (; iter < 4; ++iter, ++i) {
        t1 = $.length($.$$index($.tags, "house"));
        if (typeof t1 !== "number")
          throw $.iae(t1);
        index = $.CONSTANT7.$mod(i, t1);
        if ($.$$index($.$$index($.tags, "house"), index).distanceTo$1(avatar) < 256) {
          t2.$indexSet(avatar, "home", $.$$index($.$$index($.tags, "house"), index));
          $.switchTag(avatar, "lost", "homebound");
          $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(avatar);
          avatar.removeTag$1("wander");
          $.rmTag(avatar, "wander");
          iter = 9999;
        }
      }
    }
  },
  call$1$bailout: function(state0, avatar, i) {
    switch (state0) {
      case 0:
        if (avatar.get$speaking() === true) {
          avatar.set$sayTime($.$$sub(avatar.get$sayTime(), 1));
          if ($.$$lt(avatar.get$sayTime(), 0) === true)
            avatar.set$speaking(false);
        }
        t1 = $.rpatCount;
        t2 = $.getInterceptor$JSNumber(t1);
        $.rpatCount = t2.$add(t1, 1);
      case 1:
        var t1, t2, iter, index;
        if (state0 === 0 && $.$$eq(t2.$mod(t1, 8), 0) === true && avatar.distanceTo$1($.world.get$player()) < 64) {
          t1 = $.get$random_number_generator().nextDouble$0();
          if (typeof t1 !== "number")
            throw $.iae(t1);
          t2 = $.CONSTANT7.toInt$0(3 * t1);
          if (t2 !== (t2 | 0))
            throw $.iae(t2);
          if (t2 < 0 || t2 >= $.CONSTANT38.length)
            throw $.ioore(t2);
          avatar.say$2($.CONSTANT38[t2], 120);
          $.switchTag(avatar, "lost", "following");
          avatar.removeTag$1("wander");
          $.rmTag(avatar, "wander");
        } else
          switch (state0) {
            case 0:
              i = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), $.length($.$$index($.tags, "house"))));
            case 1:
              state0 = 0;
              t2 = $.getInterceptor$JSArray(avatar);
              iter = 0;
              for (; iter < 4; ++iter, i = t1.$add(i, 1)) {
                t1 = $.getInterceptor$JSNumber(i);
                index = t1.$mod(i, $.length($.$$index($.tags, "house")));
                if ($.$$index($.$$index($.tags, "house"), index).distanceTo$1(avatar) < 256) {
                  t2.$indexSet(avatar, "home", $.$$index($.$$index($.tags, "house"), index));
                  $.switchTag(avatar, "lost", "homebound");
                  $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(avatar);
                  avatar.removeTag$1("wander");
                  $.rmTag(avatar, "wander");
                  iter = 9999;
                }
              }
          }
    }
  }
};

$$.anon33 = {"": "Closure;",
  call$1: function(avatar) {
    $.$$indexSet(avatar, "deadTime", 0);
    avatar.set$speaking(false);
  }
};

$$.anon34 = {"": "Closure;",
  call$1: function(avatar) {
    var t1 = $.getInterceptor$JSArrayJSString(avatar);
    t1.$indexSet(avatar, "deadTime", $.$$add(t1.$index(avatar, "deadTime"), 1));
    if ($.$$gt(t1.$index(avatar, "deadTime"), 600) === true) {
      avatar.fireTagEvent$1("decomposed");
      avatar.markForRemoval$0();
    }
  }
};

$$.anon35 = {"": "Closure;",
  call$1: function(avatar) {
    var i, t2, iter, t1, index, t3;
    if (avatar.get$speaking() === true) {
      avatar.set$sayTime($.$$sub(avatar.get$sayTime(), 1));
      if ($.$$lt(avatar.get$sayTime(), 0) === true)
        avatar.set$speaking(false);
    }
    if (avatar.distanceTo$1($.world.get$player()) > 64)
      $.add(avatar.get$velocity(), $.add($.world.get$player().clone$0(), $.$$index(avatar, "followOffset")).sub$1(avatar).normalize$0().multiplyScalar$1(2));
    i = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), $.length($.$$index($.tags, "house"))));
    if (typeof i !== "number")
      return this.call$1$bailout(1, avatar, i);
    t2 = $.getInterceptor$JSArray(avatar);
    iter = 0;
    for (; iter < 4; ++iter, ++i) {
      t1 = $.length($.$$index($.tags, "house"));
      if (typeof t1 !== "number")
        throw $.iae(t1);
      index = $.CONSTANT7.$mod(i, t1);
      if ($.$$index($.$$index($.tags, "house"), index).distanceTo$1(avatar) < 256) {
        t1 = $.rpatCount;
        t3 = $.getInterceptor$JSNumber(t1);
        $.rpatCount = t3.$add(t1, 1);
        avatar.say$2($.$$eq(t3.$mod(t1, 2), 0) === true ? "Thank you!" : "Thanks!", 100);
        t2.$indexSet(avatar, "home", $.$$index($.$$index($.tags, "house"), index));
        $.world.giveCoin$2(avatar, $.toInt($.$$mul($.$$add($.$$mul($.get$random_number_generator().nextDouble$0(), 20), 5), $.world.get$dayCount())));
        $.niceFactor = $.$$add($.niceFactor, 0.05);
        t1 = $.world;
        t1.set$saved($.$$add(t1.get$saved(), 1));
        $.switchTag(avatar, "following", "homebound");
        $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(avatar);
        iter = 9999;
      }
    }
  },
  call$1$bailout: function(state0, avatar, i) {
    var t2, iter, t1, index, t3, t4;
    t2 = $.getInterceptor$JSArray(avatar);
    iter = 0;
    for (; iter < 4; ++iter, i = t1.$add(i, 1)) {
      t1 = $.getInterceptor$JSNumber(i);
      index = t1.$mod(i, $.length($.$$index($.tags, "house")));
      if ($.$$index($.$$index($.tags, "house"), index).distanceTo$1(avatar) < 256) {
        t3 = $.rpatCount;
        t4 = $.getInterceptor$JSNumber(t3);
        $.rpatCount = t4.$add(t3, 1);
        avatar.say$2($.$$eq(t4.$mod(t3, 2), 0) === true ? "Thank you!" : "Thanks!", 100);
        t2.$indexSet(avatar, "home", $.$$index($.$$index($.tags, "house"), index));
        $.world.giveCoin$2(avatar, $.toInt($.$$mul($.$$add($.$$mul($.get$random_number_generator().nextDouble$0(), 20), 5), $.world.get$dayCount())));
        $.niceFactor = $.$$add($.niceFactor, 0.05);
        t3 = $.world;
        t3.set$saved($.$$add(t3.get$saved(), 1));
        $.switchTag(avatar, "following", "homebound");
        $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(avatar);
        iter = 9999;
      }
    }
  }
};

$$.anon36 = {"": "Closure;",
  call$1: function(avatar) {
    $.$$indexSet(avatar.get$prop(), "destination", avatar.clone$0().addTo$2($.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 100), 50), $.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 100), 50)));
  }
};

$$.anon37 = {"": "Closure;",
  call$1: function(avatar) {
    $.$$indexSet(avatar.get$prop(), "destination", avatar.clone$0());
    $.$$indexSet(avatar.get$prop(), "waitTime", 0);
  }
};

$$.anon38 = {"": "Closure;",
  call$1: function(avatar) {
    var t1, t2, destination;
    if ($.$$gt($.$$index(avatar.get$prop(), "waitTime"), 0) === true) {
      t1 = avatar.get$prop();
      t2 = $.getInterceptor$JSArrayJSString(t1);
      t2.$indexSet(t1, "waitTime", $.$$sub(t2.$index(t1, "waitTime"), 1));
    } else if ($.$$index(avatar.get$prop(), "destination").distanceTo$1(avatar) > 2) {
      destination = $.$$index(avatar.get$prop(), "destination");
      $.add(avatar.get$velocity(), destination.clone$0().sub$1(avatar).normalize$0().multiplyScalar$1(avatar.get$speed()));
    } else {
      t1 = $.$$lt($.get$random_number_generator().nextDouble$0(), 0.75);
      t2 = avatar.get$prop();
      if (t1 === true)
        $.$$indexSet(t2, "destination", avatar.clone$0().addTo$2($.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 400), 200), $.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 400), 200)));
      else {
        $.$$indexSet(t2, "destination", avatar.clone$0());
        $.$$indexSet(avatar.get$prop(), "waitTime", $.$$mul($.get$random_number_generator().nextDouble$0(), 200));
        avatar.set$currentFrame(0);
        avatar.get$velocity().zero$0();
      }
    }
  }
};

$$.anon39 = {"": "Closure;",
  call$1: function(avatar) {
    avatar.set$sayTime($.$$mul($.get$random_number_generator().nextDouble$0(), 500));
  }
};

$$.anon40 = {"": "Closure;",
  call$1: function(avatar) {
    if ($.$$lt(avatar.get$sayTime(), 0) === true) {
      avatar.set$speaking(false);
      $.forEach($.$$index($.tags, "player"), new $._anon7(avatar));
      avatar.set$sayTime($.$$mul($.get$random_number_generator().nextDouble$0(), 500));
    } else
      avatar.set$sayTime($.$$sub(avatar.get$sayTime(), 1));
  }
};

$$._anon7 = {"": "Closure;avatar_7",
  call$1: function(player) {
    var t1, t2;
    t1 = this.avatar_7;
    if (player.distanceTo$1(t1) < 80) {
      t2 = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), 5));
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= $.CONSTANT37.length)
        throw $.ioore(t2);
      t1.say$1($.CONSTANT37[t2]);
    }
  }
};

$$.anon41 = {"": "Closure;",
  call$1: function(avatar) {
    avatar.set$sayTime($.$$mul($.get$random_number_generator().nextDouble$0(), 500));
  }
};

$$.anon42 = {"": "Closure;",
  call$1: function(avatar) {
    if ($.$$lt(avatar.get$sayTime(), 0) === true) {
      avatar.set$speaking(false);
      $.forEach($.$$index($.tags, "player"), new $._anon6(avatar));
      avatar.set$sayTime($.$$mul($.get$random_number_generator().nextDouble$0(), 500));
    } else
      avatar.set$sayTime($.$$sub(avatar.get$sayTime(), 1));
  }
};

$$._anon6 = {"": "Closure;avatar_8",
  call$1: function(player) {
    var t1, t2;
    t1 = this.avatar_8;
    if (player.distanceTo$1(t1) < 80) {
      t2 = $.toInt($.$$mul($.get$random_number_generator().nextDouble$0(), 5));
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= $.CONSTANT36.length)
        throw $.ioore(t2);
      t1.say$1($.CONSTANT36[t2]);
    }
  }
};

$$.anon43 = {"": "Closure;",
  call$1: function(avatar) {
    var t1, t2;
    if ($.$$lt(avatar.get$sayTime(), 0) === true) {
      avatar.set$speaking(false);
      t1 = $.rpatCount;
      t2 = $.getInterceptor$JSNumber(t1);
      $.rpatCount = t2.$add(t1, 1);
      if ($.$$eq(t2.$mod(t1, 2), 0) === true) {
        t1 = $.getInterceptor$JSArrayJSString(avatar);
        avatar.say$1($.$$index(t1.$index(avatar, "calls"), $.toInt($.$$mul($.length(t1.$index(avatar, "calls")), $.get$random_number_generator().nextDouble$0()))));
      }
      t1 = $.$$mul($.get$random_number_generator().nextDouble$0(), 200);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      avatar.set$sayTime(100 + t1);
    } else
      avatar.set$sayTime($.$$sub(avatar.get$sayTime(), 1));
    if ($.world.get$player().distanceTo$1(avatar) < 128 && $.$$eq($.length($.notifications), 0) === true)
      $.notify("Press Space to Interact");
  }
};

$$.anon44 = {"": "Closure;",
  call$1: function(arrow) {
    var t1, t2, t3;
    t1 = $.getInterceptor$JSArrayJSString(arrow);
    t1.add$1(arrow, t1.$index(arrow, "direction").divideScalar$1(1.5));
    if ($.$$gt($.length($.world.damageBubble$4(arrow, 32, t1.$index(arrow, "damage"), t1.$index(arrow, "direction").clone$0().normalize$0())), 0) !== true)
      if ($.world.collisionAtVec2$1(arrow) !== true) {
        t1 = arrow.get$distance();
        t2 = $.getInterceptor$JSNumber(t1);
        arrow.set$distance(t2.$add(t1, 1));
        t3 = t2.$gt(t1, 12) === true;
        t1 = t3;
      } else
        t1 = true;
    else
      t1 = true;
    if (t1)
      arrow.remove$0();
  }
};

$$.anon45 = {"": "Closure;",
  call$1: function(zom) {
    var t1 = $.get$random_number_generator().nextDouble$0();
    if (typeof t1 !== "number")
      throw $.iae(t1);
    zom.set$speed(0.5 + t1);
  }
};

$$.anon46 = {"": "Closure;",
  call$1: function(a) {
    var t1;
    if ($.world.get$player().distanceTo$1(a) < 256 && $.world.get$player().get$attacking() === true) {
      t1 = $.world;
      t1.set$zombies_killed($.$$add(t1.get$zombies_killed(), 1));
      t1 = $.world;
      t1.set$zombie_out($.$$sub(t1.get$zombie_out(), 1));
      $.world.addMultiplier$0();
      $.world.giveCoin$2(a, $.toInt($.$$mul($.$$add($.$$mul($.get$random_number_generator().nextDouble$0(), 7), 3), 1 + $.$$div($.world.get$dayCount(), 4))));
    }
  }
};

$$.anon47 = {"": "Closure;",
  call$1: function(zom) {
    var t1;
    $.$$indexSet(zom, "originalPosition", zom.clone$0());
    t1 = $.world;
    zom.set$damage(t1.get$ZOMBIE_DAMAGE());
    zom.set$armor(t1.get$ZOMBIE_ARMOR());
    $.$$index($.$$index($.tagEvents, "wander"), "init").call$1(zom);
  }
};

$$.anon48 = {"": "Closure;",
  call$1: function(zom) {
    var t1, t2, destination;
    if ($.$$gt($.$$index(zom.get$prop(), "waitTime"), 0) === true) {
      t1 = zom.get$prop();
      t2 = $.getInterceptor$JSArrayJSString(t1);
      t2.$indexSet(t1, "waitTime", $.$$sub(t2.$index(t1, "waitTime"), 1));
    } else if ($.$$index(zom.get$prop(), "destination").distanceTo$1(zom) > 2) {
      destination = $.$$index(zom.get$prop(), "destination");
      $.add(zom.get$velocity(), destination.clone$0().sub$1(zom).normalize$0().multiplyScalar$1($.$$mul(zom.get$speed(), $.world.get$ZOMBIE_SPEED())));
    } else {
      t1 = $.$$lt($.get$random_number_generator().nextDouble$0(), 0.75);
      t2 = zom.get$prop();
      if (t1 === true)
        $.$$indexSet(t2, "destination", zom.clone$0().addTo$2($.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 400), 200), $.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 400), 200)));
      else {
        $.$$indexSet(t2, "destination", zom.clone$0());
        $.$$indexSet(zom.get$prop(), "waitTime", $.$$mul($.get$random_number_generator().nextDouble$0(), 200));
        zom.set$currentFrame(0);
        zom.get$velocity().zero$0();
      }
    }
    $.any($.$$index($.tags, "friendly"), new $._anon5(zom));
  }
};

$$._anon5 = {"": "Closure;zom_9",
  call$1: function(avatar) {
    var t1;
    if (avatar.get$alive() === true && $.CONSTANT11.$lt(avatar.distanceTo$1(this.zom_9), $.world.get$AGRO_DISTANCE())) {
      t1 = this.zom_9;
      $.rmTag(t1, "hostile-wander");
      t1.removeTag$1("hostile-wander");
      $.addTag(t1, "hostile");
      $.add(t1.get$tags(), "hostile");
      $.$$indexSet(t1, "target", avatar);
      return true;
    }
    return false;
  }
};

$$.anon49 = {"": "Closure;",
  call$1: function(zom) {
    $.$$indexSet(zom.get$prop(), "destination", zom.clone$0().addTo$2($.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 100), 50), $.$$sub($.$$mul($.get$random_number_generator().nextDouble$0(), 100), 50)));
  }
};

$$.anon50 = {"": "Closure;",
  call$1: function(zom) {
    $.any($.$$index($.tags, "friendly"), new $._anon4(zom));
  }
};

$$._anon4 = {"": "Closure;zom_10",
  call$1: function(avatar) {
    var t1;
    if (avatar.get$alive() === true && avatar.get$attacking() === true && $.CONSTANT11.$lt(avatar.distanceTo$1(this.zom_10), $.$$mul($.world.get$AGRO_DISTANCE(), 2))) {
      t1 = this.zom_10;
      $.rmTag(t1, "hostile-wander");
      t1.removeTag$1("hostile-wander");
      $.addTag(t1, "hostile");
      $.add(t1.get$tags(), "hostile");
      $.$$indexSet(t1, "target", avatar);
      return true;
    }
    return false;
  }
};

$$.anon51 = {"": "Closure;",
  call$1: function(zom) {
    var t1, target, distance;
    t1 = $.getInterceptor$JSArrayJSString(zom);
    if (!(t1.$index(zom, "target") == null) && t1.$index(zom, "target").get$alive() === true && t1.$index(zom, "target").get$markedForRemoval() !== true) {
      target = t1.$index(zom, "target");
      distance = target.distanceTo$1(zom);
      if (distance < 32) {
        zom.set$attacking(true);
        zom.set$attackDirection(target.clone$0().sub$1(zom).normalize$0());
      } else if ($.CONSTANT11.$lt(distance, $.$$mul($.world.get$AGRO_DISTANCE(), 2))) {
        zom.set$attacking(false);
        zom.get$velocity().sub$1(zom.clone$0().sub$1(target).normalize$0().multiplyScalar$1($.$$mul($.world.get$ZOMBIE_SPEED(), zom.get$speed())));
      } else {
        $.switchTag(zom, "hostile", "hostile-wander");
        t1.$indexSet(zom, "target", null);
      }
    } else
      $.switchTag(zom, "hostile", "hostile-wander");
  }
};

$$.anon52 = {"": "Closure;",
  call$1: function(zom) {
    var t1 = $.getInterceptor$JSArrayJSString(zom);
    if (t1.$index(zom, "target").get$alive() !== true) {
      zom.removeTag$1("hostile");
      $.add(zom.get$tags(), "hostile-wander");
      $.addTag(zom, "hostile-wander");
      $.rmTag(zom, "hostile");
      t1.$indexSet(zom, "target", null);
      zom.set$attacking(false);
    }
  }
};

$$.anon53 = {"": "Closure;",
  call$1: function(zom) {
    $.any($.$$index($.tags, "friendly"), new $._anon3(zom));
  }
};

$$._anon3 = {"": "Closure;zom_11",
  call$1: function(friend) {
    if (friend.get$attacking() === true && friend.distanceTo$1(this.zom_11) < 96) {
      $.$$indexSet(this.zom_11, "target", friend);
      return true;
    }
    return false;
  }
};

$$.anon54 = {"": "Closure;",
  call$1: function(zom) {
    var t1 = $.getInterceptor$JSArrayJSString(zom);
    t1.$indexSet(zom, "nestDirection", t1.$index(zom, "originalPosition").clone$0().sub$1(zom).normalize$0());
    t1.$indexSet(zom, "collisionCount", 0);
  }
};

$$.anon55 = {"": "Closure;",
  call$1: function(zom) {
    var t1, t2, t3;
    t1 = $.getInterceptor$JSArrayJSString(zom);
    $.add(zom.get$velocity(), t1.$index(zom, "nestDirection"));
    t2 = $.rpatCount;
    t3 = $.getInterceptor$JSNumber(t2);
    $.rpatCount = t3.$add(t2, 1);
    if ($.$$eq(t3.$mod(t2, 4), 0) === true && zom.distanceTo$1(t1.$index(zom, "originalPosition")) < 32) {
      t1 = $.world;
      t1.set$zombie_out($.$$sub(t1.get$zombie_out(), 1));
      zom.markForRemoval$0();
    }
  }
};

$$.anon56 = {"": "Closure;",
  call$1: function(zom) {
    var t1 = $.getInterceptor$JSArrayJSString(zom);
    t1.$indexSet(zom, "collisionCount", $.$$add(t1.$index(zom, "collisionCount"), 1));
    if ($.$$gt(t1.$index(zom, "collisionCount"), 120) === true) {
      t1 = $.world;
      t1.set$zombie_out($.$$sub(t1.get$zombie_out(), 1));
      zom.markForRemoval$0();
    }
  }
};

$$.anon57 = {"": "Closure;",
  call$1: function(ftext) {
    ftext.set$time($.$$add(ftext.get$time(), 1));
    ftext.set$y($.$$sub(ftext.get$y(), 0.5));
    if ($.$$gt(ftext.get$time(), 150) === true)
      ftext.remove$0();
  }
};

$$.anon58 = {"": "Closure;",
  call$1: function(i) {
    var t1, t2;
    for (t1 = $.iterator($.tagEvents.get$keys()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if ($.$$index($.tagEvents, t2).containsKey$1(i) !== true)
        $.$$indexSet($.$$index($.tagEvents, t2), i, new $._anon2());
    }
  }
};

$$._anon2 = {"": "Closure;",
  call$1: function(a) {
  },
  $is_TimerCallback1: true
};

$$.anon59 = {"": "Closure;this_12",
  call$1: function(data) {
    $.world.load$2(data, new $._anon1(this.this_12));
  },
  $is_TimerCallback1: true
};

$$._anon1 = {"": "Closure;this_13",
  call$0: function() {
    this.this_13.loadFinish$0();
  },
  $is_TimerCallback0: true
};

$$.web_load_anon = {"": "Closure;callback_0,req_1",
  call$1: function(e) {
    var t1 = this.req_1;
    if ($.$$eq(t1.get$readyState(), 4) === true && $.$$eq(t1.get$status(), 200) === true)
      this.callback_0.call$1(t1.get$responseText());
  },
  $is_TimerCallback1: true
};

$$.anon60 = {"": "Closure;this_1",
  call$1: function(e) {
    var t1, t2, i;
    t1 = e.get$keyCode();
    t2 = this.this_1;
    $.$$indexSet(t2.get$keyList(), t1, 1);
    i = $.$$sub($.length(t2.get$onKeyPress()), 1);
    if (typeof i !== "number")
      return this.call$1$bailout(1, e, i, t2);
    for (; i >= 0; --i)
      if ($.$$eq($.$$index(t2.get$onKeyPress(), i).call$1(e), true) === true)
        return;
  },
  call$1$bailout: function(state0, e, i, t2) {
    var t1;
    for (; t1 = $.getInterceptor$JSNumber(i), t1.$ge(i, 0) === true; i = t1.$sub(i, 1))
      if ($.$$eq($.$$index(t2.get$onKeyPress(), i).call$1(e), true) === true)
        return;
  },
  $is_TimerCallback1: true
};

$$.anon61 = {"": "Closure;this_2",
  call$1: function(e) {
    var t1 = e.get$keyCode();
    $.$$indexSet(this.this_2.get$keyList(), t1, 0);
  },
  $is_TimerCallback1: true
};

$$.anon62 = {"": "Closure;box_0,this_3",
  call$1: function(e) {
    var t1, i;
    if (this.box_0.touches_0 == null) {
      t1 = this.this_3;
      t1.mouseDownAt$2($.$$div($.$$sub(e.get$pageX(), $.CANVAS_OFFSETX), $.RESOLUTION), $.$$div($.$$sub(e.get$pageY(), $.CANVAS_OFFSETY), $.RESOLUTION));
      i = $.$$sub($.length(t1.get$onClick()), 1);
      if (typeof i !== "number")
        return this.call$1$bailout(1, e, t1, i);
      for (; i >= 0; --i)
        if ($.$$eq($.$$index(t1.get$onClick(), i).call$1(e), true) === true)
          $.removeRange(t1.get$onClick(), i, 1);
    }
  },
  call$1$bailout: function(state0, e, t1, i) {
    switch (state0) {
      case 0:
      case 1:
        var t2;
        if (state0 === 1 || state0 === 0 && this.box_0.touches_0 == null)
          switch (state0) {
            case 0:
              t1 = this.this_3;
              t1.mouseDownAt$2($.$$div($.$$sub(e.get$pageX(), $.CANVAS_OFFSETX), $.RESOLUTION), $.$$div($.$$sub(e.get$pageY(), $.CANVAS_OFFSETY), $.RESOLUTION));
              i = $.$$sub($.length(t1.get$onClick()), 1);
            case 1:
              state0 = 0;
              for (; t2 = $.getInterceptor$JSNumber(i), t2.$ge(i, 0) === true; i = t2.$sub(i, 1))
                if ($.$$eq($.$$index(t1.get$onClick(), i).call$1(e), true) === true)
                  $.removeRange(t1.get$onClick(), i, 1);
          }
    }
  },
  $is_TimerCallback1: true
};

$$.anon63 = {"": "Closure;box_0,this_4",
  call$1: function(e) {
    if (this.box_0.touches_0 == null)
      this.this_4.mouseUpAt$2($.$$div($.$$sub(e.get$pageX(), $.CANVAS_OFFSETX), $.RESOLUTION), $.$$div($.$$sub(e.get$pageY(), $.CANVAS_OFFSETY), $.RESOLUTION));
  },
  $is_TimerCallback1: true
};

$$.anon64 = {"": "Closure;box_0,this_5",
  call$1: function(e) {
    if (this.box_0.touches_0 == null)
      this.this_5.mouseAt$2($.$$div($.$$sub(e.get$pageX(), $.CANVAS_OFFSETX), $.RESOLUTION), $.$$div($.$$sub(e.get$pageY(), $.CANVAS_OFFSETY), $.RESOLUTION));
  },
  $is_TimerCallback1: true
};

$$.anon65 = {"": "Closure;this_6",
  call$1: function(e) {
    $.forEach(e.get$changedTouches(), new $._anon0(this.this_6));
    e.preventDefault$0();
  },
  $is_TimerCallback1: true
};

$$._anon0 = {"": "Closure;this_7",
  call$1: function(touch) {
    this.this_7.mouseDownAt$2($.$$div($.$$sub(touch.get$pageX(), $.CANVAS_OFFSETX), $.RESOLUTION), $.$$div($.$$sub(touch.get$pageY(), $.CANVAS_OFFSETY), $.RESOLUTION));
  },
  $is_TimerCallback1: true
};

$$.anon66 = {"": "Closure;box_0,this_8",
  call$1: function(e) {
    var touches, t1;
    touches = e.get$touches();
    t1 = this.box_0;
    t1.touches_0 = touches;
    this.this_8.mouseAt$2($.$$div($.$$sub($.$$index(t1.touches_0, 0).get$pageX(), $.CANVAS_OFFSETX), $.RESOLUTION), $.$$div($.$$sub($.$$index(t1.touches_0, 0).get$pageY(), $.CANVAS_OFFSETY), $.RESOLUTION));
    e.preventDefault$0();
  },
  $is_TimerCallback1: true
};

$$.anon67 = {"": "Closure;",
  call$1: function(e) {
    e.preventDefault$0();
  },
  $is_TimerCallback1: true
};

$$.ConstantMap_forEach_anon = {"": "Closure;this_0,f_1",
  call$1: function(key) {
    return this.f_1.call$2(key, $.$$index(this.this_0, key));
  }
};

$$.anon68 = {"": "Closure;this_0",
  call$1: function(soundName) {
    $.$$indexSet(this.this_0.get$audioElements(), soundName, document.query$1("#audio_" + $.S(soundName)));
  }
};

$$.World_load_anon = {"": "Closure;this_0,callback_1",
  call$1: function(imgs) {
    var t1 = this.this_0;
    t1.set$itemImages(imgs);
    $.Primitives_printString("items loaded");
    $.res_loadSplitImage("ui.png", new $.World_load__anon(t1, this.callback_1), 32, 32);
  }
};

$$.World_load__anon = {"": "Closure;this_2,callback_3",
  call$1: function(ui_imgs) {
    var t1 = this.this_2;
    t1.set$uiImages(ui_imgs);
    $.res_loadImage("controls.png", new $.World_load___anon(t1, this.callback_3));
  }
};

$$.World_load___anon = {"": "Closure;this_4,callback_5",
  call$1: function(img) {
    var t1 = this.this_4;
    t1.set$controlsImage(img);
    $.Primitives_printString("Loading 'test' map");
    t1.loadMap$2("test", this.callback_5);
  }
};

$$.res_loadSplitImage_anon = {"": "Closure;callback_0,px_1,py_2,img_3",
  call$1: function(e) {
    $.HiddenCanvas_split(this.img_3, this.px_1, this.py_2, this.callback_0);
  },
  $is_TimerCallback1: true
};

$$.HiddenCanvas_split_addToList = {"": "Closure;box_0,callback_1,hc_2,list_3",
  call$1: function(n) {
    this.hc_2.getImage$1(new $.HiddenCanvas_split_addToList_anon(this.box_0, this.callback_1, this.list_3, n));
  }
};

$$.HiddenCanvas_split_addToList_anon = {"": "Closure;box_0,callback_4,list_5,n_6",
  call$1: function(img) {
    var t1, t2;
    t1 = this.list_5;
    $.$$indexSet(t1, this.n_6, img);
    t2 = this.box_0;
    t2.amt_0 = $.$$add(t2.amt_0, 1);
    if ($.$$ge(t2.amt_0, $.length(t1)) === true)
      this.callback_4.call$1(t1);
  },
  $is_TimerCallback1: true
};

$$.HiddenCanvas_getImage_anon = {"": "Closure;callback_0,img_1",
  call$1: function(e) {
    this.callback_0.call$1(this.img_1);
  },
  $is_TimerCallback1: true
};

$$.World_unpackObjects_anon = {"": "Closure;box_0,list_1",
  call$1: function(p) {
    var a = $.Avatar$($.$$index($.$$index(this.list_1, this.box_0.i_0), "properties"));
    a.loadProperties$1(p);
    return a;
  },
  $is_TimerCallback1: true
};

$$.World_unpackObjects_anon0 = {"": "Closure;box_0,list_2",
  call$1: function(p) {
    var a = $.Item$($.$$index($.$$index(this.list_2, this.box_0.i_0), "properties"));
    a.loadProperties$1(p);
    return a;
  },
  $is_TimerCallback1: true
};

$$.World_unpackObjects_anon1 = {"": "Closure;box_0,list_3",
  call$1: function(p) {
    var a = $.GameObject$($.$$index($.$$index(this.list_3, this.box_0.i_0), "properties"), 0, 0);
    a.loadProperties$1(p);
    return a;
  },
  $is_TimerCallback1: true
};

$$.Animation_loadProperties_anon = {"": "Closure;this_0",
  call$2: function(k, v) {
    var t1;
    switch (k) {
      case "walk":
        t1 = this.this_0;
        t1.loadWalkAnimation$2(v, new $.Animation_loadProperties__anon(t1));
        break;
      case "slash":
        t1 = this.this_0;
        t1.loadSlashAnimation$2(v, new $.Animation_loadProperties__anon0(t1));
        break;
      case "death":
        t1 = this.this_0;
        t1.loadDeathAnimation$2(v, new $.Animation_loadProperties__anon1(t1));
        break;
      case "shoot":
        t1 = this.this_0;
        t1.loadShootAnimation$2(v, new $.Animation_loadProperties__anon2(t1));
        break;
      case "thrust":
        t1 = this.this_0;
        t1.loadThrustAnimation$2(v, new $.Animation_loadProperties__anon3(t1));
        break;
    }
  }
};

$$.Animation_loadProperties__anon = {"": "Closure;this_1",
  call$1: function(animation) {
    $.$$indexSet(this.this_1.get$frameMapIndex(), 1, animation);
  },
  $is_TimerCallback1: true
};

$$.Animation_loadProperties__anon0 = {"": "Closure;this_2",
  call$1: function(animation) {
    $.$$indexSet(this.this_2.get$frameMapIndex(), 2, animation);
  },
  $is_TimerCallback1: true
};

$$.Animation_loadProperties__anon1 = {"": "Closure;this_3",
  call$1: function(animation) {
    $.$$indexSet(this.this_3.get$frameMapIndex(), 3, animation);
  },
  $is_TimerCallback1: true
};

$$.Animation_loadProperties__anon2 = {"": "Closure;this_4",
  call$1: function(animation) {
    $.$$indexSet(this.this_4.get$frameMapIndex(), 4, animation);
  },
  $is_TimerCallback1: true
};

$$.Animation_loadProperties__anon3 = {"": "Closure;this_5",
  call$1: function(animation) {
    $.$$indexSet(this.this_5.get$frameMapIndex(), 5, animation);
  },
  $is_TimerCallback1: true
};

$$.Animation_loadThrustAnimation_anon = {"": "Closure;callback_0",
  call$1: function(imgs) {
    this.callback_0.call$1($.FrameMap$(4, 8, imgs));
  }
};

$$.Animation_loadShootAnimation_anon = {"": "Closure;callback_0",
  call$1: function(imgs) {
    this.callback_0.call$1($.FrameMap$(4, 13, imgs));
  }
};

$$.Animation_loadDeathAnimation_anon = {"": "Closure;callback_0",
  call$1: function(imgs) {
    this.callback_0.call$1($.FrameMap$(1, 6, imgs));
  }
};

$$.Animation_loadSlashAnimation_anon = {"": "Closure;callback_0",
  call$1: function(imgs) {
    this.callback_0.call$1($.FrameMap$(4, 6, imgs));
  }
};

$$.Animation_loadWalkAnimation_anon = {"": "Closure;callback_0",
  call$1: function(imgs) {
    this.callback_0.call$1($.FrameMap$(4, 9, imgs));
  }
};

$$.GameObject_loadProperties_anon = {"": "Closure;this_0",
  call$2: function(k, v) {
    this.this_0.setProperty$2(k, v);
  }
};

$$.GameObject_setProperty_anon = {"": "Closure;this_0",
  call$1: function(v) {
    var t1 = this.this_0;
    $.addTag(t1, v);
    $.add(t1.get$tags(), v);
  },
  $is_TimerCallback1: true
};

$$.JsonParser_parseNumber_handleLiteral = {"": "Closure;box_0,this_1,start_2",
  call$1: function(position) {
    var t1, literal, value;
    t1 = this.this_1;
    literal = $.substring(t1.get$source(), this.start_2, position);
    value = this.box_0.isDouble_0 === true ? $.double_parse(literal, null) : $.int_parse(literal, null, null);
    t1.get$listener().handleNumber$1(value);
    return position;
  }
};

$$.World_loadMap_anon = {"": "Closure;this_0,callback_1",
  call$1: function(data) {
    this.this_0.fmtCollisionMap$1(data);
    this.callback_1.call$0();
  },
  $is_TimerCallback1: true
};

$$.res_loadFile_anon = {"": "Closure;",
  call$1: function(a) {
  },
  $is_TimerCallback1: true
};

$$.World_unpackMapPaths_anon = {"": "Closure;this_0",
  call$1: function(raw) {
    var points, t1, i, t2, t3, t4, t5, t6, path;
    points = $.List_List(0);
    for (t1 = $.getInterceptor$JSArrayJSString(raw), i = 0; $.CONSTANT9.$lt(i, $.length(t1.$index(raw, "point_x"))); ++i)
      points.push($.Vec2$($.$$index(t1.$index(raw, "point_x"), i), $.$$index(t1.$index(raw, "point_y"), i)));
    t2 = this.this_0;
    t3 = t2.get$paths();
    t4 = points.length;
    if (0 >= t4)
      throw $.ioore(0);
    t5 = points[0];
    t6 = t4 - 1;
    if (t6 < 0)
      throw $.ioore(t6);
    path = $.Path$(t5, points[t6], points, t1.$index(raw, "startHouse"), t1.$index(raw, "endHouse"));
    $.add(t3, path);
    $.add(t2.get$pathnodes(), path.start);
    $.add(t2.get$pathnodes(), path.end);
  }
};

$$.World_startCycle_anon = {"": "Closure;this_3",
  call$1: function(e) {
    var t1, t2;
    t1 = {};
    if ($.$$eq($.event.key$1("E"), 1) === true || $.$$eq($.event.key$1("Q"), 1) === true) {
      t1 = this.this_3;
      t1.set$currentWeapon($.$$mod($.$$sub($.$$add(t1.get$currentWeapon(), $.event.key$1("E")), $.event.key$1("Q")), $.length(t1.get$playerWeapons())));
      for (; $.$$index(t1.get$playerWeapons(), t1.get$currentWeapon()) !== true;)
        t1.set$currentWeapon($.$$mod($.$$add(t1.get$currentWeapon(), 1), $.length(t1.get$playerWeapons())));
      if ($.$$eq(t1.get$currentWeapon(), 0) !== true) {
        t2 = $.$$index($.animationMap, "weapon" + $.S(t1.get$currentWeapon()));
        t1.get$player().set$weaponAnimation(t2);
      } else
        t1.get$player().set$weaponAnimation(null);
      t2 = $.$$index(t1.get$weaponDamage(), t1.get$currentWeapon());
      t1.get$player().set$damage(t2);
      t2 = $.$$index(t1.get$weaponAttackTime(), t1.get$currentWeapon());
      t1.get$player().set$attackTime(t2);
      t2 = $.$$index(t1.get$weaponAttackTypes(), t1.get$currentWeapon());
      t1.get$player().set$attackType(t2);
      $.notify("Using " + $.S($.$$index(t1.get$weaponName(), t1.get$currentWeapon())));
    } else if ($.$$eq($.event.key$1("F"), 1) === true)
      if (document.get$webkitIsFullScreen() !== true)
        document.get$body().webkitRequestFullscreen$0();
      else
        document.webkitCancelFullScreen$0();
    else {
      if ($.$$eq($.event.key$1("Y"), 1) === true) {
        t2 = this.this_3;
        t2 = $.$$gt(t2.get$time(), 7) === true && $.$$lt(t2.get$time(), 21) === true;
      } else
        t2 = false;
      if (t2) {
        $.notify("Skipping right to night...");
        t1.interval_0 = null;
        t1.interval_0 = $.Timer_Timer$repeating($.Duration$(0, 0, 16, 0, 0), new $.World_startCycle__anon12(t1, this.this_3, 10));
      } else if ($.$$eq($.event.key$1("C"), 1) === true) {
        t1 = this.this_3;
        t1.set$controlsOpen(t1.get$controlsOpen() !== true);
      }
    }
  },
  $is_TimerCallback1: true
};

$$.World_startCycle__anon12 = {"": "Closure;box_0,this_4,max_iter_5",
  call$1: function(timer) {
    var t1, t2, i;
    t1 = this.this_4;
    t2 = this.max_iter_5;
    if (typeof t2 !== "number")
      return this.call$1$bailout(1, t2, t1);
    i = 0;
    while (true) {
      if (!($.$$lt(t1.get$time(), 20) === true && i < t2))
        break;
      t1.update$0();
      ++i;
    }
    if ($.$$gt(t1.get$time(), 20) === true)
      this.box_0.interval_0.cancel$0();
  },
  call$1$bailout: function(state0, t2, t1) {
    var i = 0;
    while (true) {
      if (!($.$$lt(t1.get$time(), 20) === true && $.CONSTANT9.$lt(i, t2)))
        break;
      t1.update$0();
      ++i;
    }
    if ($.$$gt(t1.get$time(), 20) === true)
      this.box_0.interval_0.cancel$0();
  },
  $is_TimerCallback1: true
};

$$.World_startCycle_anon0 = {"": "Closure;box_2,this_6",
  call$1: function(e) {
    var t1, t2;
    if ($.$$eq($.event.key$1("space"), 1) === true && $.$$eq($.length(this.this_6.get$menuInterfaces()), 0) === true) {
      t1 = new $.World_startCycle__prompt();
      t2 = this.this_6;
      $.add(t2.get$menuInterfaces(), $.MenuInterface$("options", $.makeLiteralMap(["options", [$.makeLiteralMap(["name", "Place Spawn", "func", new $.World_startCycle__anon1(t2, t1)]), $.makeLiteralMap(["name", "Place Object", "func", new $.World_startCycle__anon2(t2, t1)]), $.makeLiteralMap(["name", "Place Node", "func", new $.World_startCycle__anon3(this.box_2, t2)]), $.makeLiteralMap(["name", "Advance time one hour", "func", new $.World_startCycle__anon4(t2)]), $.makeLiteralMap(["name", "Toggle Debug Mode", "func", new $.World_startCycle__anon5()]), $.makeLiteralMap(["name", "Simulate 2 hours", "func", new $.World_startCycle__anon6(t2)]), $.makeLiteralMap(["name", "Dump Trace", "func", new $.World_startCycle__anon7(t2)]), $.makeLiteralMap(["name", "Game Over", "func", new $.World_startCycle__anon8()]), $.makeLiteralMap(["name", "Prosperity", "func", new $.World_startCycle__anon9(t2)]), $.makeLiteralMap(["name", "Test Menu", "func", new $.World_startCycle__anon10(t2)]), $.makeLiteralMap(["name", "Get JSON", "func", new $.World_startCycle__anon11(t2)])]])));
    }
  },
  $is_TimerCallback1: true
};

$$.World_startCycle__prompt = {"": "Closure;",
  call$2: function(s, def) {
    return window.prompt$2(s, def);
  },
  call$1: function(s) {
    return this.call$2(s, "");
  }
};

$$.World_startCycle__anon1 = {"": "Closure;this_7,prompt_8",
  call$0: function() {
    var t1 = this.this_7;
    $.add(t1.get$menuInterfaces(), $.MenuInterface$("options", $.makeLiteralMap(["options", [$.makeLiteralMap(["name", "Zombie Node", "func", new $.World_startCycle___anon4(t1)]), $.makeLiteralMap(["name", "Custom Emitter", "func", new $.World_startCycle___anon5(t1, this.prompt_8)])]])));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle___anon4 = {"": "Closure;this_9",
  call$0: function() {
    var t1, t2;
    t1 = this.this_9;
    t2 = $.$$index(t1.get$currentMapTree(), "objects");
    t1 = t1.get$player();
    $.add(t2, $.makeLiteralMap(["type", "node", "tag", ["zombie-spawn"], "x", t1.get$x(), "y", t1.get$y()]));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle___anon5 = {"": "Closure;this_10,prompt_11",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_10;
    t2 = $.$$index(t1.get$currentMapTree(), "objects");
    t3 = this.prompt_11;
    return $.add(t2, $.makeLiteralMap(["type", "spawn", "emit", t3.call$1("Emit Type"), "emit-properties", $.makeLiteralMap(["tag", $.split(t3.call$1("Emit Properties (',' delimited)"), ",")]), "freq", $.int_parse(t3.call$1("Freq (60 = 1 second)"), null, null), "limit", $.int_parse(t3.call$1("Limit"), null, null), "x", $.toInt(t1.get$player().get$x()), "y", $.toInt(t1.get$player().get$y())]));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon2 = {"": "Closure;this_12,prompt_13",
  call$0: function() {
    var t1 = this.this_12;
    $.add(t1.get$menuInterfaces(), $.MenuInterface$("options", $.makeLiteralMap(["options", [$.makeLiteralMap(["name", "Custom Object", "func", new $.World_startCycle___anon3(t1, this.prompt_13)])]])));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle___anon3 = {"": "Closure;this_14,prompt_15",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_14;
    t2 = $.$$index(t1.get$currentMapTree(), "objects");
    t3 = this.prompt_15;
    return $.add(t2, $.makeLiteralMap(["type", t3.call$1("Type"), "tag", $.split(t3.call$1("Tags, delimit with ','"), ","), "x", $.toInt(t1.get$player().get$x()), "y", $.toInt(t1.get$player().get$y())]));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon3 = {"": "Closure;box_2,this_16",
  call$0: function() {
    var t1, t2, t3, t4;
    t1 = this.this_16;
    t2 = t1.get$menuInterfaces();
    t3 = $.makeLiteralMap(["name", "House Node", "func", new $.World_startCycle___anon0(t1)]);
    t4 = this.box_2;
    return $.add(t2, $.MenuInterface$("options", $.makeLiteralMap(["options", [t3, $.makeLiteralMap(["name", "Path Node", "func", new $.World_startCycle___anon1(t4, t1)]), $.makeLiteralMap(["name", "End Path Node", "func", new $.World_startCycle___anon2(t4, t1)])]])));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle___anon0 = {"": "Closure;this_17",
  call$0: function() {
    var t1 = this.this_17;
    return $.add($.$$index(t1.get$currentMapTree(), "objects"), $.makeLiteralMap(["type", "node", "tag", ["house"], "x", $.toInt(t1.get$player().get$x()), "y", $.toInt(t1.get$player().get$y())]));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle___anon1 = {"": "Closure;box_2,this_18",
  call$0: function() {
    return $.add(this.box_2.debugPathNodes_3, this.this_18.get$player().clone$0());
  },
  $is_TimerCallback0: true
};

$$.World_startCycle___anon2 = {"": "Closure;box_2,this_19",
  call$0: function() {
    var t1, t2, t3, t4, ax, ay, t5, end, start;
    t1 = {};
    t2 = this.box_2;
    t3 = t2.debugPathNodes_3;
    t4 = this.this_19;
    $.add(t3, t4.get$player().clone$0());
    ax = $.List_List(0);
    ay = $.List_List(0);
    $.forEach(t2.debugPathNodes_3, new $.World_startCycle____anon(ax, ay));
    t3 = t2.debugPathNodes_3;
    t5 = $.getInterceptor$JSArrayJSString(t3);
    end = t5.$index(t3, $.$$sub(t5.get$length(t3), 1));
    start = $.$$index(t2.debugPathNodes_3, 0);
    t1.endHouse_1 = false;
    t1.startHouse_2 = false;
    $.forEach($.$$index($.tags, "house"), new $.World_startCycle____anon0(t1, end, start));
    $.add($.$$index(t4.get$currentMapTree(), "paths"), $.makeLiteralMap(["type", "path", "point_x", ax, "point_y", ay, "endHouse", t1.endHouse_1, "startHouse", t1.startHouse_2]));
    t2.debugPathNodes_3 = $.List_List(0);
  },
  $is_TimerCallback0: true
};

$$.World_startCycle____anon = {"": "Closure;ax_20,ay_21",
  call$1: function(node) {
    $.add(this.ax_20, $.toInt(node.get$x()));
    $.add(this.ay_21, $.toInt(node.get$y()));
  }
};

$$.World_startCycle____anon0 = {"": "Closure;box_1,end_22,start_23",
  call$1: function(house) {
    if (house.distanceTo$1(this.end_22) < 256)
      this.box_1.endHouse_1 = true;
    if (house.distanceTo$1(this.start_23) < 256)
      this.box_1.startHouse_2 = true;
  }
};

$$.World_startCycle__anon4 = {"": "Closure;this_24",
  call$0: function() {
    var t1, t2;
    t1 = this.this_24;
    t2 = $.$$add(t1.get$time(), 1);
    t1.set$time(t2);
    return t2;
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon5 = {"": "Closure;",
  call$0: function() {
    $.DEBUG = $.DEBUG !== true;
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon6 = {"": "Closure;this_25",
  call$0: function() {
    var t1, i;
    for (t1 = this.this_25, i = 0; i < $.$$div(t1.get$dayLength(), 12); ++i)
      t1.update$0();
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon7 = {"": "Closure;this_26",
  call$0: function() {
    var t1 = this.this_26;
    $.Primitives_printString("Player : Health : " + $.S(t1.get$player().get$health()) + " : Damage : " + $.S(t1.get$player().get$damage()) + " : Armor : " + $.S(t1.get$player().get$armor()));
    $.Primitives_printString("Mouse : " + $.S($.toString($.event.get$mouse_position())));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon8 = {"": "Closure;",
  call$0: function() {
    return $.GameOver($.game.get$context());
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon9 = {"": "Closure;this_27",
  call$0: function() {
    var t1 = this.this_27;
    t1.giveCoin$2(t1.get$player(), 2000);
    t1.set$totalPopulation($.$$add(t1.get$totalPopulation(), 200));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon10 = {"": "Closure;this_28",
  call$0: function() {
    return $.add(this.this_28.get$menuInterfaces(), $.MenuInterface$("confirm", $.makeLiteralMap(["text", "Would you like to confirm?", "func", new $.World_startCycle___anon()])));
  },
  $is_TimerCallback0: true
};

$$.World_startCycle___anon = {"": "Closure;",
  call$0: function() {
    $.Primitives_printString("Confirmed");
  },
  $is_TimerCallback0: true
};

$$.World_startCycle__anon11 = {"": "Closure;this_29",
  call$0: function() {
    $.Primitives_printString($.toString(window.open$3("javascript:document.body.innerHTML='" + $.S($._JsonStringifier_stringify(this.this_29.get$dataTree())) + "';", "JSON Data", "height=300,width=300")));
    return;
  },
  $is_TimerCallback0: true
};

$$.World_startCycle_anon1 = {"": "Closure;this_30",
  call$1: function(e) {
    var t1, i, t2, t3;
    t1 = this.this_30;
    t1.set$rapid_clicks($.$$add(t1.get$rapid_clicks(), 1));
    if ($.$$gt(t1.get$rapid_clicks(), 5) === true)
      $.notify("HOLD the mouse button to attack");
    if (t1.get$intro() !== true)
      t1.set$controlsOpen(false);
    if ($.$$eq($.length(t1.get$menuInterfaces()), 0) !== true)
      $.event.set$mouseDown(false);
    i = $.$$sub($.length(t1.get$menuInterfaces()), 1);
    if (typeof i !== "number")
      return this.call$1$bailout(1, i, t1);
    for (; i >= 0; --i) {
      t2 = $.$$index(t1.get$menuInterfaces(), i);
      t3 = $.event.get$mouse_position();
      if (t2.clickAt$2(t3.get$x(), t3.get$y()) === true)
        $.removeRange(t1.get$menuInterfaces(), i, 1);
    }
    $.any($.$$index($.tags, "item"), new $.World_startCycle__anon0(t1));
  },
  call$1$bailout: function(state0, i, t1) {
    var t2, t3, t4;
    for (; t2 = $.getInterceptor$JSNumber(i), t2.$ge(i, 0) === true; i = t2.$sub(i, 1)) {
      t3 = $.$$index(t1.get$menuInterfaces(), i);
      t4 = $.event.get$mouse_position();
      if (t3.clickAt$2(t4.get$x(), t4.get$y()) === true)
        $.removeRange(t1.get$menuInterfaces(), i, 1);
    }
    $.any($.$$index($.tags, "item"), new $.World_startCycle__anon0(t1));
  },
  $is_TimerCallback1: true
};

$$.World_startCycle__anon0 = {"": "Closure;this_31",
  call$1: function(item) {
    if (this.this_31.get$player().distanceTo$1(item) < 32) {
      $.event.set$mouseDown(false);
      $.notify("You found " + $.S(item.get$prop().containsKey$1("properName") === true ? $.$$index(item, "properName") : item.get$type()));
      $.Primitives_printString("TODO : MAKE PICK UP ITEM");
      return true;
    }
    return false;
  }
};

$$.World_startCycle_anon2 = {"": "Closure;this_32",
  call$1: function(e) {
    if ($.$$eq($.event.key$1("space"), 1) === true)
      $.forEach($.$$index($.tags, "salesman"), new $.World_startCycle__anon(this.this_32));
  },
  $is_TimerCallback1: true
};

$$.World_startCycle__anon = {"": "Closure;this_33",
  call$1: function(a) {
    var t1 = this.this_33;
    if (a.distanceTo$1(t1.get$player()) < 128)
      t1.openMenu$1($.$$index(a, "menu"));
  }
};

$$.World_startCycle_cycle = {"": "Closure;this_34,context_35",
  call$1: function(a) {
    var t1 = this.this_34;
    if (t1.get$paused() !== true) {
      window.requestAnimationFrame$1(this);
      t1.render$1(this.context_35);
    }
  }
};

$$.World_startCycle_anon3 = {"": "Closure;box_2,this_36",
  call$1: function(timer) {
    var t1 = this.this_36;
    if (t1.get$paused() !== true) {
      t1.update$0();
      if ($.$$eq($.event.key$1("T"), 1) === true) {
        t1.update$0();
        t1.update$0();
        t1.update$0();
      }
    } else
      this.box_2.interval_4.cancel$0();
  },
  $is_TimerCallback1: true
};

$$.anon69 = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  },
  $is_TimerCallback0: true
};

$$.World_update_anon = {"": "Closure;",
  call$1: function(a) {
    a.removeTag$1("lost");
    $.rmTag(a, "lost");
  }
};

$$.World_update_anon0 = {"": "Closure;",
  call$1: function(a) {
    $.switchTag(a, "following", "wander");
    a.say$1("Thank you!");
    $.add(a.get$tags(), "nice");
    $.addTag(a, "nice");
  }
};

$$.World_update_anon1 = {"": "Closure;",
  call$1: function(a) {
    a.markForRemoval$0();
  }
};

$$.World_update_anon2 = {"": "Closure;",
  call$1: function(citizen) {
    if (citizen.hasTag$1("ai") === true && citizen.hasTag$1("lost") !== true && citizen.hasTag$1("citizen") === true)
      if ($.$$lt($.get$random_number_generator().nextDouble$0(), 0.9) === true) {
        $.switchTag(citizen, "wander", "homebound");
        $.$$index($.$$index($.tagEvents, "homebound"), "init").call$1(citizen);
      } else {
        $.add(citizen.get$tags(), "lost");
        $.addTag(citizen, "lost");
      }
  }
};

$$.World_update_anon3 = {"": "Closure;",
  call$1: function(ob) {
    ob.fireTagEvent$1("init");
    ob.removeTag$1("uninit");
  }
};

$$.World_update_anon4 = {"": "Closure;",
  call$1: function(g) {
    return g.fireTagEvent$1("update");
  }
};

$$.World_update_anon5 = {"": "Closure;this_0",
  call$1: function(actor) {
    var t1, attacked, i, t2, timeToAttack, t3, t4;
    if (actor.get$alive() === true) {
      if (actor.get$attacking() === true) {
        actor.set$currentAttackTime($.$$add(actor.get$currentAttackTime(), 1));
        if ($.$$gt(actor.get$currentAttackTime(), actor.get$attackTime()) === true) {
          actor.set$currentAttackTime(0);
          if ($.$$eq(actor.get$attackType(), 0) === true) {
            t1 = this.this_0;
            attacked = t1.damageBubble$4($.add(actor.clone$0(), actor.get$attackDirection().clone$0().multiplyScalar$1(actor.get$attackRadius())), $.$$div(actor.get$attackRadius(), 2), actor.get$damage(), actor.get$attackDirection());
            if (typeof attacked !== "string" && (typeof attacked !== "object" || attacked === null || attacked.constructor !== Array && !attacked.$isJavaScriptIndexingBehavior()))
              return this.call$1$bailout(1, actor, attacked, t1);
            for (i = 0; i < attacked.length; ++i)
              if (attacked[i].get$alive() !== true)
                actor.fireTagEvent$1("kill");
            if (actor.distanceTo$1(t1.get$player()) < 256)
              $.audio.play$1("bump");
          } else if ($.$$eq(actor.get$attackType(), 1) === true) {
            t1 = this.this_0;
            t1.spawnObject$2("arrow", $.makeLiteralMap(["direction", actor.get$attackDirection().clone$0().multiplyScalar$1(128), "x", $.$$add(actor.get$x(), $.$$mul(actor.get$attackDirection().get$x(), 32)), "y", $.$$add(actor.get$y(), $.$$mul(actor.get$attackDirection().get$y(), 32)), "damage", actor.get$damage()]));
            if (actor.distanceTo$1(t1.get$player()) < 256)
              $.audio.play$1("shoot");
          } else if ($.$$eq(actor.get$attackType(), 2) === true) {
            attacked = this.this_0.damageBubble$4($.add(actor.clone$0(), actor.get$attackDirection().clone$0().multiplyScalar$1(actor.get$attackRadius())), $.$$div(actor.get$attackRadius(), 2), actor.get$damage(), actor.get$attackDirection().clone$0().multiplyScalar$1(1.5));
            if (typeof attacked !== "string" && (typeof attacked !== "object" || attacked === null || attacked.constructor !== Array && !attacked.$isJavaScriptIndexingBehavior()))
              return this.call$1$bailout(2, actor, attacked);
            for (i = 0; i < attacked.length; ++i)
              if (attacked[i].get$alive() !== true)
                actor.fireTagEvent$1("kill");
          }
        }
        t1 = $.$$sub(actor.get$currentAttackTime(), actor.get$attackTime());
        t2 = actor.get$attackType();
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= $.CONSTANT34.length)
          throw $.ioore(t2);
        timeToAttack = $.$$add(t1, $.CONSTANT34[t2]);
        t1 = actor.get$currentFrame();
        actor.set$currentFrame($.$$add(t1, $.$$gt(timeToAttack, 0) === true ? timeToAttack : 0));
        actor.set$currentOrientation(actor.get$attackDirection().getDirection$0());
      } else if ($.$$gt($.length0(actor.get$velocity()), 0.1) === true) {
        actor.set$currentFrame($.$$add(actor.get$currentFrame(), $.length0(actor.get$velocity())));
        actor.set$currentOrientation(actor.get$velocity().getDirection$0());
      }
      t1 = actor.get$velocity();
      t1.divideScalar$1(1.5 * (actor.get$attacking() === true ? 2 : 1));
      t1 = $.add(actor.clone$0(), actor.get$velocity());
      t2 = this.this_0;
      if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true) {
        t1 = actor.clone$0().addTo$2(actor.get$velocity().get$x(), 0);
        if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true)
          actor.get$velocity().zeroX$0();
        t1 = actor.clone$0().addTo$2(0, actor.get$velocity().get$y());
        if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true)
          actor.get$velocity().zeroY$0();
        $.add(actor, actor.get$velocity());
        actor.fireTagEvent$1("collide");
      } else {
        t1 = actor.clone$0().addTo$2(actor.get$velocity().get$x(), 0);
        if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true) {
          $.add(actor, actor.get$velocity().zeroX$0());
          actor.fireTagEvent$1("collide");
        } else {
          t1 = actor.clone$0().addTo$2(0, actor.get$velocity().get$y());
          t2 = t2.collisionAt$2(t1.get$x(), t1.get$y());
          t3 = $.getInterceptor$JSArray(actor);
          t4 = actor.get$velocity();
          if (t2 === true) {
            t3.add$1(actor, t4.zeroY$0());
            actor.fireTagEvent$1("collide");
          } else
            t3.add$1(actor, t4);
        }
      }
    } else if ($.$$lt(actor.get$currentFrame(), 25) === true)
      actor.set$currentFrame($.$$add(actor.get$currentFrame(), 1));
  },
  call$1$bailout: function(state0, actor, attacked, t1) {
    switch (state0) {
      case 0:
      default:
        var t2, i, timeToAttack, t3, t4;
        if (state0 === 2 || state0 === 1 || state0 === 0 && actor.get$alive() === true)
          switch (state0) {
            case 0:
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && actor.get$attacking() === true)
                switch (state0) {
                  case 0:
                    actor.set$currentAttackTime($.$$add(actor.get$currentAttackTime(), 1));
                  default:
                    if (state0 === 2 || state0 === 1 || state0 === 0 && $.$$gt(actor.get$currentAttackTime(), actor.get$attackTime()) === true)
                      switch (state0) {
                        case 0:
                          actor.set$currentAttackTime(0);
                        default:
                          if (state0 === 1 || state0 === 0 && $.$$eq(actor.get$attackType(), 0) === true)
                            switch (state0) {
                              case 0:
                                t1 = this.this_0;
                                attacked = t1.damageBubble$4($.add(actor.clone$0(), actor.get$attackDirection().clone$0().multiplyScalar$1(actor.get$attackRadius())), $.$$div(actor.get$attackRadius(), 2), actor.get$damage(), actor.get$attackDirection());
                              case 1:
                                state0 = 0;
                                for (t2 = $.getInterceptor$JSArrayJSString(attacked), i = 0; $.CONSTANT9.$lt(i, t2.get$length(attacked)); ++i)
                                  if (t2.$index(attacked, i).get$alive() !== true)
                                    actor.fireTagEvent$1("kill");
                                if (actor.distanceTo$1(t1.get$player()) < 256)
                                  $.audio.play$1("bump");
                            }
                          else
                            switch (state0) {
                              case 0:
                              case 2:
                                if (state0 === 0 && $.$$eq(actor.get$attackType(), 1) === true) {
                                  t1 = this.this_0;
                                  t1.spawnObject$2("arrow", $.makeLiteralMap(["direction", actor.get$attackDirection().clone$0().multiplyScalar$1(128), "x", $.$$add(actor.get$x(), $.$$mul(actor.get$attackDirection().get$x(), 32)), "y", $.$$add(actor.get$y(), $.$$mul(actor.get$attackDirection().get$y(), 32)), "damage", actor.get$damage()]));
                                  if (actor.distanceTo$1(t1.get$player()) < 256)
                                    $.audio.play$1("shoot");
                                } else
                                  switch (state0) {
                                    case 0:
                                    case 2:
                                      if (state0 === 2 || state0 === 0 && $.$$eq(actor.get$attackType(), 2) === true)
                                        switch (state0) {
                                          case 0:
                                            attacked = this.this_0.damageBubble$4($.add(actor.clone$0(), actor.get$attackDirection().clone$0().multiplyScalar$1(actor.get$attackRadius())), $.$$div(actor.get$attackRadius(), 2), actor.get$damage(), actor.get$attackDirection().clone$0().multiplyScalar$1(1.5));
                                          case 2:
                                            state0 = 0;
                                            for (t1 = $.getInterceptor$JSArrayJSString(attacked), i = 0; $.CONSTANT9.$lt(i, t1.get$length(attacked)); ++i)
                                              if (t1.$index(attacked, i).get$alive() !== true)
                                                actor.fireTagEvent$1("kill");
                                        }
                                  }
                            }
                      }
                    t1 = $.$$sub(actor.get$currentAttackTime(), actor.get$attackTime());
                    t2 = actor.get$attackType();
                    if (t2 !== (t2 | 0))
                      throw $.iae(t2);
                    if (t2 < 0 || t2 >= $.CONSTANT34.length)
                      throw $.ioore(t2);
                    timeToAttack = $.$$add(t1, $.CONSTANT34[t2]);
                    t1 = actor.get$currentFrame();
                    actor.set$currentFrame($.$$add(t1, $.$$gt(timeToAttack, 0) === true ? timeToAttack : 0));
                    actor.set$currentOrientation(actor.get$attackDirection().getDirection$0());
                }
              else if ($.$$gt($.length0(actor.get$velocity()), 0.1) === true) {
                actor.set$currentFrame($.$$add(actor.get$currentFrame(), $.length0(actor.get$velocity())));
                actor.set$currentOrientation(actor.get$velocity().getDirection$0());
              }
              t1 = actor.get$velocity();
              t1.divideScalar$1(1.5 * (actor.get$attacking() === true ? 2 : 1));
              t1 = $.add(actor.clone$0(), actor.get$velocity());
              t2 = this.this_0;
              if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true) {
                t1 = actor.clone$0().addTo$2(actor.get$velocity().get$x(), 0);
                if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true)
                  actor.get$velocity().zeroX$0();
                t1 = actor.clone$0().addTo$2(0, actor.get$velocity().get$y());
                if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true)
                  actor.get$velocity().zeroY$0();
                $.add(actor, actor.get$velocity());
                actor.fireTagEvent$1("collide");
              } else {
                t1 = actor.clone$0().addTo$2(actor.get$velocity().get$x(), 0);
                if (t2.collisionAt$2(t1.get$x(), t1.get$y()) === true) {
                  $.add(actor, actor.get$velocity().zeroX$0());
                  actor.fireTagEvent$1("collide");
                } else {
                  t1 = actor.clone$0().addTo$2(0, actor.get$velocity().get$y());
                  t2 = t2.collisionAt$2(t1.get$x(), t1.get$y());
                  t3 = $.getInterceptor$JSArray(actor);
                  t4 = actor.get$velocity();
                  if (t2 === true) {
                    t3.add$1(actor, t4.zeroY$0());
                    actor.fireTagEvent$1("collide");
                  } else
                    t3.add$1(actor, t4);
                }
              }
          }
        else if ($.$$lt(actor.get$currentFrame(), 25) === true)
          actor.set$currentFrame($.$$add(actor.get$currentFrame(), 1));
    }
  }
};

$$.World_update_anon6 = {"": "Closure;",
  call$1: function(spawn) {
    spawn.update$0();
  }
};

$$.notify_anon = {"": "Closure;",
  call$1: function(note) {
    note.set$y($.$$add(note.get$y(), 32));
  }
};

$$.GameOver_rcycle = {"": "Closure;box_1,c_2,menu_pos_3,img_4",
  call$1: function(a) {
    var t1, t2, t3, t4, t5;
    t1 = {};
    t2 = this.box_1;
    t2.timePass_1 = $.$$add(t2.timePass_1, 1);
    t2 = this.c_2;
    t2.set$globalAlpha(1);
    t2.drawImage$3(this.img_4, 0, 0);
    t2.save$0();
    t3 = this.menu_pos_3;
    t4 = t3.get$x();
    t5 = $.getInterceptor$JSNumber(t4);
    t3.set$x(t5.$sub(t4, $.$$div(t5.$sub(t4, $.$$sub($.SCREEN_WIDTH, 400)), 10)));
    t2.translate$2(t3.get$x(), t3.get$y());
    t2.set$fillStyle("#000");
    t2.set$globalAlpha(0.75);
    t2.fillRect$4(0, 0, 400, $.SCREEN_HEIGHT);
    t2.set$globalAlpha(1);
    t2.set$font("48px Arial");
    t2.set$fillStyle("#fff");
    t2.fillText$3("Game Over", 75, 75);
    t2.set$font("18px Arial");
    t1.ypos_0 = 160;
    $.CONSTANT2.forEach$1([["Village Population", $.S($.world.get$totalPopulation())], ["Zombie Population", $.S($.world.get$zombie_max())], ["Zombies Killed", $.S($.world.get$zombies_killed())], ["Villagers Saved", $.S($.world.get$saved())], ["Days Survived", $.S($.world.get$dayCount())]], new $.GameOver_rcycle_anon(t1, t2));
    t2.set$textAlign("center");
    t2.fillText$3("Click anywhere to play again", 200, t1.ypos_0);
    t2.fillText$3("Game by Severin Ibarluzea", 200, $.$$sub($.SCREEN_HEIGHT, 50));
    t2.fillText$3("For the Liberated Pixel Cup (2012)", 200, $.$$sub($.SCREEN_HEIGHT, 25));
    t2.restore$0();
    if ($.game == null)
      window.requestAnimationFrame$1(this);
  }
};

$$.GameOver_rcycle_anon = {"": "Closure;box_0,c_5",
  call$1: function(not) {
    var t1, t2, t3, t4;
    t1 = this.c_5;
    t1.set$textAlign("left");
    t2 = $.getInterceptor$JSArrayJSString(not);
    t3 = t2.$index(not, 0);
    t4 = this.box_0;
    t1.fillText$3(t3, 25, t4.ypos_0);
    t1.set$textAlign("right");
    t1.fillText$3(t2.$index(not, 1), 350, t4.ypos_0);
    t4.ypos_0 = $.$$add(t4.ypos_0, 40);
  }
};

$$.GameOver_anon = {"": "Closure;box_1",
  call$1: function(e) {
    if ($.$$ge(this.box_1.timePass_1, 120) === true) {
      $.menu = $.MainMenu$();
      return true;
    }
  },
  $is_TimerCallback1: true
};

$$.World_damageBubble_anon = {"": "Closure;point_0,radius_1,damage_2,direction_3,attacked_4",
  call$1: function(actor) {
    if (actor.get$alive() === true && $.CONSTANT11.$lt(actor.distanceTo$1(this.point_0), this.radius_1)) {
      $.add(this.attacked_4, actor);
      actor.hurt$2(this.damage_2, this.direction_3);
    }
  }
};

$$.GameObject_remove_anon = {"": "Closure;this_0",
  call$1: function(tag) {
    $.rmTag(this.this_0, tag);
  }
};

$$.World_render_anon = {"": "Closure;c_0",
  call$1: function(object) {
    object.render$1(this.c_0);
  },
  $is_TimerCallback1: true
};

$$.World_render_anon0 = {"": "Closure;c_1",
  call$1: function(path) {
    var t1 = this.c_1;
    t1.beginPath$0();
    t1.set$strokeStyle("#fff");
    t1.set$lineWidth(5);
    t1.set$lineCap("round");
    t1.set$fillStyle("#fff");
    t1.moveTo$2(path.get$start().get$x(), path.get$start().get$y());
    $.forEach(path.get$points(), new $.World_render__anon(t1));
    t1.stroke$0();
    t1.closePath$0();
  }
};

$$.World_render__anon = {"": "Closure;c_2",
  call$1: function(point) {
    var t1 = this.c_2;
    t1.lineTo$2(point.get$x(), point.get$y());
    t1.fillText$3($.toString(point), point.get$x(), point.get$y());
  }
};

$$.World_render_anon1 = {"": "Closure;c_3",
  call$1: function(mi) {
    mi.render$1(this.c_3);
  }
};

$$.World_openMenu_anon = {"": "Closure;this_0,i_1",
  call$0: function() {
    var t1, t2, t3, t4, t5, t6;
    t1 = this.this_0;
    t2 = t1.get$coin();
    t3 = t1.get$weaponCost();
    t4 = this.i_1;
    t2 = $.$$ge(t2, $.$$index(t3, t4));
    t5 = t1.get$menuInterfaces();
    t6 = t1.get$weaponName();
    return t2 === true ? $.add(t5, $.MenuInterface$("confirm", $.makeLiteralMap(["text", "Would you like to buy the " + $.S($.$$index(t6, t4)) + " for " + $.S($.$$index(t1.get$weaponCost(), t4)) + "c?", "func", new $.World_openMenu__anon1(t1, t4)]))) : $.add(t5, $.MenuInterface$("broke", $.makeLiteralMap(["text", "You cannot afford the " + $.S($.$$index(t6, t4)) + ", come back when you have " + $.S($.$$index(t1.get$weaponCost(), t4)) + "c."])));
  },
  $is_TimerCallback0: true
};

$$.World_openMenu__anon1 = {"": "Closure;this_2,i_3",
  call$0: function() {
    return this.this_2.purchaseWeapon$1(this.i_3);
  },
  $is_TimerCallback0: true
};

$$.World_openMenu_anon0 = {"": "Closure;this_4,i_5",
  call$0: function() {
    var t1, t2, t3, t4, t5, t6;
    t1 = this.this_4;
    t2 = t1.get$coin();
    t3 = t1.get$weaponCost();
    t4 = this.i_5;
    t2 = $.$$ge(t2, $.$$index(t3, t4));
    t5 = t1.get$menuInterfaces();
    t6 = t1.get$weaponName();
    return t2 === true ? $.add(t5, $.MenuInterface$("confirm", $.makeLiteralMap(["text", "Would you like to buy a " + $.S($.$$index(t6, t4)) + " damage upgrade for " + $.S($.$$index(t1.get$weaponCost(), t4)) + "c?", "func", new $.World_openMenu__anon0(t1, t4)]))) : $.add(t5, $.MenuInterface$("broke", $.makeLiteralMap(["text", "You cannot afford a " + $.S($.$$index(t6, t4)) + " damage upgrade, come back when you have " + $.S($.$$index(t1.get$weaponCost2(), t4)) + "c."])));
  },
  $is_TimerCallback0: true
};

$$.World_openMenu__anon0 = {"": "Closure;this_6,i_7",
  call$0: function() {
    return this.this_6.purchaseUpgrade$2("damage", this.i_7);
  },
  $is_TimerCallback0: true
};

$$.World_openMenu_anon1 = {"": "Closure;this_8,i_9",
  call$0: function() {
    var t1, t2, t3, t4, t5, t6;
    t1 = this.this_8;
    t2 = t1.get$coin();
    t3 = t1.get$weaponCost2();
    t4 = this.i_9;
    t2 = $.$$ge(t2, $.$$index(t3, t4));
    t5 = t1.get$menuInterfaces();
    t6 = t1.get$weaponName();
    return t2 === true ? $.add(t5, $.MenuInterface$("confirm", $.makeLiteralMap(["text", "Would you like to buy a " + $.S($.$$index(t6, t4)) + " damage upgrade for " + $.S($.$$index(t1.get$weaponCost2(), t4)) + "c?", "func", new $.World_openMenu__anon(t1, t4)]))) : $.add(t5, $.MenuInterface$("broke", $.makeLiteralMap(["text", "You cannot afford a " + $.S($.$$index(t6, t4)) + " attack rate upgrade, come back when you have " + $.S($.$$index(t1.get$weaponCost2(), t4)) + "c."])));
  },
  $is_TimerCallback0: true
};

$$.World_openMenu__anon = {"": "Closure;this_10,i_11",
  call$0: function() {
    return this.this_10.purchaseUpgrade$2("rate", this.i_11);
  },
  $is_TimerCallback0: true
};

$$.World_openMenu_anon2 = {"": "Closure;this_12",
  call$0: function() {
    var t1 = this.this_12;
    t1.set$player_max_health($.$$add(t1.get$player_max_health(), 50));
    t1.set$coin($.$$sub(t1.get$coin(), 300));
  },
  $is_TimerCallback0: true
};

$$.World_openMenu_anon3 = {"": "Closure;this_13",
  call$0: function() {
    var t1 = this.this_13;
    t1.set$guard_total($.$$add(t1.get$guard_total(), 1));
    t1.spawnGuard$0();
    t1.set$coin($.$$sub(t1.get$coin(), t1.get$guard_price()));
    t1.set$guard_price($.$$add(t1.get$guard_price(), 50));
  },
  $is_TimerCallback0: true
};

$$.anon70 = {"": "Closure;",
  call$0: function() {
  },
  $is_TimerCallback0: true
};

$$.anon71 = {"": "Closure;",
  call$0: function() {
  },
  $is_TimerCallback0: true
};

$$.anon72 = {"": "Closure;",
  call$0: function() {
  },
  $is_TimerCallback0: true
};

$$.anon73 = {"": "Closure;",
  call$0: function() {
  },
  $is_TimerCallback0: true
};

$$.MenuInterface_renderConfirmMenu_anon = {"": "Closure;c_0",
  call$1: function(button) {
    return button.render$1(this.c_0);
  }
};

$$.MenuInterface_renderOptionsMenu_anon = {"": "Closure;c_0",
  call$1: function(button) {
    return button.render$1(this.c_0);
  }
};

$$.Stream_any_anon = {"": "Closure;box_0,test_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_any__anon(this.test_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_any__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  },
  $is_TimerCallback1: true
};

$$.Stream_any__anon = {"": "Closure;test_3,element_4",
  call$0: function() {
    return this.test_3.call$1(this.element_4);
  },
  $is_TimerCallback0: true
};

$$.Stream_any__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._liblib$_setValue$1(true);
    }
  }
};

$$.Stream_any_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._liblib$_setValue$1(false);
  },
  $is_TimerCallback0: true
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$.MenuInterface_clickAt_anon = {"": "Closure;box_0,x_1,y_2",
  call$1: function(button) {
    if (button.clickAt$2(this.x_1, this.y_2) === true) {
      this.box_0.returner_0 = true;
      button.action$0();
      return true;
    }
    return false;
  }
};

$$._JsonStringifier_stringifyJsonValue_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.first_0;
    t3 = this.this_1;
    if (t2 !== true)
      $.add(t3.get$sb(), ",\"");
    else
      $.add(t3.get$sb(), "\"");
    t2 = this.this_1;
    $._JsonStringifier_escape(t2.get$sb(), key);
    $.add(t2.get$sb(), "\":");
    t2.stringifyValue$1(value);
    t1.first_0 = false;
  }
};

$$.World_setGuardPath_anon = {"": "Closure;box_0,guard_1,closestDistance_2",
  call$1: function(node) {
    if ($.CONSTANT11.$lt(node.distanceTo$1(this.guard_1), this.closestDistance_2))
      this.box_0.closest_0 = node;
  }
};

$$.World_getClosePathNodes_anon = {"": "Closure;v_0,cnodes_1",
  call$1: function(node) {
    if (node.distanceTo$1(this.v_0) < 256)
      $.add(this.cnodes_1, node);
  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_Timer($.CONSTANT3, this);
  },
  $is_TimerCallback0: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true)
      $globalState.mainManager.postMessage$1(workerMessage);
    else {
      manager = $.$$index($globalState.managers, t1.get$_workerId());
      if (!(manager == null))
        manager.postMessage$1(workerMessage);
    }
  },
  $is_TimerCallback0: true
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  $is_TimerCallback1: true
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$0: function() {
    this.thenFuture_0._sendValue$1(this.value_1);
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$0: function() {
    this.errorFuture_1._sendError$1(this.error_0);
  },
  $is_TimerCallback0: true
};

$$._FutureImpl__FutureImpl$wait_handleError = {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (!(t1.values_1 == null)) {
      t1.values_1 = null;
      t1.completer_0.completeError$2(error.get$error(), error.get$stackTrace());
    }
  },
  $is_TimerCallback1: true
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    $.$$indexSet(t2, this.pos_1, value);
    t1.remaining_2 = $.$$sub(t1.remaining_2, 1);
    if ($.$$eq(t1.remaining_2, 0) === true)
      t1.completer_0.complete$1(t1.values_1);
  },
  $is_TimerCallback1: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    isolate = $.$$index($globalState.isolates, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = !($globalState.currentContext == null) && $.$$eq($globalState.currentContext.get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  },
  $is_TimerCallback0: true
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_receivePort().get$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  },
  $is_TimerCallback0: true
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._liblib$_setValue$1(false);
  },
  $is_TimerCallback1: true
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._liblib$_setValue$1(true);
  },
  $is_TimerCallback0: true
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $is_TimerCallback1: true
};

$$.ConstantMap_values_anon = {"": "Closure;this_0",
  call$1: function(key) {
    return $.$$index(this.this_0, key);
  }
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.Primitives_printString("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (!(t1 == null))
      $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
  },
  $is_TimerCallback0: true
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$0: function() {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  },
  $is_TimerCallback0: true
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $is_TimerCallback1: true
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  },
  $is_TimerCallback1: true
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._liblib$_setValue$1(this.result_1);
  },
  $is_TimerCallback0: true
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  },
  $is_TimerCallback0: true
};

$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.Bound__handleData__ForwardingStreamSubscription = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  },
  $is_TimerCallback1: true
};
$$.Bound__handleDone__ForwardingStreamSubscription = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  },
  $is_TimerCallback0: true
};
$$.BoundClosure$0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$.Animation$ = function(properties) {
  var t1 = new $.Animation(null, null, null);
  t1.Animation$1(properties);
  return t1;
};

$.Arrow$ = function(properties) {
  var t1 = new $.Arrow(0, null, null, "", "", false, null, null);
  t1.Vec2$2(0, 0);
  t1.GameObject$3(properties, 0, 0);
  return t1;
};

$.AudioManager$ = function() {
  var t1 = new $.AudioManager(null, null);
  t1.AudioManager$0();
  return t1;
};

$.Avatar$ = function(properties) {
  var t1 = new $.Avatar(1, 2, 0, null, false, null, 25, 1, 0, 12, 0, 0, 100, true, 1, false, 0, "", 32, null, null, null, null, "", "", false, null, null);
  t1.Vec2$2(0, 0);
  t1.GameObject$3(properties, 0, 0);
  t1.Avatar$1(properties);
  return t1;
};

$.rng = function() {
  return $.get$random_number_generator().nextDouble$0();
};

$.addTag = function(object, tag) {
  var t1, t2;
  t1 = $.$$index($.tags, tag);
  t2 = $.tags;
  if (t1 == null) {
    t1 = $.List_List$from([object]);
    $.$$indexSet(t2, tag, t1);
  } else
    t1 = $.add($.$$index(t2, tag), object);
  return t1;
};

$.rmTag = function(object, tag) {
  var index = $.indexOf($.$$index($.tags, tag), object);
  if ($.$$eq(index, -1) !== true)
    $.removeRange($.$$index($.tags, tag), index, 1);
};

$.GameOver = function(c) {
  var t1, menu_pos, img, t2;
  t1 = {};
  $.world.set$paused(true);
  menu_pos = $.Vec2$($.SCREEN_WIDTH, 0);
  img = $.ImageElement_ImageElement(null, null, null);
  img.set$src($.game.get$canvas().toDataUrl$1("image/png"));
  $.game = null;
  t1.timePass_1 = 0;
  t2 = new $.GameOver_rcycle(t1, c, menu_pos, img);
  window.requestAnimationFrame$1(t2);
  $.add($.event.get$onClick(), new $.GameOver_anon(t1));
};

$.renderNotifications = function(c) {
  var i = $.$$sub($.length($.notifications), 1);
  if (typeof i !== "number")
    return $.renderNotifications$bailout(1, c, i);
  for (; i >= 0; --i)
    if ($.$$index($.notifications, i).render$1(c) === true)
      $.removeRange($.notifications, i, 1);
};

$.renderNotifications$bailout = function(state0, c, i) {
  var t1;
  for (; t1 = $.getInterceptor$JSNumber(i), t1.$ge(i, 0) === true; i = t1.$sub(i, 1))
    if ($.$$index($.notifications, i).render$1(c) === true)
      $.removeRange($.notifications, i, 1);
};

$.notify = function(text) {
  $.forEach($.notifications, new $.notify_anon());
  $.add($.notifications, $.Notification$(text));
};

$.switchTag = function(o, oldTag, newTag) {
  o.removeTag$1(oldTag);
  $.rmTag(o, oldTag);
  $.add(o.get$tags(), newTag);
  $.addTag(o, newTag);
};

$.main = function() {
  $.CANVAS_OFFSETX = $.$$div(window.innerWidth, 2) - 400;
  $.CANVAS_OFFSETY = $.$$div(window.innerHeight, 2) - 225;
  if ($.$$lt($.CANVAS_OFFSETY, 0) === true)
    $.CANVAS_OFFSETY = 0;
  var t1 = $.S($.CANVAS_OFFSETX) + "px";
  document.query$1("#canvas").get$style().set$left(t1);
  t1 = $.S($.CANVAS_OFFSETY) + "px";
  document.query$1("#canvas").get$style().set$top(t1);
  window.get$onLoad().listen$1(new $.main_anon());
};

$.Game$ = function() {
  var t1 = new $.Game(null, null);
  t1.Game$0();
  return t1;
};

$.Camera$ = function(x, y, zoom) {
  var t1 = new $.Camera(10, null, null, null, null);
  t1.Vec2$2(0, 0);
  t1.Camera$3(x, y, zoom);
  return t1;
};

$.Color$ = function(r, g, b) {
  var t1 = new $.Color(null, null, null);
  t1.Color$3(r, g, b);
  return t1;
};

$.Color$fromString = function(s) {
  var t1 = new $.Color(null, null, null);
  t1.Color$fromString$1(s);
  return t1;
};

$.FloatingText$ = function(properties) {
  var t1 = new $.FloatingText(0, null, null, "", "", false, null, null);
  t1.Vec2$2(0, 0);
  t1.GameObject$3(properties, 0, 0);
  return t1;
};

$.FrameMap$ = function(orientations_, positions_, list) {
  return new $.FrameMap(orientations_, positions_, list);
};

$.GameObject$ = function(a, xx, yy) {
  var t1 = new $.GameObject(null, null, "", "", false, null, null);
  t1.Vec2$2(xx, yy);
  t1.GameObject$3(a, xx, yy);
  return t1;
};

$.HiddenCanvas$ = function(width, height) {
  var t1 = new $.HiddenCanvas(null, null);
  t1.HiddenCanvas$2(width, height);
  return t1;
};

$.HiddenCanvas_split = function(img, px, py, callback) {
  var t1, hc, c, list, n, y, x, n0;
  t1 = {};
  if (typeof px !== "number")
    return $.HiddenCanvas_split$bailout(1, img, px, py, callback, t1);
  if (typeof py !== "number")
    return $.HiddenCanvas_split$bailout(1, img, px, py, callback, t1);
  hc = $.HiddenCanvas$(px, py);
  c = hc.context;
  t1.amt_0 = 0;
  list = $.List_List(0);
  for (; list.length < $.$$div(img.get$width(), px) * $.$$div(img.get$height(), py);)
    list.push(null);
  t1 = new $.HiddenCanvas_split_addToList(t1, callback, hc, list);
  for (n = 0, y = 0; y > $.$$negate(img.get$height()); y -= py)
    for (x = 0; x > $.$$negate(img.get$width()); x -= px, n = n0) {
      c.clearRect$4(0, 0, px, py);
      c.drawImage$3(img, x, y);
      n0 = n + 1;
      t1.call$1(n);
    }
};

$.HiddenCanvas_split$bailout = function(state0, img, px, py, callback, t1) {
  var hc, c, list, n, y, x, n0;
  hc = $.HiddenCanvas$(px, py);
  c = hc.context;
  t1.amt_0 = 0;
  list = $.List_List(0);
  for (; list.length < $.$$div(img.get$width(), px) * $.$$div(img.get$height(), py);)
    list.push(null);
  t1 = new $.HiddenCanvas_split_addToList(t1, callback, hc, list);
  n = 0;
  y = 0;
  while (y > $.$$negate(img.get$height())) {
    x = 0;
    while (x > $.$$negate(img.get$width())) {
      c.clearRect$4(0, 0, px, py);
      c.drawImage$3(img, x, y);
      n0 = n + 1;
      t1.call$1(n);
      if (typeof px !== "number")
        throw $.iae(px);
      x -= px;
      n = n0;
    }
    if (typeof py !== "number")
      throw $.iae(py);
    y -= py;
  }
};

$.Item$ = function(properties) {
  var t1 = new $.Item(null, null, null, "", "", false, null, null);
  t1.Vec2$2(0, 0);
  t1.GameObject$3(properties, 0, 0);
  return t1;
};

$.MainMenu$ = function() {
  var t1 = new $.MainMenu(null, null, null, null, null, null, true, 0, 0, null, false);
  t1.MainMenu$0();
  return t1;
};

$.MenuButton$ = function(text, action, x, y) {
  var t1 = new $.MenuButton(text, action, 192, 48, null, null);
  t1.Vec2$2(x, y);
  return t1;
};

$.MenuInterface$ = function(type, data) {
  var t1 = new $.MenuInterface(type, data, null, null, null);
  t1.MenuInterface$2(type, data);
  return t1;
};

$.Notification$ = function(text) {
  return new $.Notification(text, 300, 32, 0);
};

$.OverlayManager$ = function() {
  return new $.OverlayManager(7, 21, $.CONSTANT18, $.CONSTANT19);
};

$.Path$ = function(s, e, points, houseStart, houseEnd) {
  var t1 = new $.Path(null, null, points);
  t1.Path$5(s, e, points, houseStart, houseEnd);
  return t1;
};

$.PathNode$fromVec2 = function(v, path, house, start) {
  var t1, t2, t3;
  t1 = v.get$x();
  t2 = v.get$y();
  t3 = new $.PathNode(path, house, start, null, null);
  t3.Vec2$2(t1, t2);
  return t3;
};

$.SpawnPoint$ = function(a) {
  var t1 = new $.SpawnPoint(-1, 5, 0, 0, false, null, null, null, null, "", "", false, null, null);
  t1.Vec2$2(0, 0);
  t1.GameObject$3(a, 0, 0);
  return t1;
};

$.TileManager$ = function($location) {
  var t1 = new $.TileManager(null, null, $location);
  t1.TileManager$1($location);
  return t1;
};

$.UIManager$ = function() {
  var t1, t2;
  t1 = {};
  t2 = new $.UIManager(null, false, null, null, null, $.CONSTANT20);
  t2.UIManager$0(t1);
  return t2;
};

$.Vec2$ = function(x, y) {
  var t1 = new $.Vec2(null, null);
  t1.Vec2$2(x, y);
  return t1;
};

$.World$ = function() {
  var t1 = new $.World(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 256, 256, 0.6, 1, 25, null, null, 7, 10800, false, 200, 0, 0, 1, 100, 0, 0, 0, 2, 100, 0, true, null, null, 0, null, null, null, null, null, null, null, null, 1, 0, $.CONSTANT13, 0, null, 100, true, 0, 0, $.CONSTANT14, $.CONSTANT15, $.CONSTANT16, $.CONSTANT17, null, null, 0);
  t1.World$0();
  return t1;
};

$.res_loadImage = function($name, callback) {
  var t1, name0, img;
  t1 = {};
  t1.callback_0 = callback;
  name0 = "resources/" + $.S($name);
  img = $._ElementFactoryProvider_createElement_tag("img");
  img.get$onLoad().listen$1(new $.res_loadImage_anon(t1, img));
  img.get$onError().listen$1(new $.res_loadImage_anon0(t1));
  callback = t1.callback_0;
  t1.callback_0 = callback == null ? new $.res_loadImage_anon1() : callback;
  img.set$src(name0);
  return img;
};

$.res_loadFile = function($name, callback) {
  var name0 = "resources/" + $.S($name);
  if (callback == null)
    callback = new $.res_loadFile_anon();
  $.web_load(name0, callback);
};

$.res_loadSplitImage = function($name, callback, px, py) {
  var name0, img;
  name0 = "resources/" + $.S($name);
  img = $._ElementFactoryProvider_createElement_tag("img");
  img.get$onLoad().listen$1(new $.res_loadSplitImage_anon(callback, px, py, img));
  img.set$src(name0);
};

$.web_load = function(url, callback) {
  var req = new XMLHttpRequest();
  req.open$2("GET", url);
  req.setRequestHeader("Content-type", "text/plain");
  req.get$onReadyStateChange().listen$1(new $.web_load_anon(callback, req));
  req.send$0();
};

$.ListIterator$ = function(iterable) {
  return new $.ListIterator(iterable, $.length(iterable), 0, null);
};

$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.MappedListIterable$ = function(_source, _f) {
  return new $.MappedListIterable(_source, _f);
};

$.ToString_collectionToString = function(c) {
  var result = $.StringBuffer$("");
  $.ToString__emitCollection(c, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.ToString__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.ToString__containsRef(visiting, o))
      $.add(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.ToString__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && !!o.$isMap)
    if ($.ToString__containsRef(visiting, o))
      $.add(result, "{...}");
    else
      $.ToString__emitMap(o, result, visiting);
  else
    $.add(result, o);
};

$.ToString__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.ToString_mapToString = function(m) {
  var result = $.StringBuffer$("");
  $.ToString__emitMap(m, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach(m, new $.ToString__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$._ConstantMapKeyIterable$ = function(_map) {
  return new $._ConstantMapKeyIterable(_map);
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var scripts, len, i, script, src, t1;
  scripts = document.getElementsByTagName('script');
  for (len = scripts.length, i = 0; i < len; ++i) {
    script = scripts[i];
    src = script && script.src;
    t1 = $.getInterceptor(src);
    if (!(src == null) && t1.endsWith$1(src, "test_controller.js") !== true && t1.endsWith$1(src, "dart.js") !== true)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSArrayJSString(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.currentManagerId = t2;
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.$index(msg, "port") == null))
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove($globalState.managers, sender.get$id());
      sender.terminate$0();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true)
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.Primitives_printString($.toString(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.isWorker === true)
    $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePortImpl$();
  replyTo.send$2("spawned", $._Isolate_port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  worker.set$id(workerId);
  $.$$indexSet($globalState.managers, workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.TimerImpl$repeating = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(false, false, null);
  t1.TimerImpl$repeating$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && !(value === 0) || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  res = $.toString(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    t1 = $.getInterceptor(match);
    if (!(match == null)) {
      if (!(t1.$index(match, 2) == null))
        return parseInt(source, 16);
      if (!(t1.$index(match, 3) == null))
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (!(typeof radix === "number" && Math.floor(radix) === radix))
      throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    t1 = $.getInterceptor(match);
    if (!(match == null)) {
      if (radix === 10 && !(t1.$index(match, 3) == null))
        return parseInt(source, 10);
      if (radix < 10 || t1.$index(match, 3) == null) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        digitsPart = $.toLowerCase(t1.$index(match, 1));
        for (i = 0; i < digitsPart.length; ++i)
          if ($.CONSTANT1.charCodeAt$1(digitsPart, i) > maxCharCode)
            return handleError.call$1(source);
      }
    }
    radix = radix;
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_parseDouble = function(source, handleError) {
  var result;
  $.checkString(source);
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.CONSTANT7.get$isNaN(result) === true && $.$$eq(source, "NaN") !== true)
    return handleError.call$1(source);
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$$eq($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$JSString($name);
  return t1.charCodeAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_newFixedList = function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT2.get$iterator(codePoints); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.CONSTANT9.$shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT2.get$iterator(charCodes); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT0;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if ($.CONSTANT1.endsWith$1(message, "is null") === true || $.CONSTANT1.endsWith$1(message, "is undefined") === true || $.CONSTANT1.endsWith$1(message, "is null or undefined") === true || $.CONSTANT1.endsWith$1(message, "of undefined") === true || $.CONSTANT1.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.CONSTANT2.get$iterator(keyValuePairs);
  result = $.LinkedHashMap$();
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "WebKitMutationObserver")
    return "MutationObserver";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  return $name;
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "MouseScrollEvent")
    return "WheelEvent";
  if ($name === "OfflineResourceList")
    return "DOMApplicationCache";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "MouseWheelEvent")
    return "WheelEvent";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = !($name === "") && !($name === "Object") && !($name === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, $name, methods, $arguments) {
  var hasOwnPropertyFunction, tag, method, secondTag, proto;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  if (!$.isDartObject(obj)) {
    tag = $.getTypeNameOf(obj);
    method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
    if (method == null) {
      secondTag = $.alternateTag(obj, tag);
      if (!(secondTag == null))
        method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
    }
  } else
    method = null;
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT40));
  if (method == null)
    (function(){throw new TypeError($name + " is not a function");})();
  else {
    proto = Object.getPrototypeOf(obj);
    if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, $name))
      $.defineProperty(proto, $name, method);
  }
  return method.apply(obj, $arguments);
};

$.isDartObject = function(obj) {
  return ((obj) instanceof ($.Object));
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function($name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[$name];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT40)[$name];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, $name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, $name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer$("");
  if (isMultiLine === true)
    $.add(sb, "m");
  if (isCaseSensitive !== true)
    $.add(sb, "i");
  if (global === true)
    $.add(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, $length, patternLength, startIndex, position, t1, endIndex;
  result = $.List_List(0);
  $length = haystack.length;
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.CONSTANT1.indexOf$2(haystack, needle, startIndex);
    t1 = $.getInterceptor(position);
    if (t1.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t1.$add(position, patternLength);
    if ($.$$eq(endIndex, $length) === true)
      break;
    else
      startIndex = t1.$eq(position, endIndex) === true ? $.$$add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq($.CONSTANT1.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT1.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.CONSTANT1.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer$("");
      $length = receiver.length;
      result.add$1(to);
      for (i = 0; i < $length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        result.add$1(receiver[i]);
        result.add$1(to);
      }
      return result.toString$0();
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, t3, t4, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.iterator(futures); t3.moveNext$0() === true;) {
    t4 = t3.get$current();
    pos = t1.remaining_2;
    t1.remaining_2 = $.$$add(pos, 1);
    t4.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, pos));
  }
  if ($.$$eq(t1.remaining_2, 0) === true)
    return $._FutureImpl$immediate($.CONSTANT41);
  t1.values_1 = $.List_List$fixedLength(t1.remaining_2, null);
  t1.completer_0 = $._CompleterImpl$();
  return t1.completer_0.get$future();
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._asyncError = function(error, stackTrace, cause) {
  if (typeof error === "object" && error !== null && !!error.$isAsyncError)
    return error;
  if (cause == null)
    return $.AsyncError$(error, stackTrace);
  return $.AsyncError$withCause(error, stackTrace, cause);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, onData, onError, onDone, _unsubscribeOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _unsubscribeOnError, null, onData, onError, onDone);
  t1._BaseStreamSubscription$3(onData, onError, onDone);
  t1._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, _unsubscribeOnError);
  return t1;
};

$._MapStream$ = function(source, transform) {
  return new $._MapStream(transform, source);
};

$.Timer_Timer = function(duration, callback) {
  var t1, t2, milliseconds, zeroArgumentCallback;
  t1 = {};
  t2 = callback != null && !!callback.$is_TimerCallback0;
  if (!t2 && !(callback != null && !!callback.$is_TimerCallback1))
    throw $.$$throw($.ArgumentError$(callback));
  milliseconds = duration.inMilliseconds;
  if ($.$$lt(milliseconds, 0) === true)
    milliseconds = 0;
  t1.timer_0 = null;
  zeroArgumentCallback = t2 ? callback : new $.Timer_Timer_anon(t1, callback);
  t1.timer_0 = $.TimerImpl$(milliseconds, zeroArgumentCallback);
  return t1.timer_0;
};

$.Timer_Timer$repeating = function(duration, callback) {
  var milliseconds = duration.inMilliseconds;
  if ($.$$lt(milliseconds, 0) === true)
    milliseconds = 0;
  return $.TimerImpl$repeating(milliseconds, callback);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !src.$isJavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = $.getInterceptor$JSArrayJSString(src); i >= srcStart; --i, --j)
      $.CONSTANT2.$indexSet(dst, j, t1.$index(src, i));
  else
    for (t1 = $.getInterceptor$JSArrayJSString(src), j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.CONSTANT2.$indexSet(dst, j, t1.$index(src, i));
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_any = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.moveNext$0() === true;)
    if (f.call$1(t1.get$current()) === true)
      return true;
  return false;
};

$._HashMapTable$ = function() {
  var t1 = new $._HashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.HashMap$ = function() {
  var t1 = new $.HashMap($._HashMapTable$());
  t1.HashMap$0();
  return t1;
};

$._HashTableKeyIterable$ = function(hashTable) {
  return new $._HashTableKeyIterable(hashTable);
};

$._HashTableKeyIterator$ = function(hashTable) {
  return new $._HashTableKeyIterator(hashTable, hashTable.get$_modificationCount(), 0, null);
};

$._HashTableValueIterable$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterable(_entryIndex, hashTable);
};

$._HashTableValueIterator$ = function(hashTable, _entryIndex) {
  return new $._HashTableValueIterator(_entryIndex, hashTable, hashTable._modificationCount, 0, null);
};

$._LinkedHashMapTable$ = function() {
  var t1 = new $._LinkedHashMapTable(null, 8, 0, 0, 0, null);
  t1._HashTable$1(8);
  return t1;
};

$.LinkedHashMap$ = function() {
  var t1 = new $.LinkedHashMap($._LinkedHashMapTable$());
  t1.LinkedHashMap$0();
  return t1;
};

$._LinkedHashTableKeyIterable$ = function(_table) {
  return new $._LinkedHashTableKeyIterable(_table);
};

$._LinkedHashTableKeyIterator$ = function(hashTable) {
  return new $._LinkedHashTableKeyIterator(hashTable, hashTable.get$_modificationCount(), hashTable._next$1(0), null);
};

$._LinkedHashTableValueIterable$ = function(_hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterable(_hashTable, _valueIndex);
};

$._LinkedHashTableValueIterator$ = function(hashTable, _valueIndex) {
  return new $._LinkedHashTableValueIterator(_valueIndex, hashTable, hashTable.get$_modificationCount(), hashTable._next$1(0), null);
};

$.Queue_Queue = function() {
  return $.ListQueue$(null);
};

$.ListQueue$ = function(initialCapacity) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  t1.ListQueue$1(initialCapacity);
  return t1;
};

$.ListQueue__isPowerOf2 = function(number) {
  var t1 = $.getInterceptor$JSNumber(number);
  return t1.$and(number, t1.$sub(number, 1)) === 0;
};

$.ListQueue__nextPowerOf2 = function(number) {
  var number0, nextNumber;
  number0 = $.$$sub($.$$shl(number, 2), 1);
  if (number0 !== (number0 | 0))
    return $.ListQueue__nextPowerOf2$bailout(1, number0);
  for (number = number0; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
};

$.ListQueue__nextPowerOf2$bailout = function(state0, number0) {
  var number, t1, nextNumber;
  for (number = number0; true; number = nextNumber) {
    t1 = $.getInterceptor$JSNumber(number);
    nextNumber = t1.$and(number, t1.$sub(number, 1));
    if (nextNumber === 0)
      return number;
  }
};

$._ListQueueIterator$ = function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
};

$.double_parse = function(source, handleError) {
  return $.Primitives_parseDouble(source, handleError);
};

$.Duration$ = function(days, hours, milliseconds, minutes, seconds) {
  return new $.Duration($.$$add($.$$add($.$$add($.$$add($.$$mul(days, 86400000), $.$$mul(hours, 3600000)), $.$$mul(minutes, 60000)), $.$$mul(seconds, 1000)), milliseconds));
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll($.replaceAll($.replaceAll($.CONSTANT1.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.RangeError$range = function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(pattern, errmsg) {
  return new $.IllegalJSRegExpException("Illegal pattern: " + $.S(pattern) + ", " + errmsg);
};

$.IntegerDivisionByZeroException$ = function() {
  return new $.IntegerDivisionByZeroException();
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function($length) {
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return new Array($length);
};

$.List_List$fixedLength = function($length, fill) {
  var result, t1, i;
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  result = $.Primitives_newFixedList($length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, $length, fill, result);
  if ($.$$eq($length, 0) !== true && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, $length, fill, result) {
  var t1, i;
  if ($.$$eq($length, 0) !== true && !(fill == null))
    for (t1 = $.getInterceptor$JSArrayJSString(result), i = 0; $.CONSTANT9.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $.HashMap$();
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!charCodes.constructor === Array)
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringBuffer$ = function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
  return document.createElement(tag);
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = document.$$dom_createElement$1("img");
  if (!(src == null))
    e.set$src(src);
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains($._Device_userAgent(), "Opera", 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains($._Device_userAgent(), "MSIE", 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains($._Device_userAgent(), "Firefox", 0);
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  if (w === window)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.length(array), -1, null);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.forEach(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$JSArrayJSString(a);
  t2 = $.getInterceptor$JSNumber(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$.parse = function(json, reviver) {
  var listener = reviver == null ? $.BuildJsonListener$() : $.ReviverJsonListener$(reviver);
  $.JsonParser$(json, listener).parse$0();
  return listener.get$result();
};

$.BuildJsonListener$ = function() {
  return new $.BuildJsonListener([], null, null, null);
};

$.ReviverJsonListener$ = function(reviver) {
  return new $.ReviverJsonListener(reviver, [], null, null, null);
};

$.JsonParser$ = function(source, listener) {
  return new $.JsonParser(source, listener);
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer$("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return output.toString$0();
};

$._JsonStringifier_escape = function(sb, s) {
  var t1, $length, charCodes, needsEscape, i, charCode, t2;
  t1 = $.getInterceptor$JSArrayJSString(s);
  $length = t1.get$length(s);
  charCodes = $.List_List(0);
  for (needsEscape = false, i = 0; $.CONSTANT9.$lt(i, $length); ++i) {
    charCode = t1.charCodeAt$1(s, i);
    if (charCode < 32) {
      charCodes.push(92);
      switch (charCode) {
        case 8:
          charCodes.push(98);
          break;
        case 9:
          charCodes.push(116);
          break;
        case 10:
          charCodes.push(110);
          break;
        case 12:
          charCodes.push(102);
          break;
        case 13:
          charCodes.push(114);
          break;
        default:
          charCodes.push(117);
          t2 = $.CONSTANT9.$shr(charCode, 12) & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          t2 = $.CONSTANT9.$shr(charCode, 8) & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          t2 = $.CONSTANT9.$shr(charCode, 4) & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          t2 = charCode & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          break;
      }
      needsEscape = true;
    } else if (charCode === 34 || charCode === 92) {
      charCodes.push(92);
      charCodes.push(charCode);
      needsEscape = true;
    } else
      charCodes.push(charCode);
  }
  $.add(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$.Random_Random = function(seed) {
  return $.CONSTANT31;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.$$throw.$is_TimerCallback1 = true;
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.DartError_toStringWrapper.$is_TimerCallback0 = true;
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullDataHandler.$is_TimerCallback1 = true;
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$._nullDoneHandler.$is_TimerCallback0 = true;
Isolate.$finishClasses($$);
$$ = {};
$.Node = {builtin$cls: 'Node'};
$.List = {builtin$cls: 'List'};
$.num = {builtin$cls: 'num'};
$.Match = {builtin$cls: 'Match'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.String = {builtin$cls: 'String'};
$.bool = {builtin$cls: 'bool'};
$.Touch = {builtin$cls: 'Touch'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.AudioElement = {builtin$cls: 'AudioElement'};
$.Function = {builtin$cls: 'Function'};
$.$int = {builtin$cls: '$int'};
$.ImageElement = {builtin$cls: 'ImageElement'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT42 = Isolate.makeConstantList([0, 1, 1, 0]);
$.CONSTANT24 = new Isolate.$isolateProperties.EventStreamProvider("touchmove");
$.CONSTANT43 = Isolate.makeConstantList([0, 0, 0, 1]);
$.CONSTANT17 = Isolate.makeConstantList([2, 2, 3, -2, -2]);
$.CONSTANT44 = Isolate.makeConstantList([0, 0, 1, 0]);
$.CONSTANT34 = Isolate.makeConstantList([6, 12, 8]);
$.CONSTANT45 = Isolate.makeConstantList([0, 0, 0, 0]);
$.CONSTANT46 = Isolate.makeConstantList([0, 1, 0, 0]);
$.CONSTANT47 = Isolate.makeConstantList(["wander", "nice", "hostile", "hostile-wander", "mean", "scared", "citizen", "guard-attack", "guard-wander", "guard"]);
$.CONSTANT48 = new Isolate.$isolateProperties.ConstantMap(10, {wander: true, nice: true, hostile: true, "hostile-wander": true, mean: true, scared: true, citizen: true, "guard-attack": true, "guard-wander": true, guard: true}, Isolate.$isolateProperties.CONSTANT47);
$.CONSTANT8 = new Isolate.$isolateProperties._LinkedHashTableHeadMarker();
$.CONSTANT21 = new Isolate.$isolateProperties.EventStreamProvider("click");
$.CONSTANT49 = Isolate.makeConstantList([0, 1, 1, 1]);
$.CONSTANT28 = new Isolate.$isolateProperties.EventStreamProvider("mousedown");
$.CONSTANT35 = Isolate.makeConstantList([2, 4, 5]);
$.CONSTANT50 = Isolate.makeConstantList([1, 1, 0, 0]);
$.CONSTANT51 = Isolate.makeConstantList([1, 1, 1, 0]);
$.CONSTANT36 = Isolate.makeConstantList(["Why don't you just go?", "Get outta here!", "Get out!", "Why won't you help us?", "It's outsiders like you that caused this!"]);
$.CONSTANT52 = Isolate.makeConstantList(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"]);
$.CONSTANT30 = new Isolate.$isolateProperties.EventStreamProvider("keydown");
$.CONSTANT53 = Isolate.makeConstantList([1, 0, 0, 0]);
$.CONSTANT41 = Isolate.makeConstantList([]);
$.CONSTANT54 = Isolate.makeConstantList([1, 0, 0, 1]);
$.CONSTANT55 = Isolate.makeConstantList([1, 0, 1, 1]);
$.CONSTANT3 = new Isolate.$isolateProperties.Duration(0);
$.CONSTANT10 = new Isolate.$isolateProperties.EventStreamProvider("error");
$.CONSTANT56 = Isolate.makeConstantList([0, 1, 0, 1]);
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT37 = Isolate.makeConstantList(["Hi!", "Hiya!", "Hello!", "It's not so scary with you around!", "Thanks for the help!"]);
$.CONSTANT57 = Isolate.makeConstantList([0, 0, 1, 1]);
$.CONSTANT58 = Isolate.makeConstantList([1, 1, 0, 1]);
$.CONSTANT25 = new Isolate.$isolateProperties.EventStreamProvider("touchstart");
$.CONSTANT59 = Isolate.makeConstantList(["backspace", "enter", "shift", "ctrl", "alt", "capslock", "esc", "space", "_0", "zero", "_1", "one", "_2", "two", "_3", "three", "_4", "four", "_5", "five", "_6", "six", "_7", "seven", "_8", "eight", "_9", "nine", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "semicolon", "equal", "comma", "hyphen", "dash", "minus", "period", "dot", "slash", "forwardslash", "grave", "backtick", "bracketleft", "backslash", "bracketright", "singlequote", "exclamation", "at", "ampersat", "pound", "dollar", "mod", "modulo", "percent", "caret", "ampersand", "asterisk", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "colon", "plus", "pointbracketleft", "trianglebracketleft", "underscore", "pointbracketright", "trianglebracketright", "question", "questionmark", "approx", "tilde", "curleybraceleft", "pipe", "curleybraceright", "doublequote", "left", "up", "right", "down", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12"]);
$.CONSTANT20 = new Isolate.$isolateProperties.ConstantMap(138, {backspace: 8, enter: 13, shift: 16, ctrl: 17, alt: 18, capslock: 20, esc: 27, space: 32, _0: 48, zero: 48, _1: 49, one: 49, _2: 50, two: 50, _3: 51, three: 51, _4: 52, four: 52, _5: 53, five: 53, _6: 54, six: 54, _7: 55, seven: 55, _8: 56, eight: 56, _9: 57, nine: 57, a: 65, b: 66, c: 67, d: 68, e: 69, f: 70, g: 71, h: 72, i: 73, j: 74, k: 75, l: 76, m: 77, n: 78, o: 79, p: 80, q: 81, r: 82, s: 83, t: 84, u: 85, v: 86, w: 87, x: 88, y: 89, z: 90, semicolon: 186, equal: 187, comma: 188, hyphen: 189, dash: 189, minus: 189, period: 190, dot: 190, slash: 191, forwardslash: 191, grave: 192, backtick: 192, bracketleft: 219, backslash: 220, bracketright: 221, singlequote: 222, exclamation: 49, at: 50, ampersat: 50, pound: 51, dollar: 52, mod: 53, modulo: 53, percent: 53, caret: 54, ampersand: 55, asterisk: 56, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, colon: 186, plus: 187, pointbracketleft: 188, trianglebracketleft: 188, underscore: 189, pointbracketright: 190, trianglebracketright: 190, question: 191, questionmark: 191, approx: 192, tilde: 192, curleybraceleft: 219, pipe: 220, curleybraceright: 221, doublequote: 222, left: 37, up: 38, right: 39, down: 40, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123}, Isolate.$isolateProperties.CONSTANT59);
$.CONSTANT22 = new Isolate.$isolateProperties.EventStreamProvider("keypress");
$.CONSTANT16 = Isolate.makeConstantList([1000, 5251, 6819, 8114, 6860]);
$.CONSTANT60 = Isolate.makeConstantList([1, 0, 1, 0]);
$.CONSTANT = new Isolate.$isolateProperties.EventStreamProvider("load");
$.CONSTANT61 = Isolate.makeConstantList([1, 1, 1, 1]);
$.CONSTANT29 = new Isolate.$isolateProperties.EventStreamProvider("keyup");
$.CONSTANT40 = new Isolate.$isolateProperties.Object();
$.CONSTANT23 = new Isolate.$isolateProperties.EventStreamProvider("touchend");
$.CONSTANT19 = Isolate.makeConstantList(["#ebddcb", "#d3b7b2", "#bb98ad", "#806593"]);
$.CONSTANT39 = Isolate.makeConstantList(["Ahhhh!", "Look out!", "Run!", "AHHHH!", "Woah!"]);
$.CONSTANT13 = Isolate.makeConstantList([120, 120, 120, 100, 80, 60, 50, 40, 35, 30, 25, 20, 20, 20, 20, 20, 10, 5, 5, 5, 5]);
$.CONSTANT18 = Isolate.makeConstantList(["#3e3e56", "#818fb6", "#b2cdec", "#cbe3f6"]);
$.CONSTANT32 = new Isolate.$isolateProperties.ConstantMap(16, {"0": Isolate.$isolateProperties.CONSTANT45, "1": Isolate.$isolateProperties.CONSTANT43, "2": Isolate.$isolateProperties.CONSTANT44, "3": Isolate.$isolateProperties.CONSTANT57, "4": Isolate.$isolateProperties.CONSTANT46, "5": Isolate.$isolateProperties.CONSTANT56, "6": Isolate.$isolateProperties.CONSTANT42, "7": Isolate.$isolateProperties.CONSTANT49, "8": Isolate.$isolateProperties.CONSTANT53, "9": Isolate.$isolateProperties.CONSTANT54, a: Isolate.$isolateProperties.CONSTANT60, b: Isolate.$isolateProperties.CONSTANT55, c: Isolate.$isolateProperties.CONSTANT50, d: Isolate.$isolateProperties.CONSTANT58, e: Isolate.$isolateProperties.CONSTANT51, f: Isolate.$isolateProperties.CONSTANT61}, Isolate.$isolateProperties.CONSTANT52);
$.CONSTANT12 = new Isolate.$isolateProperties.EventStreamProvider("readystatechange");
$.CONSTANT6 = new Isolate.$isolateProperties.JSNull();
$.CONSTANT2 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT7 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT9 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT15 = Isolate.makeConstantList([2400, 4581, 4329, 2324, 8221]);
$.CONSTANT1 = new Isolate.$isolateProperties.JSString();
$.CONSTANT33 = Isolate.makeConstantList(["Help!", "Where is everyone?", "Where do I go?", "Please help me!", "Where am I?"]);
$.CONSTANT11 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT26 = new Isolate.$isolateProperties.EventStreamProvider("mousemove");
$.CONSTANT38 = Isolate.makeConstantList(["Can you take me somewhere safe?", "Please help me!", "Please take me home!"]);
$.CONSTANT31 = new Isolate.$isolateProperties._Random();
$.CONSTANT14 = Isolate.makeConstantList(["This is Big Island", "At day, all is peaceful", "But come night, horrific monsters of the black appear", "The ever-curious villagers often stray into the darkness", "Do you have what it takes to defend them?"]);
$.CONSTANT27 = new Isolate.$isolateProperties.EventStreamProvider("mouseup");
$.CONSTANT4 = new Isolate.$isolateProperties._DeadEntry();
$.CONSTANT5 = new Isolate.$isolateProperties._NullKey();
$.DEBUG = false;
$.niceFactor = null;
$.BLANK_IMAGE = null;
$.tagEvents = null;
$.removalOnDeath = Isolate.$isolateProperties.CONSTANT48;
$.tags = null;
$.tagMap = null;
$.classMap = null;
$.animationMap = null;
$.SCREEN_WIDTH = null;
$.SCREEN_HEIGHT = null;
$.RENDER_DISTANCE = null;
$.RESOLUTION = 1;
$.event = null;
$.audio = null;
$.notifications = null;
$.world = null;
$.CANVAS_OFFSETX = null;
$.CANVAS_OFFSETY = null;
$.rpatCount = 0;
$.game = null;
$.menu = null;
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$._cachedBrowserPrefix = null;
$.$$mod = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mod(receiver, a0);
};
$.$$and = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$and(receiver, a0);
};
$.$$mul = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mul(receiver, a0);
};
$.$$add = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$add(receiver, a0);
};
$.$$sub = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$sub(receiver, a0);
};
$.$$div = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$div(receiver, a0);
};
$.$$lt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$lt(receiver, a0);
};
$.$$shl = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shl(receiver, a0);
};
$.$$le = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$le(receiver, a0);
};
$.$$eq = function(receiver, a0) {
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$$gt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$gt(receiver, a0);
};
$.$$ge = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$ge(receiver, a0);
};
$.abs = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).abs$0(receiver);
};
$.add = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).add$1(receiver, a0);
};
$.addLast = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addLast$1(receiver, a0);
};
$.allMatches = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).allMatches$1(receiver, a0);
};
$.any = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).any$1(receiver, a0);
};
$.charCodeAt = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).charCodeAt$1(receiver, a0);
};
$.contains = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).contains$2(receiver, a0, a1);
};
$.elementAt = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).elementAt$1(receiver, a0);
};
$.forEach = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).forEach$1(receiver, a0);
};
$.hashCode = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.indexOf = function(receiver, a0) {
  return $.getInterceptor$JSArrayJSString(receiver).indexOf$1(receiver, a0);
};
$.isEmpty = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).get$isEmpty(receiver);
};
$.length0 = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).length$0(receiver);
};
$.length = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).get$length(receiver);
};
$.map = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).map$1(receiver, a0);
};
$.remainder = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).remainder$1(receiver, a0);
};
$.remove = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).remove$1(receiver, a0);
};
$.removeLast = function(receiver) {
  return $.getInterceptor$JSArray(receiver).removeLast$0(receiver);
};
$.removeRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).removeRange$2(receiver, a0, a1);
};
$.replaceAll = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).replaceAll$2(receiver, a0, a1);
};
$.split = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).split$1(receiver, a0);
};
$.splitChars = function(receiver) {
  return $.getInterceptor$JSString(receiver).splitChars$0(receiver);
};
$.substring0 = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).substring$1(receiver, a0);
};
$.substring = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).substring$2(receiver, a0, a1);
};
$.toInt = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).toInt$0(receiver);
};
$.toList = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toList$0(receiver);
};
$.toLowerCase = function(receiver) {
  return $.getInterceptor$JSString(receiver).toLowerCase$0(receiver);
};
$.toString = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.toUpperCase = function(receiver) {
  return $.getInterceptor$JSString(receiver).toUpperCase$0(receiver);
};
$.$$index = function(receiver, a0) {
  return $.getInterceptor$JSArrayJSString(receiver).$index(receiver, a0);
};
$.$$indexSet = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).$indexSet(receiver, a0, a1);
};
$.$$xor = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$xor(receiver, a0);
};
$.iterator = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$iterator(receiver);
};
$.$$negate = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).$negate(receiver);
};
$.$$or = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$or(receiver, a0);
};
$.$$tdiv = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$tdiv(receiver, a0);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArrayJSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "random_number_generator", "random_number_generator", "get$random_number_generator", function() {
  return $.Random_Random(null);
});
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "quoteRegExp", "quoteRegExp", "get$quoteRegExp", function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "type=",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Blob", {"": "type>"});

$.$defineNativeClass("HTMLBodyElement", {
  get$onError: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "type="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$2: function(contextId, attrs) {
    var t1 = $ === attrs;
    if (t1)
      attrs = null;
    if (!t1)
      return this.getContext(contextId, $.convertDartToNative_Dictionary(attrs));
    return this.getContext(contextId);
  },
  getContext$1: function(contextId) {
    return this.getContext$2(contextId, $);
  },
  toDataUrl$2: function(type, quality) {
    return this.toDataURL(type,quality);
  },
  toDataUrl$1: function(type) {
    return this.toDataURL(type);
  }
});

$.$defineNativeClass("CanvasRenderingContext", {"": "canvas>"});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,font<,globalAlpha=,lineCap<,lineWidth<,strokeStyle<,textAlign<",
  arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
    return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
  },
  beginPath$0: function() {
    return this.beginPath();
  },
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  closePath$0: function() {
    return this.closePath();
  },
  createPattern$2: function(canvas_OR_image, repetitionType) {
    return this.createPattern(canvas_OR_image,repetitionType);
  },
  drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
    return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
  },
  drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
    return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
  },
  fill$1: function(winding) {
    return this.fill(winding);
  },
  fill$0: function() {
    return this.fill();
  },
  fillRect$4: function(x, y, width, height) {
    return this.fillRect(x,y,width,height);
  },
  fillText$4: function(text, x, y, maxWidth) {
    return this.fillText(text,x,y,maxWidth);
  },
  fillText$3: function(text, x, y) {
    return this.fillText(text, x, y);
  },
  lineTo$2: function(x, y) {
    return this.lineTo(x,y);
  },
  measureText$1: function(text) {
    return this.measureText(text);
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  rect$4: function(x, y, width, height) {
    return this.rect(x,y,width,height);
  },
  restore$0: function() {
    return this.restore();
  },
  rotate$1: function(angle) {
    return this.rotate(angle);
  },
  save$0: function() {
    return this.save();
  },
  scale$2: function(sx, sy) {
    return this.scale(sx,sy);
  },
  setTransform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.setTransform(m11,m12,m21,m22,dx,dy);
  },
  stroke$0: function() {
    return this.stroke();
  },
  strokeRect$5: function(x, y, width, height, lineWidth) {
    return this.strokeRect(x,y,width,height,lineWidth);
  },
  strokeRect$4: function(x, y, width, height) {
    return this.strokeRect(x, y, width, height);
  },
  translate$2: function(tx, ty) {
    return this.translate(tx,ty);
  }
});

$.$defineNativeClass("CharacterData", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this.getPropertyValue(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  setProperty$2: function(propertyName, value) {
    return this.setProperty$3(propertyName, value, null);
  },
  get$animation: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "animation");
  },
  set$animation: function(value) {
    this.setProperty$3($.S($._browserPrefix()) + "animation", value, "");
  },
  set$background: function(value) {
    this.setProperty$3("background", value, "");
  },
  set$cursor: function(value) {
    this.setProperty$3("cursor", value, "");
  },
  set$font: function(value) {
    this.setProperty$3("font", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  set$left: function(value) {
    this.setProperty$3("left", value, "");
  },
  set$src: function(value) {
    this.setProperty$3("src", value, "");
  },
  set$textAlign: function(value) {
    this.setProperty$3("text-align", value, "");
  },
  set$top: function(value) {
    this.setProperty$3("top", value, "");
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("Document", {"": "$$dom_body:body~,readyState>,$$dom_webkitIsFullScreen:webkitIsFullScreen~",
  $$dom_createElement$1: function(tagName) {
    return this.createElement(tagName);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  $$dom_webkitCancelFullScreen$0: function() {
    return this.webkitCancelFullScreen();
  },
  get$onClick: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onError: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT30.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT22.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT29.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT28.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT26.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT23.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT24.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT25.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors))
      return this.$$dom_getElementById$1($.CONSTANT1.substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  }
});

$.$defineNativeClass("DocumentFragment", {
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "id>,style>",
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  translate$2: function(arg0, arg1) {
    return this.translate.call$2(arg0, arg1);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onClick: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onError: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onError")) {
      return $.CONSTANT10.forTarget$1(this);
    } else
      return Object.prototype.get$onError.call(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT30.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT22.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT29.forTarget$1(this);
  },
  get$onLoad: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onLoad")) {
      return $.CONSTANT.forTarget$1(this);
    } else
      return Object.prototype.get$onLoad.call(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT28.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT26.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT23.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT24.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT25.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,src<,type=,width="});

$.$defineNativeClass("Event", {"": "type>",
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "type>"});

$.$defineNativeClass("FileException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.num]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.num]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.num]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.num]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>",
  action$0: function() {
    return this.action.call$0();
  },
  length$0: function() {
    return this.length.call$0();
  },
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLDocument", {
  get$body: function() {
    return $.document().get$$$dom_body();
  },
  register$2: function(tagName, elementClass) {
    throw $.$$throw($._ExceptionImplementation$("Not yet implemented"));
  },
  webkitCancelFullScreen$0: function() {
    document.$$dom_webkitCancelFullScreen$0();
  },
  get$webkitIsFullScreen: function() {
    return $.document().get$$$dom_webkitIsFullScreen();
  }
});

$.$defineNativeClass("XMLHttpRequest", {"": "readyState>,responseText>,status>",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  open$5: function(method, url, async, user, password) {
    return this.open(method,url,async,user,password);
  },
  open$2: function(method, url) {
    return this.open(method, url);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  send$1: function(data) {
    return this.send(data);
  },
  send$0: function() {
    return this.send();
  },
  get$onError: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onReadyStateChange: function() {
    return $.CONSTANT12.forTarget$1(this);
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("XMLHttpRequestUpload", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onError: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,src<,width="});

$.$defineNativeClass("HTMLImageElement", {"": "height=,src<,width=,x>,y>",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "height=,pattern>,src<,type=,width="});

$.$defineNativeClass("Int16Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("KeyboardEvent", {
  get$keyCode: function() {
    return this.keyCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type="});

$.$defineNativeClass("HTMLLinkElement", {"": "type="});

$.$defineNativeClass("Location", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "error>,paused>,readyState>,src<",
  play$0: function() {
    return this.play();
  }
});

$.$defineNativeClass("MessageEvent", {"": "ports>",
  get$source: function() {
    return $._convertNativeToDart_Window(this.source);
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {
  remove$0: function() {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "start>,type="});

$.$defineNativeClass("HTMLObjectElement", {"": "height=,type=,width="});

$.$defineNativeClass("HTMLOutputElement", {"": "type>"});

$.$defineNativeClass("RangeException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "src<,type="});

$.$defineNativeClass("HTMLSelectElement", {"": "length>,type>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "src<,type="});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("SpeechRecognitionEvent", {"": "result>"});

$.$defineNativeClass("SpeechRecognitionResult", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("StorageEvent", {
  key$1: function(arg0) {
    return this.key.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLStyleElement", {"": "type="});

$.$defineNativeClass("HTMLTextAreaElement", {"": "type>"});

$.$defineNativeClass("TextMetrics", {"": "width>"});

$.$defineNativeClass("Touch", {"": "pageX>,pageY>"});

$.$defineNativeClass("TouchEvent", {"": "changedTouches>,touches>"});

$.$defineNativeClass("TouchList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Touch]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Touch]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLTrackElement", {"": "readyState>,src<"});

$.$defineNativeClass("TransitionEvent", {
  propertyName$0: function() {
    return this.propertyName.call$0();
  }
});

$.$defineNativeClass("UIEvent", {"": "pageX>,pageY>"});

$.$defineNativeClass("Uint16Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  map$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("map$1")) {
      return $.MappedListIterable$(this, f);
    } else
      return Object.prototype.map$1.call(this, f);
  },
  any$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("any$1")) {
      return $.IterableMixinWorkaround_any(this, f);
    } else
      return Object.prototype.any$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return $.$$eq(this.get$length(), 0);
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  elementAt$1: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("elementAt$1")) {
      return this.$index(index);
    } else
      return Object.prototype.elementAt$1.call(this, index);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, this.get$length());
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  removeRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeRange$2")) {
      throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
    } else
      return Object.prototype.removeRange$2.call(this, start, rangeLength);
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.$int]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.$int]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {"": "navigator>,status>",
  open$3: function(url, $name, options) {
    if (options == null)
      return $._DOMWindowCrossFrame__createSafe(this.open(url,$name));
    else
      return $._DOMWindowCrossFrame__createSafe(this.open(url,$name,options));
  },
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onClick: function() {
    return $.CONSTANT21.forTarget$1(this);
  },
  get$onError: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT30.forTarget$1(this);
  },
  get$onKeyPress: function() {
    return $.CONSTANT22.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT29.forTarget$1(this);
  },
  get$onLoad: function() {
    return $.CONSTANT.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT28.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT26.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT27.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT23.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT24.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT25.forTarget$1(this);
  }
});

$.$defineNativeClass("XPathException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: function() {
    return true;
  },
  $asList: function() {
    return function () { return [$.Node]; };
  },
  $isCollection: function() {
    return true;
  },
  $asCollection: function() {
    return function () { return [$.Node]; };
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $asJavaScriptIndexingBehavior: function() {
    return null;
  }
});

$.$defineNativeClass("WebKitTransitionEvent", {
  propertyName$0: function() {
    return this.propertyName.call$0();
  }
});

$.$defineNativeClass("SVGCircleElement", {"": "r>"});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,result>,width>,x>,y>",
  scale$2: function(arg0, arg1) {
    return this.scale.call$2(arg0, arg1);
  }
});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPolygonElement", {"": "points>"});

$.$defineNativeClass("SVGPolylineElement", {"": "points>"});

$.$defineNativeClass("SVGRadialGradientElement", {"": "r>"});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGScriptElement", {"": "type="});

$.$defineNativeClass("SVGStyleElement", {"": "type="});

$.$defineNativeClass("SVGElement", {
  get$id: function() {
    return this.id;
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>",
  rotate$1: function(arg0) {
    return this.rotate.call$1(arg0);
  }
});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,result>,width>,x>,y>"});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x=,y="});

// 112 dynamic classes.
// 252 classes
// 24 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement", v1__SVGComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement", v2_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v3_SvgElement = [v0_TextPositioningElement, v1__SVGComponentTransferFunctionElement, "SVGElement|SVGStyledElement|SVGAElement|SVGTextContentElement|SVGTextPathElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFESpecularLightingElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGForeignObjectElement|SVGGElement|SVGImageElement|SVGLineElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGMarkerElement|SVGMaskElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGStopElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGFEDropShadowElement|SVGGlyphRefElement|SVGMissingGlyphElement|SVGAnimationElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGAnimateColorElement|SVGFEDistantLightElement|SVGFEMergeNodeElement|SVGFEPointLightElement|SVGFESpotLightElement|SVGMetadataElement|SVGScriptElement|SVGStyleElement|SVGViewElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGCursorElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGMPathElement|SVGVKernElement|SVGHKernElement"].join("|"), v4_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement"].join("|"), v5_DocumentFragment = "DocumentFragment|ShadowRoot", v6_CharacterData = "CharacterData|Text|CDATASection|Comment", v7_Document = "Document|SVGDocument|HTMLDocument", v8_UIEvent = "UIEvent|TextEvent|TouchEvent|MouseEvent|WheelEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent", v9_Node = [v4_Element, v5_DocumentFragment, v6_CharacterData, v7_Document, "Node|Notation|ProcessingInstruction|Attr|DocumentType|EntityReference"].join("|");
  $.dynamicSetMetadata([["HTMLMediaElement", v2_MediaElement], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGComponentTransferFunctionElement", v1__SVGComponentTransferFunctionElement], ["SVGElement", v3_SvgElement], ["Element", v4_Element], ["DocumentFragment", v5_DocumentFragment], ["CharacterData", v6_CharacterData], ["Document", v7_Document], ["Node", v9_Node], ["NodeList", "NodeList|RadioNodeList"], ["Blob", "Blob|File"], ["CanvasRenderingContext", "CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D"], ["UIEvent", v8_UIEvent], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["Event", [v8_UIEvent, "Event|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitTransitionEvent|IDBVersionChangeEvent|BeforeLoadEvent|CloseEvent|WebKitAnimationEvent|CustomEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|HashChangeEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent"].join("|")], ["EventTarget", [v9_Node, "EventTarget|DOMWindow|XMLHttpRequest|XMLHttpRequestUpload"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"]]);
})();

$.main.call$0 = $.main;

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] =
          new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] =
          new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}
//@ sourceMappingURL=lpc0.dart.js.map
